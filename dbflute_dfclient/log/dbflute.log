2020-04-10 00:59:30,861 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2020-04-10 00:59:30,861 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2020-04-10 00:59:30,877 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2020-04-10 00:59:30,893 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2020-04-10 00:59:30,893 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2020-04-10 00:59:30,893 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2020-04-10 00:59:34,676 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-10 00:59:34,676 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-10 00:59:34,676 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-10 00:59:34,676 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-10 00:59:34,770 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-10 00:59:36,552 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-10 00:59:36,552 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-10 00:59:36,599 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2020-04-10 00:59:36,599 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2020-04-10 00:59:36,599 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2020-04-10 00:59:36,599 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2020-04-10 00:59:36,599 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2020-04-10 00:59:36,599 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2020-04-10 00:59:36,646 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-10 00:59:36,661 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-10 00:59:36,661 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-10 00:59:36,880 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table product
2020-04-10 00:59:37,005 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table task
2020-04-10 00:59:37,146 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table task_type
2020-04-10 00:59:37,287 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table user
2020-04-10 00:59:37,318 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table product
2020-04-10 00:59:37,427 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table task
2020-04-10 00:59:37,521 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table task_type
2020-04-10 00:59:37,599 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table user
2020-04-10 00:59:37,740 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2020-04-10 00:59:37,740 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2020-04-10 00:59:37,740 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2020-04-10 00:59:37,740 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2020-04-10 00:59:37,740 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2020-04-10 00:59:37,740 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2020-04-10 00:59:37,740 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2020-04-10 00:59:37,755 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE `product` (
	`product_id` INT(11) NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL COLLATE 'utf8_general_ci',
	`description` TEXT(65535) NULL DEFAULT NULL COLLATE 'utf8_general_ci',
	`price` DOUBLE(22,0) NOT NULL,
	`unit` VARCHAR(50) NOT NULL DEFAULT 'yen' COLLATE 'utf8_general_ci',
	`image` VARCHAR(50) NULL DEFAULT NULL COLLATE 'utf8_general_ci',
	`created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`product_id`) USING BTREE
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
AUTO_INCREMENT=0
2020-04-10 00:59:38,130 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=1 failure=0
2020-04-10 00:59:38,130 [main] INFO  (DfSqlFileFireMan#fire():93) - Create Schema: success=1, failure=0 (in 1 files)
2020-04-10 00:59:38,224 [main] INFO  (DfLoadDataProcess#execute():130) - 
2020-04-10 00:59:38,224 [main] INFO  (DfLoadDataProcess#execute():131) - * * * * * * * * * * *
2020-04-10 00:59:38,224 [main] INFO  (DfLoadDataProcess#execute():132) - *                   *
2020-04-10 00:59:38,224 [main] INFO  (DfLoadDataProcess#execute():133) - * Load Data         *
2020-04-10 00:59:38,224 [main] INFO  (DfLoadDataProcess#execute():134) - *                   *
2020-04-10 00:59:38,224 [main] INFO  (DfLoadDataProcess#execute():135) - * * * * * * * * * * *
2020-04-10 00:59:38,303 [main] INFO  (DfTakeFinallyProcess#takeFinally():244) - 
2020-04-10 00:59:38,303 [main] INFO  (DfTakeFinallyProcess#takeFinally():245) - * * * * * * * **
2020-04-10 00:59:38,303 [main] INFO  (DfTakeFinallyProcess#takeFinally():246) - *              *
2020-04-10 00:59:38,303 [main] INFO  (DfTakeFinallyProcess#takeFinally():247) - * Take Finally *
2020-04-10 00:59:38,303 [main] INFO  (DfTakeFinallyProcess#takeFinally():248) - *              *
2020-04-10 00:59:38,303 [main] INFO  (DfTakeFinallyProcess#takeFinally():249) - * * * * * * * **
2020-04-10 00:59:38,318 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2020-04-10 00:59:38,318 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2020-04-10 00:59:38,318 [main] INFO  (DfSqlFileFireMan#fire():93) - Take Finally: success=0, failure=0 (in 1 files)
2020-04-10 00:59:38,334 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-10 00:59:38,412 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m07s629ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 Create Schema: success=1, failure=0 (in 1 files) - 00m01s531ms
  (Initialize Schema) - 00m01s125ms
  (Create Schema) - 00m00s390ms
  o replace-schema.sql

 Load Data: *empty loading - 00m00s063ms
  - (no data file)

 Take Finally: success=0, failure=0 (in 1 files) - 00m00s031ms
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2020-04-10 01:00:04,083 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2020-04-10 01:00:04,099 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2020-04-10 01:00:04,099 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2020-04-10 01:00:04,114 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2020-04-10 01:00:04,114 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2020-04-10 01:00:04,114 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2020-04-10 01:00:27,925 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-10 01:00:27,925 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-10 01:00:27,925 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-10 01:00:27,925 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-10 01:00:27,941 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-10 01:00:28,738 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-10 01:00:28,738 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-10 01:00:28,769 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2020-04-10 01:00:28,769 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2020-04-10 01:00:28,769 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2020-04-10 01:00:28,769 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2020-04-10 01:00:28,769 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2020-04-10 01:00:28,769 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2020-04-10 01:00:28,800 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-10 01:00:28,800 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-10 01:00:28,800 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-10 01:00:28,956 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table product
2020-04-10 01:00:28,972 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table product
2020-04-10 01:00:29,081 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2020-04-10 01:00:29,081 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2020-04-10 01:00:29,081 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2020-04-10 01:00:29,081 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2020-04-10 01:00:29,081 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2020-04-10 01:00:29,081 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2020-04-10 01:00:29,081 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2020-04-10 01:00:29,097 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE `product` (
	`product_id` INT(11) NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL COLLATE 'utf8_general_ci',
	`description` TEXT(65535) NULL DEFAULT NULL COLLATE 'utf8_general_ci',
	`price` DOUBLE(22,0) NOT NULL,
	`unit` VARCHAR(50) NOT NULL DEFAULT 'yen' COLLATE 'utf8_general_ci',
	`image` VARCHAR(50) NULL DEFAULT NULL COLLATE 'utf8_general_ci',
	`created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`product_id`) USING BTREE
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
AUTO_INCREMENT=0
2020-04-10 01:00:29,378 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=1 failure=0
2020-04-10 01:00:29,378 [main] INFO  (DfSqlFileFireMan#fire():93) - Create Schema: success=1, failure=0 (in 1 files)
2020-04-10 01:00:29,425 [main] INFO  (DfLoadDataProcess#execute():130) - 
2020-04-10 01:00:29,425 [main] INFO  (DfLoadDataProcess#execute():131) - * * * * * * * * * * *
2020-04-10 01:00:29,425 [main] INFO  (DfLoadDataProcess#execute():132) - *                   *
2020-04-10 01:00:29,441 [main] INFO  (DfLoadDataProcess#execute():133) - * Load Data         *
2020-04-10 01:00:29,441 [main] INFO  (DfLoadDataProcess#execute():134) - *                   *
2020-04-10 01:00:29,441 [main] INFO  (DfLoadDataProcess#execute():135) - * * * * * * * * * * *
2020-04-10 01:00:29,488 [main] INFO  (DfTakeFinallyProcess#takeFinally():244) - 
2020-04-10 01:00:29,488 [main] INFO  (DfTakeFinallyProcess#takeFinally():245) - * * * * * * * **
2020-04-10 01:00:29,488 [main] INFO  (DfTakeFinallyProcess#takeFinally():246) - *              *
2020-04-10 01:00:29,488 [main] INFO  (DfTakeFinallyProcess#takeFinally():247) - * Take Finally *
2020-04-10 01:00:29,488 [main] INFO  (DfTakeFinallyProcess#takeFinally():248) - *              *
2020-04-10 01:00:29,488 [main] INFO  (DfTakeFinallyProcess#takeFinally():249) - * * * * * * * **
2020-04-10 01:00:29,504 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2020-04-10 01:00:29,504 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2020-04-10 01:00:29,504 [main] INFO  (DfSqlFileFireMan#fire():93) - Take Finally: success=0, failure=0 (in 1 files)
2020-04-10 01:00:29,504 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-10 01:00:29,566 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m25s498ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 Create Schema: success=1, failure=0 (in 1 files) - 00m00s625ms
  (Initialize Schema) - 00m00s312ms
  (Create Schema) - 00m00s297ms
  o replace-schema.sql

 Load Data: *empty loading - 00m00s031ms
  - (no data file)

 Take Finally: success=0, failure=0 (in 1 files) - 00m00s016ms
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2020-04-10 01:05:17,895 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-10 01:05:17,911 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-10 01:05:17,911 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-10 01:05:17,911 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-10 01:05:17,911 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-10 01:05:17,958 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-10 01:05:17,958 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-10 01:05:17,958 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-10 01:05:17,958 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-10 01:05:18,129 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-10 01:05:18,129 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-10 01:05:18,129 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-10 01:05:18,161 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1535) -  -> no previous (first time)
2020-04-10 01:05:18,192 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-10 01:05:18,223 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-10 01:05:18,927 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-10 01:05:18,927 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-10 01:05:18,927 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-10 01:05:18,942 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-10 01:05:18,942 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-10 01:05:18,942 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-10 01:05:18,958 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-10 01:05:19,020 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-10 01:05:19,052 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-10 01:05:19,067 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-10 01:05:19,067 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-10 01:05:19,067 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-10 01:05:19,067 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-10 01:05:19,145 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-10 01:05:19,145 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-10 01:05:19,145 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 1
2020-04-10 01:05:19,145 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-10 01:05:19,145 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-10 01:05:19,145 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-10 01:05:19,161 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-10 01:05:19,161 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-10 01:05:19,161 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-10 01:05:19,177 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-10 01:05:19,192 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-10 01:05:19,286 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1555) -  -> different from previous (schema diff)
2020-04-10 01:05:19,286 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1557) - ...Serializing schema-diff:
2020-04-10 01:05:19,286 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1558) -   filePath = ./schema/project-history-dfclient.diffmap
2020-04-10 01:05:19,317 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-10 01:05:19,427 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s547ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-10 01:05:21,253 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-10 01:05:21,253 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-10 01:05:21,253 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-10 01:05:21,253 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-10 01:05:21,268 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-10 01:05:21,299 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-10 01:05:21,299 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-10 01:05:21,299 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-10 01:05:21,299 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-10 01:05:21,299 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-10 01:05:21,299 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-10 01:05:21,299 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-10 01:05:21,299 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-10 01:05:21,299 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-10 01:05:21,315 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-10 01:05:21,409 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-10 01:05:21,487 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-10 01:05:21,487 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-10 01:05:21,502 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-10 01:05:21,502 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-10 01:05:21,502 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-10 01:05:21,502 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-10 01:05:21,502 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-10 01:05:21,502 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-10 01:05:21,502 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-10 01:05:21,534 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-10 01:05:21,643 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-10 01:05:21,960 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-10 01:05:21,975 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-10 01:05:22,006 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=1
2020-04-10 01:05:22,069 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-10 01:05:22,069 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-10 01:05:22,085 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-10 01:05:22,225 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-10 01:05:22,225 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-10 01:05:24,336 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2020-04-10 01:05:26,368 [main] INFO  (DfRefreshResourceProcess#show():295) - Failed to refresh the resources (continued): url=http://localhost:8386/, cause=ConnectException(Connection refused: connect)
2020-04-10 01:05:26,368 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-10 01:05:26,383 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m05s147ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-10 01:05:30,996 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-10 01:05:30,996 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-10 01:05:30,996 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-10 01:05:30,996 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-10 01:05:30,996 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-10 01:05:31,027 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-10 01:05:31,027 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-10 01:05:31,027 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-10 01:05:31,042 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-10 01:05:31,074 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-10 01:05:31,074 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-10 01:05:31,136 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-10 01:05:31,183 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-10 01:05:31,495 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-10 01:05:31,495 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-10 01:05:31,495 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-10 01:05:31,495 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-10 01:05:31,495 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-10 01:05:31,495 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-10 01:05:31,511 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-10 01:05:31,511 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-10 01:05:31,511 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-10 01:05:31,511 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-10 01:05:31,527 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-10 01:05:31,542 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-10 01:05:31,542 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-10 01:05:31,542 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-10 01:05:31,542 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-10 01:05:31,542 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-10 01:05:31,542 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-10 01:05:31,542 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-10 01:05:31,542 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-10 01:05:31,542 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-10 01:05:31,542 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-10 01:05:31,574 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-10 01:05:31,574 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-10 01:05:31,574 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-10 01:05:31,589 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-10 01:05:31,652 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-10 01:05:31,667 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-10 01:05:31,683 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-10 01:05:31,683 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-10 01:05:31,683 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-10 01:05:31,698 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-10 01:05:31,698 [main] INFO  (Database#info():2846) - }
2020-04-10 01:05:31,698 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-10 01:05:31,698 [main] INFO  (Database#info():2846) -     parse('packageBase\allcommon\DBFluteBeansJavaConfig.java')
2020-04-10 01:05:31,714 [main] INFO  (Database#info():2846) - }
2020-04-10 01:05:31,745 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-10 01:05:31,761 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-10 01:05:31,761 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-10 01:05:31,777 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-10 01:05:32,027 [main] INFO  (Database#info():2846) - }
2020-04-10 01:05:32,027 [main] INFO  (Database#info():2846) -  
2020-04-10 01:05:32,090 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-10 01:05:32,105 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-10 01:05:34,126 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2020-04-10 01:05:36,170 [main] INFO  (DfRefreshResourceProcess#show():295) - Failed to refresh the resources (continued): url=http://localhost:8386/, cause=ConnectException(Connection refused: connect)
2020-04-10 01:05:36,170 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-10 01:05:36,185 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m05s221ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-10 01:05:37,607 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-10 01:05:37,623 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-10 01:05:37,623 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-10 01:05:37,623 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-10 01:05:37,623 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-10 01:05:37,654 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-10 01:05:37,654 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-10 01:05:37,654 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-10 01:05:37,654 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-10 01:05:37,717 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=0, failure=0 (in 0 files)
2020-04-10 01:05:37,732 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s125ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-10 01:05:39,218 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-10 01:05:39,218 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-10 01:05:39,218 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-10 01:05:39,233 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-10 01:05:39,233 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-10 01:05:39,264 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-10 01:05:39,264 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-10 01:05:39,264 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-10 01:05:39,264 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-10 01:05:39,296 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-10 01:05:39,296 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-10 01:05:39,296 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-10 01:05:39,405 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=0, failure=0 (in 0 files)
2020-04-10 01:05:39,467 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-10 01:05:39,483 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-10 01:05:39,483 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-10 01:05:39,483 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-10 01:05:39,483 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-10 01:05:39,483 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-10 01:05:39,483 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-10 01:05:39,483 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-10 01:05:39,483 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-10 01:05:39,717 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-10 01:05:39,717 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-10 01:05:39,733 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-10 01:05:39,733 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-10 01:05:39,749 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-10 01:05:39,749 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-10 01:05:39,749 [main] INFO  (Database#info():2846) - }
2020-04-10 01:05:39,780 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2020-04-10 01:05:39,796 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-10 01:05:39,812 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-10 01:05:41,828 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2020-04-10 01:05:43,845 [main] INFO  (DfRefreshResourceProcess#show():295) - Failed to refresh the resources (continued): url=http://localhost:8386/, cause=ConnectException(Connection refused: connect)
2020-04-10 01:05:43,845 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-10 01:05:43,861 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s643ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-12 15:40:49,578 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2020-04-12 15:40:49,593 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2020-04-12 15:40:49,593 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2020-04-12 15:40:49,631 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2020-04-12 15:40:49,632 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2020-04-12 15:40:49,635 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2020-04-12 15:40:54,951 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-12 15:40:54,952 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-12 15:40:54,953 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-12 15:40:54,954 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-12 15:40:54,993 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-12 15:40:55,936 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-12 15:40:55,937 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-12 15:40:56,002 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2020-04-12 15:40:56,002 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2020-04-12 15:40:56,003 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2020-04-12 15:40:56,005 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2020-04-12 15:40:56,006 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2020-04-12 15:40:56,007 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2020-04-12 15:40:56,064 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-12 15:40:56,065 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-12 15:40:56,067 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-12 15:40:56,360 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table product
2020-04-12 15:40:56,384 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table product
2020-04-12 15:40:56,692 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2020-04-12 15:40:56,692 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2020-04-12 15:40:56,694 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2020-04-12 15:40:56,695 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2020-04-12 15:40:56,696 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2020-04-12 15:40:56,698 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2020-04-12 15:40:56,707 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2020-04-12 15:40:56,712 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE `product` (
	`product_id` INT(11) NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL COLLATE 'utf8_general_ci',
	`description` TEXT(65535) NULL DEFAULT NULL COLLATE 'utf8_general_ci',
	`price` DOUBLE(22,0) NOT NULL,
	`unit` VARCHAR(50) NOT NULL DEFAULT 'yen' COLLATE 'utf8_general_ci',
	`image` VARCHAR(50) NULL DEFAULT NULL COLLATE 'utf8_general_ci',
	`created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`product_id`) USING BTREE
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
AUTO_INCREMENT=0
2020-04-12 15:40:57,091 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=1 failure=0
2020-04-12 15:40:57,092 [main] INFO  (DfSqlFileFireMan#fire():93) - Create Schema: success=1, failure=0 (in 1 files)
2020-04-12 15:40:57,203 [main] INFO  (DfLoadDataProcess#execute():130) - 
2020-04-12 15:40:57,204 [main] INFO  (DfLoadDataProcess#execute():131) - * * * * * * * * * * *
2020-04-12 15:40:57,206 [main] INFO  (DfLoadDataProcess#execute():132) - *                   *
2020-04-12 15:40:57,206 [main] INFO  (DfLoadDataProcess#execute():133) - * Load Data         *
2020-04-12 15:40:57,207 [main] INFO  (DfLoadDataProcess#execute():134) - *                   *
2020-04-12 15:40:57,214 [main] INFO  (DfLoadDataProcess#execute():135) - * * * * * * * * * * *
2020-04-12 15:40:57,275 [main] INFO  (DfTakeFinallyProcess#takeFinally():244) - 
2020-04-12 15:40:57,276 [main] INFO  (DfTakeFinallyProcess#takeFinally():245) - * * * * * * * **
2020-04-12 15:40:57,277 [main] INFO  (DfTakeFinallyProcess#takeFinally():246) - *              *
2020-04-12 15:40:57,278 [main] INFO  (DfTakeFinallyProcess#takeFinally():247) - * Take Finally *
2020-04-12 15:40:57,279 [main] INFO  (DfTakeFinallyProcess#takeFinally():248) - *              *
2020-04-12 15:40:57,280 [main] INFO  (DfTakeFinallyProcess#takeFinally():249) - * * * * * * * **
2020-04-12 15:40:57,295 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2020-04-12 15:40:57,297 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2020-04-12 15:40:57,298 [main] INFO  (DfSqlFileFireMan#fire():93) - Take Finally: success=0, failure=0 (in 1 files)
2020-04-12 15:40:57,302 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-12 15:40:57,380 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m07s865ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 Create Schema: success=1, failure=0 (in 1 files) - 00m01s111ms
  (Initialize Schema) - 00m00s675ms
  (Create Schema) - 00m00s395ms
  o replace-schema.sql

 Load Data: *empty loading - 00m00s047ms
  - (no data file)

 Take Finally: success=0, failure=0 (in 1 files) - 00m00s026ms
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2020-04-12 15:41:07,626 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-12 15:41:07,633 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-12 15:41:07,634 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-12 15:41:07,635 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-12 15:41:07,636 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-12 15:41:07,678 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-12 15:41:07,679 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-12 15:41:07,679 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-12 15:41:07,680 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-12 15:41:07,850 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-12 15:41:07,851 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-12 15:41:07,852 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-12 15:41:07,927 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-12 15:41:08,061 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-12 15:41:08,083 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-12 15:41:08,805 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-12 15:41:08,807 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-12 15:41:08,810 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-12 15:41:08,813 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-12 15:41:08,814 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-12 15:41:08,815 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-12 15:41:08,834 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-12 15:41:08,878 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-12 15:41:08,902 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-12 15:41:08,923 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-12 15:41:08,924 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-12 15:41:08,925 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-12 15:41:08,926 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-12 15:41:08,977 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-12 15:41:08,978 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-12 15:41:08,979 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 1
2020-04-12 15:41:08,980 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-12 15:41:08,980 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-12 15:41:08,983 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-12 15:41:08,991 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-12 15:41:08,992 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-12 15:41:08,992 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-12 15:41:09,012 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-12 15:41:09,016 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-12 15:41:09,092 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-04-12 15:41:09,094 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-12 15:41:09,218 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s614ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-12 15:41:10,836 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-12 15:41:10,840 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-12 15:41:10,841 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-12 15:41:10,842 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-12 15:41:10,843 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-12 15:41:10,879 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-12 15:41:10,879 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-12 15:41:10,880 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-12 15:41:10,881 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-12 15:41:10,885 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-12 15:41:10,886 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-12 15:41:10,887 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-12 15:41:10,889 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-12 15:41:10,890 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-12 15:41:10,893 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-12 15:41:11,005 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-12 15:41:11,077 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-12 15:41:11,078 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-12 15:41:11,080 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-12 15:41:11,083 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-12 15:41:11,083 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-12 15:41:11,086 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-12 15:41:11,090 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-12 15:41:11,091 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-12 15:41:11,116 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-12 15:41:11,146 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-12 15:41:11,276 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-12 15:41:11,570 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-12 15:41:11,583 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-12 15:41:11,620 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=1
2020-04-12 15:41:11,804 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-12 15:41:11,805 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-12 15:41:11,835 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-12 15:41:12,199 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-12 15:41:12,204 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-12 15:41:14,227 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2020-04-12 15:41:16,230 [main] INFO  (DfRefreshResourceProcess#show():295) - Failed to refresh the resources (continued): url=http://localhost:8386/, cause=ConnectException(Connection refused: connect)
2020-04-12 15:41:16,236 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-12 15:41:16,246 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m05s431ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-12 15:41:20,642 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-12 15:41:20,647 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-12 15:41:20,648 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-12 15:41:20,649 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-12 15:41:20,650 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-12 15:41:20,687 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-12 15:41:20,688 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-12 15:41:20,689 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-12 15:41:20,690 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-12 15:41:20,725 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-12 15:41:20,726 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-12 15:41:20,796 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-12 15:41:20,849 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-12 15:41:21,191 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-12 15:41:21,199 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-12 15:41:21,200 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-12 15:41:21,204 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-12 15:41:21,206 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-12 15:41:21,207 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-12 15:41:21,210 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-12 15:41:21,213 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-12 15:41:21,214 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-12 15:41:21,218 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-12 15:41:21,233 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-12 15:41:21,259 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-12 15:41:21,260 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-12 15:41:21,261 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-12 15:41:21,261 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-12 15:41:21,262 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-12 15:41:21,263 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-12 15:41:21,264 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-12 15:41:21,264 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-12 15:41:21,265 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-12 15:41:21,266 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-12 15:41:21,296 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-12 15:41:21,299 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-12 15:41:21,348 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-12 15:41:21,389 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-12 15:41:21,405 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-12 15:41:21,450 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-12 15:41:21,468 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-12 15:41:21,498 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-12 15:41:21,542 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-12 15:41:21,589 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-12 15:41:21,622 [main] INFO  (Database#info():2846) - }
2020-04-12 15:41:21,623 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-12 15:41:21,625 [main] INFO  (Database#info():2846) -     parse('packageBase\allcommon\DBFluteBeansJavaConfig.java')
2020-04-12 15:41:21,678 [main] INFO  (Database#info():2846) - }
2020-04-12 15:41:21,685 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-12 15:41:21,712 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-12 15:41:21,714 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-12 15:41:21,715 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-12 15:41:22,190 [main] INFO  (Database#info():2846) - }
2020-04-12 15:41:22,191 [main] INFO  (Database#info():2846) -  
2020-04-12 15:41:22,281 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-12 15:41:22,284 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-12 15:41:24,303 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2020-04-12 15:41:26,309 [main] INFO  (DfRefreshResourceProcess#show():295) - Failed to refresh the resources (continued): url=http://localhost:8386/, cause=ConnectException(Connection refused: connect)
2020-04-12 15:41:26,316 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-12 15:41:26,327 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m05s701ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-12 15:41:27,766 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-12 15:41:27,770 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-12 15:41:27,771 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-12 15:41:27,772 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-12 15:41:27,773 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-12 15:41:27,805 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-12 15:41:27,807 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-12 15:41:27,808 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-12 15:41:27,809 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-12 15:41:27,865 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=0, failure=0 (in 0 files)
2020-04-12 15:41:27,877 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s126ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-12 15:41:29,416 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-12 15:41:29,421 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-12 15:41:29,421 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-12 15:41:29,422 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-12 15:41:29,423 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-12 15:41:29,455 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-12 15:41:29,456 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-12 15:41:29,456 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-12 15:41:29,457 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-12 15:41:29,483 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-12 15:41:29,484 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-12 15:41:29,496 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-12 15:41:29,616 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=0, failure=0 (in 0 files)
2020-04-12 15:41:29,691 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-12 15:41:29,692 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-12 15:41:29,693 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-12 15:41:29,694 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-12 15:41:29,695 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-12 15:41:29,696 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-12 15:41:29,697 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-12 15:41:29,698 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-12 15:41:29,705 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-12 15:41:29,956 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-12 15:41:29,958 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-12 15:41:29,964 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-12 15:41:29,967 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-12 15:41:29,984 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-12 15:41:29,986 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-12 15:41:29,990 [main] INFO  (Database#info():2846) - }
2020-04-12 15:41:30,068 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2020-04-12 15:41:30,084 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-12 15:41:30,085 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-12 15:41:32,096 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2020-04-12 15:41:34,100 [main] INFO  (DfRefreshResourceProcess#show():295) - Failed to refresh the resources (continued): url=http://localhost:8386/, cause=ConnectException(Connection refused: connect)
2020-04-12 15:41:34,104 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-12 15:41:34,117 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s719ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-13 23:49:04,889 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2020-04-13 23:49:04,918 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2020-04-13 23:49:04,918 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2020-04-13 23:49:04,953 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2020-04-13 23:49:04,953 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2020-04-13 23:49:04,958 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2020-04-13 23:49:57,382 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-13 23:49:57,383 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-13 23:49:57,384 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-13 23:49:57,384 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-13 23:49:57,435 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-13 23:49:59,761 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-13 23:49:59,761 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-13 23:49:59,824 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2020-04-13 23:49:59,824 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2020-04-13 23:49:59,824 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2020-04-13 23:49:59,824 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2020-04-13 23:49:59,824 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2020-04-13 23:49:59,824 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2020-04-13 23:49:59,855 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-13 23:49:59,855 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-13 23:49:59,855 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-13 23:50:00,304 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table product
2020-04-13 23:50:00,339 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table product
2020-04-13 23:50:00,653 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2020-04-13 23:50:00,655 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2020-04-13 23:50:00,657 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2020-04-13 23:50:00,660 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2020-04-13 23:50:00,662 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2020-04-13 23:50:00,666 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2020-04-13 23:50:00,684 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2020-04-13 23:50:00,691 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE `product` (
	`product_id` INT(11) NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL COLLATE 'utf8_general_ci',
	`description` TEXT(65535) NULL DEFAULT NULL COLLATE 'utf8_general_ci',
	`price` DOUBLE(22,0) NOT NULL,
	`unit` VARCHAR(50) NOT NULL DEFAULT 'yen' COLLATE 'utf8_general_ci',
	`image` VARCHAR(50) NULL DEFAULT NULL COLLATE 'utf8_general_ci',
	`created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`product_id`) USING BTREE
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
AUTO_INCREMENT=0
2020-04-13 23:50:01,014 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=1 failure=0
2020-04-13 23:50:01,014 [main] INFO  (DfSqlFileFireMan#fire():93) - Create Schema: success=1, failure=0 (in 1 files)
2020-04-13 23:50:01,139 [main] INFO  (DfLoadDataProcess#execute():130) - 
2020-04-13 23:50:01,139 [main] INFO  (DfLoadDataProcess#execute():131) - * * * * * * * * * * *
2020-04-13 23:50:01,139 [main] INFO  (DfLoadDataProcess#execute():132) - *                   *
2020-04-13 23:50:01,139 [main] INFO  (DfLoadDataProcess#execute():133) - * Load Data         *
2020-04-13 23:50:01,139 [main] INFO  (DfLoadDataProcess#execute():134) - *                   *
2020-04-13 23:50:01,139 [main] INFO  (DfLoadDataProcess#execute():135) - * * * * * * * * * * *
2020-04-13 23:50:01,202 [main] INFO  (DfTakeFinallyProcess#takeFinally():244) - 
2020-04-13 23:50:01,202 [main] INFO  (DfTakeFinallyProcess#takeFinally():245) - * * * * * * * **
2020-04-13 23:50:01,202 [main] INFO  (DfTakeFinallyProcess#takeFinally():246) - *              *
2020-04-13 23:50:01,202 [main] INFO  (DfTakeFinallyProcess#takeFinally():247) - * Take Finally *
2020-04-13 23:50:01,202 [main] INFO  (DfTakeFinallyProcess#takeFinally():248) - *              *
2020-04-13 23:50:01,202 [main] INFO  (DfTakeFinallyProcess#takeFinally():249) - * * * * * * * **
2020-04-13 23:50:01,217 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2020-04-13 23:50:01,217 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2020-04-13 23:50:01,217 [main] INFO  (DfSqlFileFireMan#fire():93) - Take Finally: success=0, failure=0 (in 1 files)
2020-04-13 23:50:01,233 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-13 23:50:01,327 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m56s516ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 Create Schema: success=1, failure=0 (in 1 files) - 00m01s206ms
  (Initialize Schema) - 00m00s822ms
  (Create Schema) - 00m00s345ms
  o replace-schema.sql

 Load Data: *empty loading - 00m00s047ms
  - (no data file)

 Take Finally: success=0, failure=0 (in 1 files) - 00m00s031ms
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2020-04-13 23:50:36,831 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-13 23:50:36,831 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-13 23:50:36,831 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-13 23:50:36,847 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-13 23:50:36,847 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-13 23:50:36,878 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-13 23:50:36,878 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-13 23:50:36,893 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-13 23:50:36,893 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-13 23:50:37,019 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-13 23:50:37,035 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-13 23:50:37,035 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-13 23:50:37,050 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-13 23:50:37,175 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-13 23:50:37,206 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-13 23:50:38,004 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-13 23:50:38,004 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-13 23:50:38,004 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-13 23:50:38,004 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-13 23:50:38,004 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-13 23:50:38,004 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-13 23:50:38,019 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-13 23:50:38,113 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-13 23:50:38,144 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-13 23:50:38,160 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-13 23:50:38,160 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-13 23:50:38,160 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-13 23:50:38,160 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-13 23:50:38,238 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-13 23:50:38,238 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-13 23:50:38,238 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 1
2020-04-13 23:50:38,238 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-13 23:50:38,238 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-13 23:50:38,254 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-13 23:50:38,254 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-13 23:50:38,254 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-13 23:50:38,254 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-13 23:50:38,269 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-13 23:50:38,285 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-13 23:50:38,394 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-04-13 23:50:38,394 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-13 23:50:38,519 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s704ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-13 23:50:40,052 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-13 23:50:40,056 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-13 23:50:40,057 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-13 23:50:40,058 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-13 23:50:40,059 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-13 23:50:40,095 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-13 23:50:40,096 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-13 23:50:40,097 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-13 23:50:40,098 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-13 23:50:40,102 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-13 23:50:40,102 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-13 23:50:40,103 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-13 23:50:40,104 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-13 23:50:40,106 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-13 23:50:40,107 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-13 23:50:40,264 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-13 23:50:40,346 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-13 23:50:40,347 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-13 23:50:40,350 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-13 23:50:40,352 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-13 23:50:40,353 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-13 23:50:40,356 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-13 23:50:40,367 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-13 23:50:40,367 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-13 23:50:40,384 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-13 23:50:40,423 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-13 23:50:40,560 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-13 23:50:40,821 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-13 23:50:40,847 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-13 23:50:40,887 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=1
2020-04-13 23:50:41,004 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-13 23:50:41,004 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-13 23:50:41,020 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-13 23:50:41,426 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-13 23:50:41,426 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-13 23:50:41,645 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-13 23:50:41,660 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s619ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-13 23:50:46,400 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-13 23:50:46,405 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-13 23:50:46,406 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-13 23:50:46,407 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-13 23:50:46,408 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-13 23:50:46,455 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-13 23:50:46,456 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-13 23:50:46,457 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-13 23:50:46,458 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-13 23:50:46,501 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-13 23:50:46,502 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-13 23:50:46,584 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-13 23:50:46,638 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-13 23:50:46,905 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-13 23:50:46,912 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-13 23:50:46,912 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-13 23:50:46,912 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-13 23:50:46,912 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-13 23:50:46,912 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-13 23:50:46,912 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-13 23:50:46,912 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-13 23:50:46,928 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-13 23:50:46,944 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-13 23:50:46,975 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-13 23:50:46,991 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-13 23:50:47,006 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-13 23:50:47,006 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-13 23:50:47,006 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-13 23:50:47,006 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-13 23:50:47,006 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-13 23:50:47,006 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-13 23:50:47,006 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-13 23:50:47,006 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-13 23:50:47,006 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-13 23:50:47,053 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-13 23:50:47,053 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-13 23:50:47,069 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-13 23:50:47,116 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-13 23:50:47,131 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-13 23:50:47,163 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-13 23:50:47,178 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-13 23:50:47,194 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-13 23:50:47,194 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-13 23:50:47,209 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-13 23:50:47,241 [main] INFO  (Database#info():2846) - }
2020-04-13 23:50:47,241 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-13 23:50:47,241 [main] INFO  (Database#info():2846) -     parse('packageBase\allcommon\DBFluteBeansJavaConfig.java')
2020-04-13 23:50:47,272 [main] INFO  (Database#info():2846) - }
2020-04-13 23:50:47,272 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-13 23:50:47,303 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-13 23:50:47,303 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-13 23:50:47,319 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-13 23:50:47,694 [main] INFO  (Database#info():2846) - }
2020-04-13 23:50:47,694 [main] INFO  (Database#info():2846) -  
2020-04-13 23:50:47,787 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-13 23:50:47,787 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-13 23:50:47,803 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-13 23:50:47,850 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s538ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-13 23:50:49,400 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-13 23:50:49,404 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-13 23:50:49,404 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-13 23:50:49,405 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-13 23:50:49,406 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-13 23:50:49,437 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-13 23:50:49,437 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-13 23:50:49,439 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-13 23:50:49,440 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-13 23:50:49,495 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=0, failure=0 (in 0 files)
2020-04-13 23:50:49,510 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s156ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-13 23:50:51,008 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-13 23:50:51,008 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-13 23:50:51,008 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-13 23:50:51,008 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-13 23:50:51,023 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-13 23:50:51,054 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-13 23:50:51,054 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-13 23:50:51,054 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-13 23:50:51,054 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-13 23:50:51,086 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-13 23:50:51,086 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-13 23:50:51,086 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-13 23:50:51,195 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=0, failure=0 (in 0 files)
2020-04-13 23:50:51,257 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-13 23:50:51,257 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-13 23:50:51,257 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-13 23:50:51,257 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-13 23:50:51,257 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-13 23:50:51,257 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-13 23:50:51,257 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-13 23:50:51,257 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-13 23:50:51,273 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-13 23:50:51,507 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-13 23:50:51,507 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-13 23:50:51,523 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-13 23:50:51,523 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-13 23:50:51,539 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-13 23:50:51,539 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-13 23:50:51,539 [main] INFO  (Database#info():2846) - }
2020-04-13 23:50:51,601 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2020-04-13 23:50:51,617 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-13 23:50:51,617 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-13 23:50:51,617 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-13 23:50:51,632 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s625ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-14 00:02:01,037 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-14 00:02:01,037 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-14 00:02:01,037 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-14 00:02:01,053 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-14 00:02:01,053 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-14 00:02:01,084 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-14 00:02:01,084 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-14 00:02:01,084 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-14 00:02:01,084 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-14 00:02:01,162 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-14 00:02:01,178 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-14 00:02:01,178 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-14 00:02:01,178 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-14 00:02:01,272 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-14 00:02:01,304 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-14 00:02:02,085 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-14 00:02:02,085 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-14 00:02:02,085 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-14 00:02:02,100 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-14 00:02:02,100 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-14 00:02:02,100 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-14 00:02:02,116 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-14 00:02:02,116 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-14 00:02:02,131 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-14 00:02:02,147 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-14 00:02:02,147 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-14 00:02:02,147 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-14 00:02:02,147 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-14 00:02:02,194 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-14 00:02:02,257 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-14 00:02:02,257 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-14 00:02:02,257 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 2
2020-04-14 00:02:02,257 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-14 00:02:02,257 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-14 00:02:02,257 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-14 00:02:02,273 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-14 00:02:02,273 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-14 00:02:02,273 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-14 00:02:02,288 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-14 00:02:02,288 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-14 00:02:02,366 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1555) -  -> different from previous (schema diff)
2020-04-14 00:02:02,366 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1557) - ...Serializing schema-diff:
2020-04-14 00:02:02,366 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1558) -   filePath = ./schema/project-history-dfclient.diffmap
2020-04-14 00:02:02,382 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-14 00:02:02,507 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s485ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-14 00:02:04,085 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-14 00:02:04,085 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-14 00:02:04,085 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-14 00:02:04,085 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-14 00:02:04,085 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-14 00:02:04,117 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-14 00:02:04,132 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-14 00:02:04,132 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-14 00:02:04,132 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-14 00:02:04,132 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-14 00:02:04,132 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-14 00:02:04,132 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-14 00:02:04,132 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-14 00:02:04,132 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-14 00:02:04,132 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-14 00:02:04,195 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-14 00:02:04,258 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-14 00:02:04,258 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-14 00:02:04,273 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-14 00:02:04,273 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-14 00:02:04,273 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-14 00:02:04,273 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-14 00:02:04,273 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-14 00:02:04,273 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-14 00:02:04,273 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-14 00:02:04,289 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-14 00:02:04,383 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-14 00:02:04,586 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-14 00:02:04,586 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-14 00:02:04,633 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=2
2020-04-14 00:02:04,726 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-14 00:02:04,742 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-14 00:02:04,742 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-14 00:02:04,945 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-14 00:02:04,945 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-14 00:02:04,961 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-14 00:02:04,961 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s907ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-14 00:02:09,838 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-14 00:02:09,838 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-14 00:02:09,838 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-14 00:02:09,838 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-14 00:02:09,838 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-14 00:02:09,869 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-14 00:02:09,869 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-14 00:02:09,869 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-14 00:02:09,869 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-14 00:02:09,900 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-14 00:02:09,900 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-14 00:02:09,987 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-14 00:02:10,044 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-14 00:02:10,292 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-14 00:02:10,299 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-14 00:02:10,301 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-14 00:02:10,304 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-14 00:02:10,307 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-14 00:02:10,307 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-14 00:02:10,310 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-14 00:02:10,313 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-14 00:02:10,314 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-14 00:02:10,318 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-14 00:02:10,334 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-14 00:02:10,342 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-14 00:02:10,343 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-14 00:02:10,345 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-14 00:02:10,345 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-14 00:02:10,349 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-14 00:02:10,350 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-14 00:02:10,351 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-14 00:02:10,352 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-14 00:02:10,354 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-14 00:02:10,355 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-14 00:02:10,378 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-14 00:02:10,381 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-14 00:02:10,389 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-14 00:02:10,406 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-14 00:02:10,412 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-14 00:02:10,439 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-14 00:02:10,444 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-14 00:02:10,451 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-14 00:02:10,457 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-14 00:02:10,463 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-14 00:02:10,467 [main] INFO  (Database#info():2846) - }
2020-04-14 00:02:10,468 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-14 00:02:10,471 [main] INFO  (Database#info():2846) -     parse('packageBase\allcommon\DBFluteBeansJavaConfig.java')
2020-04-14 00:02:10,490 [main] INFO  (Database#info():2846) - }
2020-04-14 00:02:10,500 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-14 00:02:10,534 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-14 00:02:10,536 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-14 00:02:10,537 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-14 00:02:10,723 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-14 00:02:10,968 [main] INFO  (Database#info():2846) - }
2020-04-14 00:02:10,968 [main] INFO  (Database#info():2846) -  
2020-04-14 00:02:11,061 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-14 00:02:11,077 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-14 00:02:11,077 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-14 00:02:11,093 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s287ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-14 00:02:15,390 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-14 00:02:15,413 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-14 00:02:15,451 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-14 00:02:15,567 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-14 00:02:15,627 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-14 00:02:15,819 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-14 00:02:15,920 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-14 00:02:15,920 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-14 00:02:15,920 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-14 00:02:16,111 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=0, failure=0 (in 0 files)
2020-04-14 00:02:16,158 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s837ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-14 00:02:18,859 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-14 00:02:18,859 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-14 00:02:18,859 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-14 00:02:18,859 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-14 00:02:18,874 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-14 00:02:18,921 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-14 00:02:18,922 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-14 00:02:18,922 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-14 00:02:18,923 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-14 00:02:18,957 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-14 00:02:18,958 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-14 00:02:18,971 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-14 00:02:19,058 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=0, failure=0 (in 0 files)
2020-04-14 00:02:19,127 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-14 00:02:19,128 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-14 00:02:19,130 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-14 00:02:19,130 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-14 00:02:19,131 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-14 00:02:19,132 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-14 00:02:19,132 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-14 00:02:19,133 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-14 00:02:19,141 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-14 00:02:19,380 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-14 00:02:19,382 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-14 00:02:19,387 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-14 00:02:19,391 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-14 00:02:19,407 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-14 00:02:19,408 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-14 00:02:19,414 [main] INFO  (Database#info():2846) - }
2020-04-14 00:02:19,458 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2020-04-14 00:02:19,475 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-14 00:02:19,476 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-14 00:02:19,485 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-14 00:02:19,492 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s659ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = packageBase

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-14 00:43:59,045 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-14 00:43:59,052 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-14 00:43:59,053 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-14 00:43:59,054 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-14 00:43:59,055 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-14 00:43:59,092 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-14 00:43:59,093 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-14 00:43:59,093 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-14 00:43:59,094 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-14 00:43:59,168 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-14 00:43:59,170 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-14 00:43:59,170 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-14 00:43:59,183 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-14 00:43:59,284 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-14 00:43:59,309 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-14 00:44:00,288 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-14 00:44:00,290 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-14 00:44:00,293 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-14 00:44:00,296 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-14 00:44:00,297 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-14 00:44:00,299 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-14 00:44:00,341 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-14 00:44:00,351 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-14 00:44:00,385 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-14 00:44:00,399 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-14 00:44:00,400 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-14 00:44:00,401 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-14 00:44:00,402 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-14 00:44:00,451 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-14 00:44:00,464 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-14 00:44:00,465 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-14 00:44:00,468 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 2
2020-04-14 00:44:00,469 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-14 00:44:00,470 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-14 00:44:00,474 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-14 00:44:00,482 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-14 00:44:00,483 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-14 00:44:00,484 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-14 00:44:00,531 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-14 00:44:00,540 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-14 00:44:00,627 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-04-14 00:44:00,628 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-14 00:44:00,790 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s770ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-14 00:44:02,448 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-14 00:44:02,452 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-14 00:44:02,453 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-14 00:44:02,454 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-14 00:44:02,455 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-14 00:44:02,491 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-14 00:44:02,493 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-14 00:44:02,493 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-14 00:44:02,494 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-14 00:44:02,499 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-14 00:44:02,500 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-14 00:44:02,501 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-14 00:44:02,503 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-14 00:44:02,503 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-14 00:44:02,507 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-14 00:44:02,615 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-14 00:44:02,687 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-14 00:44:02,688 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-14 00:44:02,691 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-14 00:44:02,693 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-14 00:44:02,694 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-14 00:44:02,698 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-14 00:44:02,701 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-14 00:44:02,702 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-14 00:44:02,705 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-14 00:44:02,724 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-14 00:44:02,859 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-14 00:44:03,087 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-14 00:44:03,099 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-14 00:44:03,176 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=2
2020-04-14 00:44:03,243 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-14 00:44:03,244 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-14 00:44:03,259 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-14 00:44:03,425 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-14 00:44:03,426 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-14 00:44:03,565 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-14 00:44:03,573 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s146ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-14 00:44:08,331 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-14 00:44:08,339 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-14 00:44:08,339 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-14 00:44:08,341 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-14 00:44:08,345 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-14 00:44:08,398 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-14 00:44:08,399 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-14 00:44:08,400 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-14 00:44:08,401 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-14 00:44:08,434 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-14 00:44:08,435 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-14 00:44:08,507 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-14 00:44:08,568 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-14 00:44:08,835 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-14 00:44:08,842 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-14 00:44:08,843 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-14 00:44:08,846 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-14 00:44:08,849 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-14 00:44:08,850 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-14 00:44:08,852 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-14 00:44:08,854 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-14 00:44:08,855 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-14 00:44:08,858 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-14 00:44:08,873 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-14 00:44:08,882 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-14 00:44:08,883 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-14 00:44:08,885 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-14 00:44:08,889 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-14 00:44:08,890 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-14 00:44:08,891 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-14 00:44:08,892 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-14 00:44:08,894 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-14 00:44:08,898 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-14 00:44:08,899 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-14 00:44:08,918 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-14 00:44:08,923 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-14 00:44:08,931 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-14 00:44:08,994 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-14 00:44:09,000 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-14 00:44:09,025 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-14 00:44:09,030 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-14 00:44:09,037 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-14 00:44:09,042 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-14 00:44:09,049 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-14 00:44:09,054 [main] INFO  (Database#info():2846) - }
2020-04-14 00:44:09,055 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-14 00:44:09,057 [main] INFO  (Database#info():2846) -     parse('dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-14 00:44:09,087 [main] INFO  (Database#info():2846) - }
2020-04-14 00:44:09,103 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-14 00:44:09,132 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-14 00:44:09,133 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-14 00:44:09,135 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-14 00:44:09,437 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-14 00:44:09,562 [main] INFO  (Database#info():2846) - }
2020-04-14 00:44:09,563 [main] INFO  (Database#info():2846) -  
2020-04-14 00:44:09,660 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-14 00:44:09,662 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-14 00:44:09,671 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-14 00:44:09,682 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s434ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-14 00:44:14,104 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-14 00:44:14,133 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-14 00:44:14,181 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-14 00:44:14,185 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-14 00:44:14,188 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-14 00:44:14,282 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-14 00:44:14,299 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-14 00:44:14,302 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-14 00:44:14,305 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-14 00:44:14,548 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=0, failure=0 (in 0 files)
2020-04-14 00:44:14,633 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s548ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-14 00:44:19,418 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-14 00:44:19,423 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-14 00:44:19,424 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-14 00:44:19,426 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-14 00:44:19,430 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-14 00:44:19,477 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-14 00:44:19,478 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-14 00:44:19,479 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-14 00:44:19,480 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-14 00:44:19,516 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-14 00:44:19,517 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-14 00:44:19,532 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-14 00:44:19,686 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=0, failure=0 (in 0 files)
2020-04-14 00:44:19,812 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-14 00:44:19,813 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-14 00:44:19,814 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-14 00:44:19,815 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-14 00:44:19,816 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-14 00:44:19,817 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-14 00:44:19,818 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-14 00:44:19,818 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-14 00:44:19,830 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-14 00:44:20,183 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-14 00:44:20,185 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-14 00:44:20,194 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-14 00:44:20,197 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-14 00:44:20,215 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-14 00:44:20,216 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-14 00:44:20,221 [main] INFO  (Database#info():2846) - }
2020-04-14 00:44:20,278 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2020-04-14 00:44:20,293 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-14 00:44:20,293 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-14 00:44:20,298 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-14 00:44:20,305 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s910ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-14 00:46:44,252 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-14 00:46:44,261 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-14 00:46:44,262 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-14 00:46:44,262 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-14 00:46:44,264 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-14 00:46:44,309 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-14 00:46:44,310 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-14 00:46:44,311 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-14 00:46:44,312 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-14 00:46:44,386 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-14 00:46:44,387 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-14 00:46:44,388 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-14 00:46:44,402 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-14 00:46:44,499 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-14 00:46:44,521 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-14 00:46:45,243 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-14 00:46:45,245 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-14 00:46:45,248 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-14 00:46:45,251 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-14 00:46:45,252 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-14 00:46:45,254 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-14 00:46:45,275 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-14 00:46:45,284 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-14 00:46:45,298 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-14 00:46:45,312 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-14 00:46:45,312 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-14 00:46:45,313 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-14 00:46:45,317 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-14 00:46:45,364 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-14 00:46:45,376 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-14 00:46:45,377 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-14 00:46:45,378 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 2
2020-04-14 00:46:45,381 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-14 00:46:45,382 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-14 00:46:45,385 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-14 00:46:45,393 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-14 00:46:45,395 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-14 00:46:45,396 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-14 00:46:45,413 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-14 00:46:45,417 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-14 00:46:45,487 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-04-14 00:46:45,488 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-14 00:46:45,611 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s387ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-14 00:46:47,272 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-14 00:46:47,277 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-14 00:46:47,278 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-14 00:46:47,278 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-14 00:46:47,279 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-14 00:46:47,316 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-14 00:46:47,317 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-14 00:46:47,318 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-14 00:46:47,319 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-14 00:46:47,324 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-14 00:46:47,325 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-14 00:46:47,327 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-14 00:46:47,327 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-14 00:46:47,331 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-14 00:46:47,332 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-14 00:46:47,391 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-14 00:46:47,466 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-14 00:46:47,467 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-14 00:46:47,470 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-14 00:46:47,472 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-14 00:46:47,473 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-14 00:46:47,475 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-14 00:46:47,478 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-14 00:46:47,479 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-14 00:46:47,483 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-14 00:46:47,500 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-14 00:46:47,592 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-14 00:46:47,802 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-14 00:46:47,814 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-14 00:46:47,850 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=2
2020-04-14 00:46:47,921 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-14 00:46:47,922 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-14 00:46:47,937 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-14 00:46:48,092 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-14 00:46:48,094 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-14 00:46:48,110 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-14 00:46:48,118 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s867ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-14 00:46:52,756 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-14 00:46:52,760 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-14 00:46:52,761 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-14 00:46:52,762 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-14 00:46:52,762 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-14 00:46:52,800 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-14 00:46:52,801 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-14 00:46:52,802 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-14 00:46:52,803 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-14 00:46:52,835 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-14 00:46:52,836 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-14 00:46:52,910 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-14 00:46:52,967 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-14 00:46:53,212 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-14 00:46:53,221 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-14 00:46:53,221 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-14 00:46:53,224 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-14 00:46:53,227 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-14 00:46:53,228 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-14 00:46:53,230 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-14 00:46:53,234 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-14 00:46:53,235 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-14 00:46:53,239 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-14 00:46:53,253 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-14 00:46:53,262 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-14 00:46:53,263 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-14 00:46:53,264 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-14 00:46:53,269 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-14 00:46:53,269 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-14 00:46:53,270 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-14 00:46:53,271 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-14 00:46:53,274 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-14 00:46:53,274 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-14 00:46:53,278 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-14 00:46:53,297 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-14 00:46:53,302 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-14 00:46:53,310 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-14 00:46:53,325 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-14 00:46:53,333 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-14 00:46:53,359 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-14 00:46:53,364 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-14 00:46:53,372 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-14 00:46:53,378 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-14 00:46:53,384 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-14 00:46:53,390 [main] INFO  (Database#info():2846) - }
2020-04-14 00:46:53,391 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-14 00:46:53,392 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-14 00:46:53,472 [main] INFO  (Database#info():2846) - }
2020-04-14 00:46:53,486 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-14 00:46:53,516 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-14 00:46:53,517 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-14 00:46:53,518 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-14 00:46:53,747 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-14 00:46:53,867 [main] INFO  (Database#info():2846) - }
2020-04-14 00:46:53,868 [main] INFO  (Database#info():2846) -  
2020-04-14 00:46:53,997 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-14 00:46:53,999 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-14 00:46:54,009 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-14 00:46:54,022 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s283ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-14 00:46:57,437 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-14 00:46:57,442 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-14 00:46:57,443 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-14 00:46:57,444 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-14 00:46:57,444 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-14 00:46:57,480 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-14 00:46:57,481 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-14 00:46:57,482 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-14 00:46:57,483 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-14 00:46:57,558 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=0, failure=0 (in 0 files)
2020-04-14 00:46:57,572 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s149ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-14 00:46:59,093 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-14 00:46:59,098 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-14 00:46:59,098 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-14 00:46:59,099 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-14 00:46:59,101 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-14 00:46:59,134 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-14 00:46:59,135 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-14 00:46:59,136 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-14 00:46:59,137 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-14 00:46:59,163 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-14 00:46:59,164 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-14 00:46:59,175 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-14 00:46:59,267 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=0, failure=0 (in 0 files)
2020-04-14 00:46:59,337 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-14 00:46:59,338 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-14 00:46:59,339 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-14 00:46:59,339 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-14 00:46:59,340 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-14 00:46:59,341 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-14 00:46:59,342 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-14 00:46:59,344 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-14 00:46:59,351 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-14 00:46:59,591 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-14 00:46:59,593 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-14 00:46:59,599 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-14 00:46:59,603 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-14 00:46:59,619 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-14 00:46:59,621 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-14 00:46:59,625 [main] INFO  (Database#info():2846) - }
2020-04-14 00:46:59,684 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2020-04-14 00:46:59,699 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-14 00:46:59,703 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-14 00:46:59,709 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-14 00:46:59,716 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s641ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-16 13:56:48,328 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-16 13:56:48,359 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-16 13:56:48,359 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-16 13:56:48,359 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-16 13:56:48,359 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-16 13:56:48,406 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 13:56:48,421 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 13:56:48,421 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 13:56:48,421 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 13:56:48,546 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-16 13:56:48,546 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-16 13:56:48,546 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-16 13:56:48,578 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 13:56:48,765 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-16 13:56:48,812 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 13:56:51,219 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 13:56:51,222 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 13:56:51,225 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-16 13:56:51,228 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-16 13:56:51,229 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-16 13:56:51,231 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-16 13:56:51,300 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-16 13:56:51,316 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-16 13:56:51,331 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-16 13:56:51,347 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-16 13:56:51,347 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 13:56:51,347 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-16 13:56:51,347 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-16 13:56:51,410 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.order(TABLE)
2020-04-16 13:56:51,472 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'JDBC'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.7.29-0ubuntu0.18.04.1

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
java.lang.IllegalStateException: SQL exception when serializing SchemaXml: ./schema/project-schema-dfclient.xml
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.serialize(DfSchemaXmlSerializer.java:323)
	at org.apache.torque.task.TorqueJDBCTransformTask.doExecute(TorqueJDBCTransformTask.java:127)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: org.dbflute.exception.DfJDBCException: JDBC said...
/- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[SQLException]
org.dbflute.exception.DfJDBCException
Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute the SQL for getting auto-increment

[Advice]
DBFlute executes the SQL to get auto-increment meta data.
The table might not exist on your schema. Or the schema
to be set at 'dfprop' might be mistake in the first place.

And other points can be causes
 e.g. reservation word, authentication, ...
If your primary key of the table is reservation word in the DBMS,
set quatation settings 'quoteColumnNameList' of littleAdjustmentMap.dfprop.

So check your settings and environments.

[Table]
web.order

[PrimaryKey]
order_id

[SQL for getting]
select order_id from order where 0 = 1
* * * * * * * * * */

[NextException]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order where 0 = 1' at line 1
- - - - - - - - - -/
	at org.dbflute.exception.DfJDBCException.voice(DfJDBCException.java:40)
	... 35 more
2020-04-16 13:56:51,566 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 13:56:51,728 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s409ms *Abort

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-16 14:01:49,545 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-16 14:01:49,545 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-16 14:01:49,545 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-16 14:01:49,560 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-16 14:01:49,560 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-16 14:01:49,592 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 14:01:49,592 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 14:01:49,592 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 14:01:49,592 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 14:01:49,670 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-16 14:01:49,670 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-16 14:01:49,670 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-16 14:01:49,685 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 14:01:49,779 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-16 14:01:49,795 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 14:01:50,529 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 14:01:50,545 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 14:01:50,545 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-16 14:01:50,545 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-16 14:01:50,545 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-16 14:01:50,545 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-16 14:01:50,561 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-16 14:01:50,576 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-16 14:01:50,592 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-16 14:01:50,592 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-16 14:01:50,592 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 14:01:50,608 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-16 14:01:50,608 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-16 14:01:50,654 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-16 14:01:50,654 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-04-16 14:01:50,670 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-16 14:01:50,686 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-16 14:01:50,686 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-16 14:01:50,686 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 4
2020-04-16 14:01:50,686 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-16 14:01:50,686 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-16 14:01:50,748 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-16 14:01:50,748 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-16 14:01:50,748 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-16 14:01:50,748 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-16 14:01:50,779 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-16 14:01:50,795 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 14:01:50,936 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1555) -  -> different from previous (schema diff)
2020-04-16 14:01:50,936 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1557) - ...Serializing schema-diff:
2020-04-16 14:01:50,936 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1558) -   filePath = ./schema/project-history-dfclient.diffmap
2020-04-16 14:01:50,967 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 14:01:51,076 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s547ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-16 14:01:52,671 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-16 14:01:52,671 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-16 14:01:52,671 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-16 14:01:52,671 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-16 14:01:52,671 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-16 14:01:52,702 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 14:01:52,702 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 14:01:52,702 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 14:01:52,702 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 14:01:52,717 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-16 14:01:52,717 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-16 14:01:52,717 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-16 14:01:52,717 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-16 14:01:52,717 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-16 14:01:52,717 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-16 14:01:52,827 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 14:01:52,921 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 14:01:52,921 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 14:01:52,936 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 14:01:52,936 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 14:01:52,936 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 14:01:52,936 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 14:01:52,952 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 14:01:52,952 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 14:01:52,983 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 14:01:53,046 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 14:01:53,264 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-16 14:01:53,562 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-16 14:01:53,608 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-16 14:01:53,686 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=3
2020-04-16 14:01:54,061 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-16 14:01:54,061 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-16 14:01:54,093 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-16 14:01:54,625 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 14:01:54,625 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 14:01:54,906 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 14:01:54,921 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s267ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-16 14:01:59,392 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-16 14:01:59,392 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-16 14:01:59,392 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-16 14:01:59,392 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-16 14:01:59,392 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-16 14:01:59,423 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 14:01:59,423 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 14:01:59,423 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 14:01:59,423 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 14:01:59,470 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-16 14:01:59,470 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-16 14:01:59,532 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 14:01:59,595 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-16 14:01:59,907 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-16 14:01:59,923 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 14:01:59,923 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 14:01:59,923 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 14:01:59,923 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 14:01:59,923 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 14:01:59,938 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 14:01:59,938 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 14:01:59,938 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 14:01:59,938 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 14:01:59,954 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 14:01:59,985 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-16 14:01:59,985 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-16 14:01:59,985 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-16 14:01:59,985 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-16 14:01:59,985 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-16 14:01:59,985 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-16 14:01:59,985 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-16 14:01:59,985 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-16 14:01:59,985 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-16 14:01:59,985 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-16 14:02:00,048 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-16 14:02:00,048 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-16 14:02:00,095 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-16 14:02:00,126 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-16 14:02:00,157 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-16 14:02:00,188 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-16 14:02:00,220 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-16 14:02:00,235 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-16 14:02:00,251 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-16 14:02:00,298 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-16 14:02:00,313 [main] INFO  (Database#info():2846) - }
2020-04-16 14:02:00,313 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-16 14:02:00,313 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-16 14:02:00,345 [main] INFO  (Database#info():2846) - }
2020-04-16 14:02:00,360 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-16 14:02:00,392 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 14:02:00,392 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-16 14:02:00,392 [main] INFO  (Database#info():2846) -     parse('cart');
2020-04-16 14:02:01,067 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-16 14:02:01,312 [main] INFO  (Database#info():2846) -     parse('stock');
2020-04-16 14:02:01,502 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-16 14:02:01,642 [main] INFO  (Database#info():2846) - }
2020-04-16 14:02:01,642 [main] INFO  (Database#info():2846) -  
2020-04-16 14:02:01,861 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 14:02:01,861 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 14:02:01,876 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 14:02:01,892 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s516ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-16 14:02:06,576 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-16 14:02:06,581 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-16 14:02:06,582 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-16 14:02:06,583 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-16 14:02:06,584 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-16 14:02:06,626 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 14:02:06,627 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 14:02:06,628 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 14:02:06,630 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 14:02:06,703 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 14:02:06,717 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 14:02:07,157 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 14:02:07,158 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 14:02:07,301 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select p.name, p.description, p.price, p.unit, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
 order by p.product_id desc
2020-04-16 14:02:07,732 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-16 14:02:07,734 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 14:02:07,735 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 14:02:07,840 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s279ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o ProductBhv_selectProductRelation.sql

   o: OK (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-16 14:02:09,513 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-16 14:02:09,513 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-16 14:02:09,513 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-16 14:02:09,513 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-16 14:02:09,513 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-16 14:02:09,560 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 14:02:09,560 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 14:02:09,560 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 14:02:09,560 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 14:02:09,591 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-16 14:02:09,591 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-16 14:02:09,591 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 14:02:09,857 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 14:02:09,857 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 14:02:10,153 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 14:02:10,153 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 14:02:10,169 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select p.name, p.description, p.price, p.unit, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
 order by p.product_id desc
2020-04-16 14:02:10,529 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-04-16 14:02:10,529 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 14:02:10,794 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-16 14:02:10,794 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-16 14:02:10,794 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-16 14:02:10,794 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-16 14:02:10,810 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-16 14:02:10,826 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
ProductRelation
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-04-16 14:02:10,826 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-16 14:02:10,826 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-16 14:02:10,826 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-16 14:02:10,841 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
ProductRelationPmb (typed to list, entity)
2020-04-16 14:02:10,841 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-16 14:02:11,247 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 14:02:11,247 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 14:02:11,247 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-16 14:02:11,247 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-16 14:02:11,263 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 14:02:11,263 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-16 14:02:11,357 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-04-16 14:02:11,357 [main] INFO  (Database#info():2846) - }
2020-04-16 14:02:11,357 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-04-16 14:02:11,420 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-04-16 14:02:11,654 [main] INFO  (Database#info():2846) - }
2020-04-16 14:02:12,060 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 1

  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-04-16 14:02:12,076 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 14:02:12,076 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 14:02:12,092 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 14:02:12,092 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 14:02:12,185 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s703ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-16 14:05:11,644 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-16 14:05:11,659 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-16 14:05:11,659 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-16 14:05:11,659 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-16 14:05:11,659 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-16 14:05:11,690 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 14:05:11,690 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 14:05:11,690 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 14:05:11,690 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 14:05:11,769 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-16 14:05:11,769 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-16 14:05:11,769 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-16 14:05:11,785 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 14:05:11,878 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-16 14:05:11,894 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 14:05:12,613 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 14:05:12,613 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 14:05:12,613 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-16 14:05:12,628 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-16 14:05:12,628 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-16 14:05:12,628 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-16 14:05:12,644 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-16 14:05:12,660 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-16 14:05:12,675 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-16 14:05:12,691 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-16 14:05:12,691 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 14:05:12,691 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-16 14:05:12,691 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-16 14:05:12,738 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.order(TABLE)
2020-04-16 14:05:12,769 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'JDBC'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.7.29-0ubuntu0.18.04.1

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
java.lang.IllegalStateException: SQL exception when serializing SchemaXml: ./schema/project-schema-dfclient.xml
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.serialize(DfSchemaXmlSerializer.java:323)
	at org.apache.torque.task.TorqueJDBCTransformTask.doExecute(TorqueJDBCTransformTask.java:127)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: org.dbflute.exception.DfJDBCException: JDBC said...
/- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[SQLException]
org.dbflute.exception.DfJDBCException
Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute the SQL for getting auto-increment

[Advice]
DBFlute executes the SQL to get auto-increment meta data.
The table might not exist on your schema. Or the schema
to be set at 'dfprop' might be mistake in the first place.

And other points can be causes
 e.g. reservation word, authentication, ...
If your primary key of the table is reservation word in the DBMS,
set quatation settings 'quoteColumnNameList' of littleAdjustmentMap.dfprop.

So check your settings and environments.

[Table]
web.order

[PrimaryKey]
order_id

[SQL for getting]
select order_id from order where 0 = 1
* * * * * * * * * */

[NextException]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order where 0 = 1' at line 1
- - - - - - - - - -/
	at org.dbflute.exception.DfJDBCException.voice(DfJDBCException.java:40)
	... 35 more
2020-04-16 14:05:12,863 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 14:05:12,941 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s314ms *Abort

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-16 14:14:14,720 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-16 14:14:14,727 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-16 14:14:14,728 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-16 14:14:14,729 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-16 14:14:14,730 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-16 14:14:14,784 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 14:14:14,785 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 14:14:14,787 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 14:14:14,788 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 14:14:14,868 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-16 14:14:14,868 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-16 14:14:14,869 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-16 14:14:14,882 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 14:14:14,989 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-16 14:14:15,012 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 14:14:15,818 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 14:14:15,818 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 14:14:15,818 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-16 14:14:15,834 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-16 14:14:15,834 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-16 14:14:15,834 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-16 14:14:15,849 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-16 14:14:15,849 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-16 14:14:15,865 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-16 14:14:15,881 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-16 14:14:15,881 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 14:14:15,881 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-16 14:14:15,881 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-16 14:14:15,927 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.order(TABLE)
2020-04-16 14:14:15,959 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'JDBC'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.7.29-0ubuntu0.18.04.1

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
java.lang.IllegalStateException: SQL exception when serializing SchemaXml: ./schema/project-schema-dfclient.xml
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.serialize(DfSchemaXmlSerializer.java:323)
	at org.apache.torque.task.TorqueJDBCTransformTask.doExecute(TorqueJDBCTransformTask.java:127)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: org.dbflute.exception.DfJDBCException: JDBC said...
/- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[SQLException]
org.dbflute.exception.DfJDBCException
Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute the SQL for getting auto-increment

[Advice]
DBFlute executes the SQL to get auto-increment meta data.
The table might not exist on your schema. Or the schema
to be set at 'dfprop' might be mistake in the first place.

And other points can be causes
 e.g. reservation word, authentication, ...
If your primary key of the table is reservation word in the DBMS,
set quatation settings 'quoteColumnNameList' of littleAdjustmentMap.dfprop.

So check your settings and environments.

[Table]
web.order

[PrimaryKey]
order_id

[SQL for getting]
select order_id from order where 0 = 1
* * * * * * * * * */

[NextException]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order where 0 = 1' at line 1
- - - - - - - - - -/
	at org.dbflute.exception.DfJDBCException.voice(DfJDBCException.java:40)
	... 35 more
2020-04-16 14:14:16,068 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 14:14:16,162 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s459ms *Abort

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-16 14:24:41,324 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-16 14:24:41,324 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-16 14:24:41,324 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-16 14:24:41,324 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-16 14:24:41,324 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-16 14:24:41,371 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 14:24:41,371 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 14:24:41,371 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 14:24:41,371 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 14:24:41,449 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-16 14:24:41,449 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-16 14:24:41,449 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-16 14:24:41,465 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 14:24:41,558 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-16 14:24:41,590 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 14:24:42,315 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 14:24:42,315 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 14:24:42,330 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-16 14:24:42,330 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-16 14:24:42,330 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-16 14:24:42,330 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-16 14:24:42,346 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-16 14:24:42,361 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-16 14:24:42,381 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-16 14:24:42,395 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-16 14:24:42,396 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 14:24:42,397 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-16 14:24:42,399 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-16 14:24:42,432 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.order(TABLE)
2020-04-16 14:24:42,463 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'JDBC'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.7.29-0ubuntu0.18.04.1

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
java.lang.IllegalStateException: SQL exception when serializing SchemaXml: ./schema/project-schema-dfclient.xml
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.serialize(DfSchemaXmlSerializer.java:323)
	at org.apache.torque.task.TorqueJDBCTransformTask.doExecute(TorqueJDBCTransformTask.java:127)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: org.dbflute.exception.DfJDBCException: JDBC said...
/- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[SQLException]
org.dbflute.exception.DfJDBCException
Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute the SQL for getting auto-increment

[Advice]
DBFlute executes the SQL to get auto-increment meta data.
The table might not exist on your schema. Or the schema
to be set at 'dfprop' might be mistake in the first place.

And other points can be causes
 e.g. reservation word, authentication, ...
If your primary key of the table is reservation word in the DBMS,
set quatation settings 'quoteColumnNameList' of littleAdjustmentMap.dfprop.

So check your settings and environments.

[Table]
web.order

[PrimaryKey]
odr_id

[SQL for getting]
select odr_id from order where 0 = 1
* * * * * * * * * */

[NextException]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order where 0 = 1' at line 1
- - - - - - - - - -/
	at org.dbflute.exception.DfJDBCException.voice(DfJDBCException.java:40)
	... 35 more
2020-04-16 14:24:42,564 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 14:24:42,658 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s349ms *Abort

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-16 14:25:48,420 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-16 14:25:48,436 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-16 14:25:48,436 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-16 14:25:48,436 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-16 14:25:48,436 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-16 14:25:48,467 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 14:25:48,467 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 14:25:48,467 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 14:25:48,467 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 14:25:48,546 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-16 14:25:48,546 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-16 14:25:48,546 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-16 14:25:48,561 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 14:25:48,655 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-16 14:25:48,670 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 14:25:49,400 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 14:25:49,400 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 14:25:49,400 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-16 14:25:49,415 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-16 14:25:49,415 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-16 14:25:49,415 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-16 14:25:49,431 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-16 14:25:49,431 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-16 14:25:49,447 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-16 14:25:49,462 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-16 14:25:49,462 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 14:25:49,462 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-16 14:25:49,462 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-16 14:25:49,515 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-04-16 14:25:49,515 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-16 14:25:49,530 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-04-16 14:25:49,546 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-16 14:25:49,561 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-16 14:25:49,561 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-16 14:25:49,561 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-04-16 14:25:49,561 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-16 14:25:49,561 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-16 14:25:49,561 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-16 14:25:49,577 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-16 14:25:49,577 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-16 14:25:49,577 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-16 14:25:49,593 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-16 14:25:49,608 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 14:25:49,671 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1555) -  -> different from previous (schema diff)
2020-04-16 14:25:49,686 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1557) - ...Serializing schema-diff:
2020-04-16 14:25:49,686 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1558) -   filePath = ./schema/project-history-dfclient.diffmap
2020-04-16 14:25:49,686 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 14:25:49,795 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s390ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-16 14:25:51,421 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-16 14:25:51,421 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-16 14:25:51,421 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-16 14:25:51,421 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-16 14:25:51,421 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-16 14:25:51,468 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 14:25:51,468 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 14:25:51,468 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 14:25:51,468 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 14:25:51,468 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-16 14:25:51,468 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-16 14:25:51,468 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-16 14:25:51,468 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-16 14:25:51,468 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-16 14:25:51,468 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-16 14:25:51,531 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 14:25:51,609 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 14:25:51,609 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 14:25:51,609 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 14:25:51,609 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 14:25:51,609 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 14:25:51,609 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 14:25:51,609 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 14:25:51,624 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 14:25:51,624 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 14:25:51,640 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 14:25:51,734 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-16 14:25:51,968 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-16 14:25:51,968 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-16 14:25:52,030 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=4
2020-04-16 14:25:52,093 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-16 14:25:52,093 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-16 14:25:52,124 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-16 14:25:52,390 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 14:25:52,390 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 14:25:52,421 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 14:25:52,421 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s031ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-16 14:25:56,985 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-16 14:25:56,985 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-16 14:25:56,985 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-16 14:25:56,985 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-16 14:25:56,985 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-16 14:25:57,032 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 14:25:57,032 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 14:25:57,032 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 14:25:57,032 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 14:25:57,063 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-16 14:25:57,063 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-16 14:25:57,141 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 14:25:57,204 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-16 14:25:57,454 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-16 14:25:57,454 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 14:25:57,454 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 14:25:57,454 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 14:25:57,469 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 14:25:57,469 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 14:25:57,469 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 14:25:57,469 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 14:25:57,469 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 14:25:57,469 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 14:25:57,486 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 14:25:57,501 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-16 14:25:57,501 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-16 14:25:57,501 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-16 14:25:57,501 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-16 14:25:57,501 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-16 14:25:57,501 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-16 14:25:57,501 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-16 14:25:57,501 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-16 14:25:57,501 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-16 14:25:57,517 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-16 14:25:57,532 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-16 14:25:57,532 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-16 14:25:57,532 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-16 14:25:57,548 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-16 14:25:57,564 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-16 14:25:57,579 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-16 14:25:57,595 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-16 14:25:57,595 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-16 14:25:57,595 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-16 14:25:57,611 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-16 14:25:57,611 [main] INFO  (Database#info():2846) - }
2020-04-16 14:25:57,611 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-16 14:25:57,611 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-16 14:25:57,642 [main] INFO  (Database#info():2846) - }
2020-04-16 14:25:57,642 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-16 14:25:57,673 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 14:25:57,673 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-16 14:25:57,689 [main] INFO  (Database#info():2846) -     parse('cart');
2020-04-16 14:25:57,876 [main] INFO  (Database#info():2846) -     parse('orders');
2020-04-16 14:25:58,048 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-16 14:25:58,233 [main] INFO  (Database#info():2846) -     parse('stock');
2020-04-16 14:25:58,385 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-16 14:25:58,543 [main] INFO  (Database#info():2846) - }
2020-04-16 14:25:58,544 [main] INFO  (Database#info():2846) -  
2020-04-16 14:25:58,695 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 14:25:58,699 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 14:25:58,707 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 14:25:58,726 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s755ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-16 14:26:02,246 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-16 14:26:02,250 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-16 14:26:02,251 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-16 14:26:02,252 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-16 14:26:02,252 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-16 14:26:02,288 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 14:26:02,289 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 14:26:02,289 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 14:26:02,290 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 14:26:02,381 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 14:26:02,391 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 14:26:02,812 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 14:26:02,813 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 14:26:02,868 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select p.name, p.description, p.price, p.unit, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
 order by p.product_id desc
2020-04-16 14:26:02,919 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-16 14:26:02,921 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 14:26:02,925 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 14:26:03,045 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s822ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o ProductBhv_selectProductRelation.sql

   o: OK (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-16 14:26:04,664 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-16 14:26:04,664 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-16 14:26:04,664 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-16 14:26:04,664 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-16 14:26:04,664 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-16 14:26:04,695 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 14:26:04,695 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 14:26:04,695 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 14:26:04,695 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 14:26:04,726 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-16 14:26:04,726 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-16 14:26:04,742 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 14:26:04,820 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 14:26:04,836 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 14:26:05,085 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 14:26:05,085 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 14:26:05,101 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select p.name, p.description, p.price, p.unit, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
 order by p.product_id desc
2020-04-16 14:26:05,164 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-04-16 14:26:05,164 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 14:26:05,240 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-16 14:26:05,242 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-16 14:26:05,243 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-16 14:26:05,244 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-16 14:26:05,245 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-16 14:26:05,260 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
ProductRelation
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-04-16 14:26:05,269 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-16 14:26:05,269 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-16 14:26:05,272 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-16 14:26:05,274 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
ProductRelationPmb (typed to list, entity)
2020-04-16 14:26:05,283 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-16 14:26:05,518 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 14:26:05,520 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 14:26:05,526 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-16 14:26:05,530 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-16 14:26:05,549 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 14:26:05,550 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-16 14:26:05,630 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-04-16 14:26:05,633 [main] INFO  (Database#info():2846) - }
2020-04-16 14:26:05,634 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-04-16 14:26:05,643 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-04-16 14:26:05,664 [main] INFO  (Database#info():2846) - }
2020-04-16 14:26:05,722 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 1

  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-04-16 14:26:05,737 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 14:26:05,739 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 14:26:05,746 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 14:26:05,747 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 14:26:05,862 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s223ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-16 15:39:10,260 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-16 15:39:10,260 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-16 15:39:10,260 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-16 15:39:10,276 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-16 15:39:10,276 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-16 15:39:10,307 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 15:39:10,307 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 15:39:10,307 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 15:39:10,307 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 15:39:10,385 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-16 15:39:10,385 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-16 15:39:10,385 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-16 15:39:10,401 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 15:39:10,495 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-16 15:39:10,510 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 15:39:11,247 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 15:39:11,247 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 15:39:11,247 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-16 15:39:11,247 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-16 15:39:11,247 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-16 15:39:11,247 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-16 15:39:11,263 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-16 15:39:11,278 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-16 15:39:11,294 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-16 15:39:11,309 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-16 15:39:11,309 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 15:39:11,309 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-16 15:39:11,309 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-16 15:39:11,356 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-04-16 15:39:11,356 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-16 15:39:11,372 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-04-16 15:39:11,388 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-16 15:39:11,403 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-16 15:39:11,403 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-16 15:39:11,403 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-04-16 15:39:11,403 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-16 15:39:11,403 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-16 15:39:11,403 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-16 15:39:11,419 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-16 15:39:11,419 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-16 15:39:11,419 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-16 15:39:11,434 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-16 15:39:11,528 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 15:39:11,591 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-04-16 15:39:11,591 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 15:39:11,700 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s455ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-16 15:39:13,354 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-16 15:39:13,354 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-16 15:39:13,354 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-16 15:39:13,354 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-16 15:39:13,354 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-16 15:39:13,401 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 15:39:13,401 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 15:39:13,401 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 15:39:13,401 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 15:39:13,401 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-16 15:39:13,401 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-16 15:39:13,401 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-16 15:39:13,401 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-16 15:39:13,401 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-16 15:39:13,401 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-16 15:39:13,463 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 15:39:13,541 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 15:39:13,541 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 15:39:13,541 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 15:39:13,541 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 15:39:13,541 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 15:39:13,541 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 15:39:13,557 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 15:39:13,557 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 15:39:13,557 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 15:39:13,573 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 15:39:13,666 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-16 15:39:13,857 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-16 15:39:13,873 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-16 15:39:13,904 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=4
2020-04-16 15:39:13,967 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-16 15:39:13,967 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-16 15:39:13,998 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-16 15:39:14,467 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 15:39:14,467 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 15:39:14,482 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 15:39:14,498 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s159ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-16 15:39:18,968 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-16 15:39:18,973 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-16 15:39:18,974 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-16 15:39:18,976 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-16 15:39:18,977 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-16 15:39:19,015 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 15:39:19,016 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 15:39:19,017 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 15:39:19,018 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 15:39:19,049 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-16 15:39:19,050 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-16 15:39:19,128 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 15:39:19,183 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-16 15:39:19,448 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-16 15:39:19,464 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 15:39:19,464 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 15:39:19,464 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 15:39:19,464 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 15:39:19,464 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 15:39:19,464 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 15:39:19,480 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 15:39:19,480 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 15:39:19,480 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 15:39:19,495 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 15:39:19,495 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-16 15:39:19,495 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-16 15:39:19,511 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-16 15:39:19,511 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-16 15:39:19,511 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-16 15:39:19,511 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-16 15:39:19,511 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-16 15:39:19,511 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-16 15:39:19,511 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-16 15:39:19,511 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-16 15:39:19,527 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-16 15:39:19,542 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-16 15:39:19,542 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-16 15:39:19,558 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-16 15:39:19,558 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-16 15:39:19,589 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-16 15:39:19,589 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-16 15:39:19,605 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-16 15:39:19,605 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-16 15:39:19,620 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-16 15:39:19,620 [main] INFO  (Database#info():2846) - }
2020-04-16 15:39:19,620 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-16 15:39:19,620 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-16 15:39:19,652 [main] INFO  (Database#info():2846) - }
2020-04-16 15:39:19,652 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-16 15:39:19,698 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 15:39:19,698 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-16 15:39:19,698 [main] INFO  (Database#info():2846) -     parse('cart');
2020-04-16 15:39:19,906 [main] INFO  (Database#info():2846) -     parse('orders');
2020-04-16 15:39:19,999 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-16 15:39:20,109 [main] INFO  (Database#info():2846) -     parse('stock');
2020-04-16 15:39:20,218 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-16 15:39:20,327 [main] INFO  (Database#info():2846) - }
2020-04-16 15:39:20,327 [main] INFO  (Database#info():2846) -  
2020-04-16 15:39:20,484 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 15:39:20,484 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 15:39:20,499 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 15:39:20,499 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s556ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-16 15:39:22,454 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-16 15:39:22,470 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-16 15:39:22,470 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-16 15:39:22,470 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-16 15:39:22,470 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-16 15:39:22,501 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 15:39:22,501 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 15:39:22,501 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 15:39:22,501 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 15:39:22,579 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 15:39:22,598 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 15:39:23,001 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 15:39:23,001 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 15:39:23,032 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
 order by p.product_id desc
2020-04-16 15:39:23,079 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-16 15:39:23,079 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 15:39:23,079 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 15:39:23,188 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s733ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o ProductBhv_selectProductRelation.sql

   o: OK (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-16 15:39:24,881 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-16 15:39:24,886 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-16 15:39:24,887 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-16 15:39:24,888 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-16 15:39:24,889 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-16 15:39:24,922 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 15:39:24,923 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 15:39:24,924 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 15:39:24,925 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 15:39:24,952 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-16 15:39:24,953 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-16 15:39:24,963 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 15:39:25,051 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 15:39:25,060 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 15:39:25,323 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 15:39:25,323 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 15:39:25,323 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
 order by p.product_id desc
2020-04-16 15:39:25,386 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-04-16 15:39:25,386 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 15:39:25,464 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-16 15:39:25,464 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-16 15:39:25,464 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-16 15:39:25,464 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-16 15:39:25,464 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-16 15:39:25,480 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
ProductRelation
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-04-16 15:39:25,480 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-16 15:39:25,495 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-16 15:39:25,495 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-16 15:39:25,495 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
ProductRelationPmb (typed to list, entity)
2020-04-16 15:39:25,511 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-16 15:39:25,745 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 15:39:25,745 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 15:39:25,761 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-16 15:39:25,761 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-16 15:39:25,776 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 15:39:25,776 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-16 15:39:25,940 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-04-16 15:39:25,940 [main] INFO  (Database#info():2846) - }
2020-04-16 15:39:25,940 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-04-16 15:39:25,955 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-04-16 15:39:25,971 [main] INFO  (Database#info():2846) - }
2020-04-16 15:39:26,033 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 1

  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-04-16 15:39:26,049 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 15:39:26,049 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 15:39:26,049 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 15:39:26,049 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 15:39:26,143 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s287ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-16 15:42:44,983 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-16 15:42:44,983 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-16 15:42:44,983 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-16 15:42:44,999 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-16 15:42:44,999 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-16 15:42:45,030 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 15:42:45,030 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 15:42:45,045 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 15:42:45,045 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 15:42:45,108 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-16 15:42:45,108 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-16 15:42:45,108 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-16 15:42:45,124 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 15:42:45,233 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-16 15:42:45,249 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 15:42:45,952 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 15:42:45,968 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 15:42:45,968 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-16 15:42:45,968 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-16 15:42:45,968 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-16 15:42:45,968 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-16 15:42:45,983 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-16 15:42:45,999 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-16 15:42:46,015 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-16 15:42:46,015 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-16 15:42:46,015 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 15:42:46,015 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-16 15:42:46,015 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-16 15:42:46,061 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-04-16 15:42:46,077 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-16 15:42:46,093 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-04-16 15:42:46,108 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-16 15:42:46,124 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-16 15:42:46,124 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-16 15:42:46,124 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-04-16 15:42:46,124 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-16 15:42:46,124 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-16 15:42:46,124 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-16 15:42:46,140 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-16 15:42:46,140 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-16 15:42:46,140 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-16 15:42:46,155 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-16 15:42:46,155 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 15:42:46,241 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-04-16 15:42:46,242 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 15:42:46,368 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s405ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-16 15:42:48,032 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-16 15:42:48,032 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-16 15:42:48,032 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-16 15:42:48,032 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-16 15:42:48,032 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-16 15:42:48,078 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 15:42:48,078 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 15:42:48,078 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 15:42:48,078 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 15:42:48,078 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-16 15:42:48,078 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-16 15:42:48,078 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-16 15:42:48,078 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-16 15:42:48,078 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-16 15:42:48,078 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-16 15:42:48,141 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 15:42:48,219 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 15:42:48,219 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 15:42:48,219 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 15:42:48,219 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 15:42:48,219 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 15:42:48,235 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 15:42:48,235 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 15:42:48,235 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 15:42:48,235 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 15:42:48,250 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 15:42:48,344 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-16 15:42:48,531 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-16 15:42:48,547 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-16 15:42:48,594 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=4
2020-04-16 15:42:48,641 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-16 15:42:48,641 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-16 15:42:48,672 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-16 15:42:48,859 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 15:42:48,859 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 15:42:48,891 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 15:42:48,891 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s891ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-16 15:42:53,401 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-16 15:42:53,401 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-16 15:42:53,401 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-16 15:42:53,401 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-16 15:42:53,401 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-16 15:42:53,447 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 15:42:53,447 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 15:42:53,447 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 15:42:53,447 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 15:42:53,479 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-16 15:42:53,479 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-16 15:42:53,572 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 15:42:53,635 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-16 15:42:53,932 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-16 15:42:53,941 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 15:42:53,941 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 15:42:53,941 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 15:42:53,941 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 15:42:53,941 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 15:42:53,956 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 15:42:53,956 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 15:42:53,956 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 15:42:53,956 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 15:42:53,972 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 15:42:53,988 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-16 15:42:53,988 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-16 15:42:53,988 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-16 15:42:53,988 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-16 15:42:53,988 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-16 15:42:53,988 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-16 15:42:53,988 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-16 15:42:53,988 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-16 15:42:53,988 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-16 15:42:53,988 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-16 15:42:54,019 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-16 15:42:54,019 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-16 15:42:54,019 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-16 15:42:54,034 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-16 15:42:54,050 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-16 15:42:54,066 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-16 15:42:54,081 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-16 15:42:54,081 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-16 15:42:54,081 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-16 15:42:54,097 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-16 15:42:54,097 [main] INFO  (Database#info():2846) - }
2020-04-16 15:42:54,097 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-16 15:42:54,097 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-16 15:42:54,128 [main] INFO  (Database#info():2846) - }
2020-04-16 15:42:54,144 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-16 15:42:54,175 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 15:42:54,191 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-16 15:42:54,191 [main] INFO  (Database#info():2846) -     parse('cart');
2020-04-16 15:42:54,409 [main] INFO  (Database#info():2846) -     parse('orders');
2020-04-16 15:42:54,519 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-16 15:42:54,612 [main] INFO  (Database#info():2846) -     parse('stock');
2020-04-16 15:42:54,753 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-16 15:42:54,831 [main] INFO  (Database#info():2846) - }
2020-04-16 15:42:54,831 [main] INFO  (Database#info():2846) -  
2020-04-16 15:42:54,941 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 15:42:54,957 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 15:42:54,957 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 15:42:54,972 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s588ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-16 15:42:56,698 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-16 15:42:56,698 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-16 15:42:56,698 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-16 15:42:56,698 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-16 15:42:56,698 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-16 15:42:56,729 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 15:42:56,729 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 15:42:56,729 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 15:42:56,729 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 15:42:56,792 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 15:42:56,807 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 15:42:57,082 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 15:42:57,082 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 15:42:57,113 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
 order by p.product_id desc
2020-04-16 15:42:57,145 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-16 15:42:57,145 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 15:42:57,145 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 15:42:57,223 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s556ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o ProductBhv_selectProductRelation.sql

   o: OK (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-16 15:42:58,678 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-16 15:42:58,693 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-16 15:42:58,693 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-16 15:42:58,693 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-16 15:42:58,693 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-16 15:42:58,725 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 15:42:58,725 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 15:42:58,725 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 15:42:58,725 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 15:42:58,756 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-16 15:42:58,756 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-16 15:42:58,771 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 15:42:58,849 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 15:42:58,865 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 15:42:59,130 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 15:42:59,130 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 15:42:59,130 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
 order by p.product_id desc
2020-04-16 15:42:59,192 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-04-16 15:42:59,192 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 15:42:59,270 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-16 15:42:59,270 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-16 15:42:59,270 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-16 15:42:59,270 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-16 15:42:59,270 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-16 15:42:59,286 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
ProductRelation
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-04-16 15:42:59,301 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-16 15:42:59,301 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-16 15:42:59,301 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-16 15:42:59,301 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
ProductRelationPmb (typed to list, entity)
2020-04-16 15:42:59,317 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-16 15:42:59,551 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 15:42:59,551 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 15:42:59,551 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-16 15:42:59,551 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-16 15:42:59,567 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 15:42:59,567 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-16 15:42:59,661 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-04-16 15:42:59,661 [main] INFO  (Database#info():2846) - }
2020-04-16 15:42:59,661 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-04-16 15:42:59,676 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-04-16 15:42:59,692 [main] INFO  (Database#info():2846) - }
2020-04-16 15:42:59,739 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 1

  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-04-16 15:42:59,754 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 15:42:59,754 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 15:42:59,754 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 15:42:59,770 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 15:42:59,864 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s186ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-16 15:48:44,349 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-16 15:48:44,349 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-16 15:48:44,349 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-16 15:48:44,349 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-16 15:48:44,349 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-16 15:48:44,396 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 15:48:44,396 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 15:48:44,396 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 15:48:44,396 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 15:48:44,459 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-16 15:48:44,459 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-16 15:48:44,459 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-16 15:48:44,474 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 15:48:44,584 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-16 15:48:44,599 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 15:48:45,334 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 15:48:45,334 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 15:48:45,350 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-16 15:48:45,350 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-16 15:48:45,350 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-16 15:48:45,350 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-16 15:48:45,365 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-16 15:48:45,381 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-16 15:48:45,381 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-16 15:48:45,397 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-16 15:48:45,397 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 15:48:45,397 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-16 15:48:45,397 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-16 15:48:45,443 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-04-16 15:48:45,459 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-16 15:48:45,475 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-04-16 15:48:45,490 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-16 15:48:45,506 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-16 15:48:45,506 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-16 15:48:45,506 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-04-16 15:48:45,506 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-16 15:48:45,506 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-16 15:48:45,506 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-16 15:48:45,522 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-16 15:48:45,522 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-16 15:48:45,522 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-16 15:48:45,537 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-16 15:48:45,537 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 15:48:45,615 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-04-16 15:48:45,615 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 15:48:45,709 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s391ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-16 15:48:47,335 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-16 15:48:47,335 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-16 15:48:47,335 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-16 15:48:47,350 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-16 15:48:47,350 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-16 15:48:47,382 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 15:48:47,382 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 15:48:47,382 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 15:48:47,382 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 15:48:47,382 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-16 15:48:47,382 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-16 15:48:47,382 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-16 15:48:47,382 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-16 15:48:47,397 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-16 15:48:47,397 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-16 15:48:47,460 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 15:48:47,522 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 15:48:47,522 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 15:48:47,538 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 15:48:47,538 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 15:48:47,538 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 15:48:47,538 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 15:48:47,538 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 15:48:47,538 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 15:48:47,538 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 15:48:47,553 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 15:48:47,647 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-16 15:48:47,913 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-16 15:48:47,913 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-16 15:48:47,960 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=4
2020-04-16 15:48:48,006 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-16 15:48:48,022 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-16 15:48:48,038 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-16 15:48:48,241 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 15:48:48,241 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 15:48:48,257 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 15:48:48,272 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s954ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-16 15:48:52,852 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-16 15:48:52,867 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-16 15:48:52,867 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-16 15:48:52,867 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-16 15:48:52,867 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-16 15:48:52,899 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 15:48:52,899 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 15:48:52,914 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 15:48:52,914 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 15:48:52,945 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-16 15:48:52,945 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-16 15:48:53,023 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 15:48:53,086 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-16 15:48:53,336 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-16 15:48:53,352 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 15:48:53,352 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 15:48:53,352 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 15:48:53,352 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 15:48:53,352 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 15:48:53,368 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 15:48:53,368 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 15:48:53,368 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 15:48:53,368 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 15:48:53,383 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 15:48:53,399 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-16 15:48:53,399 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-16 15:48:53,399 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-16 15:48:53,399 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-16 15:48:53,399 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-16 15:48:53,399 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-16 15:48:53,399 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-16 15:48:53,399 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-16 15:48:53,399 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-16 15:48:53,399 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-16 15:48:53,430 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-16 15:48:53,430 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-16 15:48:53,430 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-16 15:48:53,446 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-16 15:48:53,461 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-16 15:48:53,477 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-16 15:48:53,493 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-16 15:48:53,493 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-16 15:48:53,493 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-16 15:48:53,508 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-16 15:48:53,508 [main] INFO  (Database#info():2846) - }
2020-04-16 15:48:53,508 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-16 15:48:53,508 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-16 15:48:53,540 [main] INFO  (Database#info():2846) - }
2020-04-16 15:48:53,540 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-16 15:48:53,571 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 15:48:53,571 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-16 15:48:53,571 [main] INFO  (Database#info():2846) -     parse('cart');
2020-04-16 15:48:53,758 [main] INFO  (Database#info():2846) -     parse('orders');
2020-04-16 15:48:53,883 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-16 15:48:54,008 [main] INFO  (Database#info():2846) -     parse('stock');
2020-04-16 15:48:54,118 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-16 15:48:54,227 [main] INFO  (Database#info():2846) - }
2020-04-16 15:48:54,227 [main] INFO  (Database#info():2846) -  
2020-04-16 15:48:54,337 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 15:48:54,337 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 15:48:54,352 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 15:48:54,352 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s516ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-16 15:48:56,190 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-16 15:48:56,190 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-16 15:48:56,190 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-16 15:48:56,190 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-16 15:48:56,190 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-16 15:48:56,252 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 15:48:56,252 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 15:48:56,252 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 15:48:56,252 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 15:48:56,330 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 15:48:56,346 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 15:48:56,705 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 15:48:56,721 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 15:48:56,752 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
 order by p.product_id desc
2020-04-16 15:48:56,783 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-16 15:48:56,783 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 15:48:56,783 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 15:48:56,877 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s703ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o ProductBhv_selectProductRelation.sql

   o: OK (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-16 15:48:58,573 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-16 15:48:58,588 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-16 15:48:58,588 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-16 15:48:58,588 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-16 15:48:58,588 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-16 15:48:58,620 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 15:48:58,620 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 15:48:58,620 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 15:48:58,620 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 15:48:58,651 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-16 15:48:58,651 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-16 15:48:58,651 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 15:48:58,745 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 15:48:58,760 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 15:48:59,026 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 15:48:59,041 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 15:48:59,041 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
 order by p.product_id desc
2020-04-16 15:48:59,120 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-04-16 15:48:59,120 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 15:48:59,183 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-16 15:48:59,183 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-16 15:48:59,183 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-16 15:48:59,183 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-16 15:48:59,183 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-16 15:48:59,198 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-04-16 15:48:59,214 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-16 15:48:59,214 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-16 15:48:59,214 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-16 15:48:59,214 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
ProductRelationPmb (typed to list, entity)
2020-04-16 15:48:59,230 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-16 15:48:59,464 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 15:48:59,464 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 15:48:59,464 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-16 15:48:59,464 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-16 15:48:59,479 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 15:48:59,479 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-16 15:48:59,651 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-04-16 15:48:59,667 [main] INFO  (Database#info():2846) - }
2020-04-16 15:48:59,667 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-04-16 15:48:59,683 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-04-16 15:48:59,698 [main] INFO  (Database#info():2846) - }
2020-04-16 15:48:59,761 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 1

  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-04-16 15:48:59,776 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 15:48:59,792 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 15:48:59,792 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 15:48:59,792 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 15:48:59,886 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s329ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-16 18:05:04,191 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-16 18:05:04,191 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-16 18:05:04,191 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-16 18:05:04,207 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-16 18:05:04,207 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-16 18:05:04,238 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:05:04,253 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:05:04,253 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:05:04,253 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:05:04,316 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-16 18:05:04,332 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-16 18:05:04,332 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-16 18:05:04,347 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:05:04,457 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-16 18:05:04,472 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 18:05:05,347 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 18:05:05,347 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 18:05:05,347 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-16 18:05:05,347 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-16 18:05:05,347 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-16 18:05:05,347 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-16 18:05:05,394 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-16 18:05:05,394 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-16 18:05:05,410 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-16 18:05:05,426 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-16 18:05:05,426 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 18:05:05,426 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-16 18:05:05,426 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-16 18:05:05,488 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-04-16 18:05:05,488 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-16 18:05:05,504 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-04-16 18:05:05,519 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-16 18:05:05,535 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-16 18:05:05,535 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-16 18:05:05,535 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-04-16 18:05:05,535 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-16 18:05:05,535 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-16 18:05:05,551 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-16 18:05:05,551 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-16 18:05:05,551 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-16 18:05:05,551 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-16 18:05:05,566 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-16 18:05:05,582 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:05:05,660 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-04-16 18:05:05,660 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 18:05:05,769 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s594ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-16 18:05:07,317 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-16 18:05:07,317 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-16 18:05:07,332 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-16 18:05:07,332 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-16 18:05:07,332 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-16 18:05:07,364 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:05:07,364 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:05:07,364 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:05:07,364 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:05:07,379 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-16 18:05:07,379 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-16 18:05:07,379 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-16 18:05:07,379 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-16 18:05:07,379 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-16 18:05:07,379 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-16 18:05:07,442 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:05:07,504 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 18:05:07,504 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 18:05:07,520 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 18:05:07,520 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 18:05:07,520 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 18:05:07,520 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 18:05:07,520 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 18:05:07,520 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 18:05:07,535 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 18:05:07,551 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 18:05:07,660 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-16 18:05:07,864 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-16 18:05:07,879 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-16 18:05:07,911 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=4
2020-04-16 18:05:08,366 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-16 18:05:08,366 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-16 18:05:08,398 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-16 18:05:08,757 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 18:05:08,757 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 18:05:08,819 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 18:05:08,835 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s518ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-16 18:05:13,256 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-16 18:05:13,256 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-16 18:05:13,256 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-16 18:05:13,256 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-16 18:05:13,256 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-16 18:05:13,303 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:05:13,303 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:05:13,303 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:05:13,303 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:05:13,334 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-16 18:05:13,350 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-16 18:05:13,412 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:05:13,475 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-16 18:05:13,787 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-16 18:05:13,803 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 18:05:13,803 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 18:05:13,803 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 18:05:13,803 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 18:05:13,803 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 18:05:13,803 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 18:05:13,803 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 18:05:13,803 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 18:05:13,818 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 18:05:13,818 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 18:05:13,850 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-16 18:05:13,850 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-16 18:05:13,850 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-16 18:05:13,850 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-16 18:05:13,850 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-16 18:05:13,850 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-16 18:05:13,850 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-16 18:05:13,850 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-16 18:05:13,850 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-16 18:05:13,850 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-16 18:05:13,881 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-16 18:05:13,881 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-16 18:05:13,913 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-16 18:05:13,944 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-16 18:05:13,975 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-16 18:05:14,022 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-16 18:05:14,053 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-16 18:05:14,085 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-16 18:05:14,116 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-16 18:05:14,163 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-16 18:05:14,188 [main] INFO  (Database#info():2846) - }
2020-04-16 18:05:14,189 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-16 18:05:14,191 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-16 18:05:14,222 [main] INFO  (Database#info():2846) - }
2020-04-16 18:05:14,229 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-16 18:05:14,282 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 18:05:14,283 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-16 18:05:14,284 [main] INFO  (Database#info():2846) -     parse('cart');
2020-04-16 18:05:14,693 [main] INFO  (Database#info():2846) -     parse('orders');
2020-04-16 18:05:14,796 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-16 18:05:14,908 [main] INFO  (Database#info():2846) -     parse('stock');
2020-04-16 18:05:15,011 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-16 18:05:15,126 [main] INFO  (Database#info():2846) - }
2020-04-16 18:05:15,127 [main] INFO  (Database#info():2846) -  
2020-04-16 18:05:15,283 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 18:05:15,285 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 18:05:15,297 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 18:05:15,313 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s074ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-16 18:05:17,101 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-16 18:05:17,101 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-16 18:05:17,101 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-16 18:05:17,101 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-16 18:05:17,101 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-16 18:05:17,132 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:05:17,132 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:05:17,148 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:05:17,148 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:05:17,266 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 18:05:17,277 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 18:05:17,548 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 18:05:17,549 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 18:05:17,736 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.Product_id != null*/
   MEMBER_ID = /*pmb.Product_id*/
  /*END*/
 order by p.product_id desc
2020-04-16 18:05:17,811 [main] WARN  (DfSqlFileRunnerExecute#showContinueWarnLog():110) - *Failure: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
/nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'MEMBER_ID = /*pmb.Product_id*/
  /*END*/
 order by p.product_id desc' at line 19
(SQLState=42000 ErrorCode=1064)
nnnnnnnnnnnnnnnnnnnn/
2020-04-16 18:05:17,827 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=0 failure=1

2020-04-16 18:05:17,829 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=0, failure=1 (in 1 files)
2020-04-16 18:05:17,835 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'OutsideSqlTest'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.7.29-0ubuntu0.18.04.1

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.DfOutsideSqlTestFailureFoundException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Found the failure SQL by the OutsideSqlTest.

[Advice]
You can see the exception info
after each SQL logging like this:

  ...Firing [SQL-file]
  SQL: [SQL-string]
  *Failure: [SQLException-class]
  /nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn...
  [SQLException-message]
  [SQLState-info]
  nnnnnnnnnn/

* * * * * * * * * */
	at org.dbflute.task.DfOutsideSqlTestTask.throwOutsideSqlTestFailureFoundException(DfOutsideSqlTestTask.java:335)
	at org.dbflute.task.DfOutsideSqlTestTask.handleSqlFileFailure(DfOutsideSqlTestTask.java:314)
	at org.dbflute.task.DfOutsideSqlTestTask.doExecute(DfOutsideSqlTestTask.java:103)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2020-04-16 18:05:17,922 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 18:05:18,017 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s938ms *Abort

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  x ProductBhv_selectProductRelation.sql
   -> You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'MEMBER_ID = /*pmb.Product_id*/...

   o: OK (0)
   x: Failure exists (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-16 18:06:54,539 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-16 18:06:54,539 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-16 18:06:54,539 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-16 18:06:54,555 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-16 18:06:54,555 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-16 18:06:54,586 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:06:54,586 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:06:54,586 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:06:54,586 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:06:54,664 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-16 18:06:54,664 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-16 18:06:54,664 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-16 18:06:54,664 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:06:54,773 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-16 18:06:54,789 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 18:06:55,555 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 18:06:55,555 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 18:06:55,570 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-16 18:06:55,570 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-16 18:06:55,570 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-16 18:06:55,570 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-16 18:06:55,586 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-16 18:06:55,586 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-16 18:06:55,602 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-16 18:06:55,617 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-16 18:06:55,617 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 18:06:55,617 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-16 18:06:55,617 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-16 18:06:55,664 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-04-16 18:06:55,680 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-16 18:06:55,680 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-04-16 18:06:55,695 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-16 18:06:55,711 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-16 18:06:55,711 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-16 18:06:55,711 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-04-16 18:06:55,711 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-16 18:06:55,711 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-16 18:06:55,711 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-16 18:06:55,727 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-16 18:06:55,727 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-16 18:06:55,727 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-16 18:06:55,742 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-16 18:06:55,742 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:06:55,805 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-04-16 18:06:55,805 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 18:06:55,914 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s391ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-16 18:06:57,493 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-16 18:06:57,509 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-16 18:06:57,509 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-16 18:06:57,509 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-16 18:06:57,509 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-16 18:06:57,540 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:06:57,540 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:06:57,540 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:06:57,540 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:06:57,555 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-16 18:06:57,555 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-16 18:06:57,555 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-16 18:06:57,555 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-16 18:06:57,555 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-16 18:06:57,555 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-16 18:06:57,618 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:06:57,680 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 18:06:57,696 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 18:06:57,696 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 18:06:57,696 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 18:06:57,696 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 18:06:57,696 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 18:06:57,696 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 18:06:57,696 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 18:06:57,696 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 18:06:57,727 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 18:06:57,805 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-16 18:06:58,009 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-16 18:06:58,025 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-16 18:06:58,056 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=4
2020-04-16 18:06:58,134 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-16 18:06:58,134 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-16 18:06:58,165 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-16 18:06:58,353 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 18:06:58,353 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 18:06:58,368 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 18:06:58,384 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s907ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-16 18:07:02,949 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-16 18:07:02,965 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-16 18:07:02,965 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-16 18:07:02,965 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-16 18:07:02,965 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-16 18:07:02,995 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:07:02,995 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:07:03,011 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:07:03,011 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:07:03,042 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-16 18:07:03,042 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-16 18:07:03,120 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:07:03,183 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-16 18:07:03,464 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-16 18:07:03,464 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 18:07:03,464 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 18:07:03,464 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 18:07:03,480 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 18:07:03,480 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 18:07:03,480 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 18:07:03,480 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 18:07:03,480 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 18:07:03,480 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 18:07:03,495 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 18:07:03,511 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-16 18:07:03,511 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-16 18:07:03,511 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-16 18:07:03,511 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-16 18:07:03,511 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-16 18:07:03,511 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-16 18:07:03,511 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-16 18:07:03,511 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-16 18:07:03,511 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-16 18:07:03,511 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-16 18:07:03,542 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-16 18:07:03,542 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-16 18:07:03,542 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-16 18:07:03,558 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-16 18:07:03,573 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-16 18:07:03,589 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-16 18:07:03,605 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-16 18:07:03,605 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-16 18:07:03,605 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-16 18:07:03,620 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-16 18:07:03,620 [main] INFO  (Database#info():2846) - }
2020-04-16 18:07:03,620 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-16 18:07:03,620 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-16 18:07:03,651 [main] INFO  (Database#info():2846) - }
2020-04-16 18:07:03,651 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-16 18:07:03,698 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 18:07:03,698 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-16 18:07:03,698 [main] INFO  (Database#info():2846) -     parse('cart');
2020-04-16 18:07:03,886 [main] INFO  (Database#info():2846) -     parse('orders');
2020-04-16 18:07:04,011 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-16 18:07:04,152 [main] INFO  (Database#info():2846) -     parse('stock');
2020-04-16 18:07:04,261 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-16 18:07:04,355 [main] INFO  (Database#info():2846) - }
2020-04-16 18:07:04,355 [main] INFO  (Database#info():2846) -  
2020-04-16 18:07:04,480 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 18:07:04,480 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 18:07:04,495 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 18:07:04,511 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s562ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-16 18:07:06,376 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-16 18:07:06,376 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-16 18:07:06,376 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-16 18:07:06,376 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-16 18:07:06,376 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-16 18:07:06,423 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:07:06,423 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:07:06,423 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:07:06,423 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:07:06,485 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 18:07:06,485 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 18:07:06,751 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 18:07:06,767 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 18:07:06,813 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.product_id != null*/
   p.product_id = /*pmb.product_id*/
  /*END*/
 order by p.product_id desc
2020-04-16 18:07:06,860 [main] WARN  (DfSqlFileRunnerExecute#showContinueWarnLog():110) - *Failure: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
/nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p.product_id = /*pmb.product_id*/
  /*END*/
 order by p.product_id desc' at line 19
(SQLState=42000 ErrorCode=1064)
nnnnnnnnnnnnnnnnnnnn/
2020-04-16 18:07:06,876 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=0 failure=1

2020-04-16 18:07:06,876 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=0, failure=1 (in 1 files)
2020-04-16 18:07:06,892 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'OutsideSqlTest'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.7.29-0ubuntu0.18.04.1

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.DfOutsideSqlTestFailureFoundException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Found the failure SQL by the OutsideSqlTest.

[Advice]
You can see the exception info
after each SQL logging like this:

  ...Firing [SQL-file]
  SQL: [SQL-string]
  *Failure: [SQLException-class]
  /nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn...
  [SQLException-message]
  [SQLState-info]
  nnnnnnnnnn/

* * * * * * * * * */
	at org.dbflute.task.DfOutsideSqlTestTask.throwOutsideSqlTestFailureFoundException(DfOutsideSqlTestTask.java:335)
	at org.dbflute.task.DfOutsideSqlTestTask.handleSqlFileFailure(DfOutsideSqlTestTask.java:314)
	at org.dbflute.task.DfOutsideSqlTestTask.doExecute(DfOutsideSqlTestTask.java:103)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2020-04-16 18:07:06,954 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 18:07:07,012 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s668ms *Abort

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  x ProductBhv_selectProductRelation.sql
   -> You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p.product_id = /*pmb.product_id*/...

   o: OK (0)
   x: Failure exists (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-16 18:33:37,927 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-16 18:33:37,927 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-16 18:33:37,927 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-16 18:33:37,927 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-16 18:33:37,927 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-16 18:33:37,974 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:33:37,974 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:33:37,974 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:33:37,974 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:33:38,068 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-16 18:33:38,068 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-16 18:33:38,068 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-16 18:33:38,083 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:33:38,177 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-16 18:33:38,193 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 18:33:38,912 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 18:33:38,912 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 18:33:38,912 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-16 18:33:38,912 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-16 18:33:38,912 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-16 18:33:38,912 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-16 18:33:38,943 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-16 18:33:38,943 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-16 18:33:38,959 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-16 18:33:38,974 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-16 18:33:38,974 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 18:33:38,974 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-16 18:33:38,974 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-16 18:33:39,021 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-04-16 18:33:39,037 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-16 18:33:39,052 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-04-16 18:33:39,052 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-16 18:33:39,068 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-16 18:33:39,068 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-16 18:33:39,068 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-04-16 18:33:39,068 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-16 18:33:39,083 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-16 18:33:39,083 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-16 18:33:39,083 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-16 18:33:39,083 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-16 18:33:39,083 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-16 18:33:39,115 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-16 18:33:39,115 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:33:39,177 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-04-16 18:33:39,193 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 18:33:39,271 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s375ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-16 18:33:40,943 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-16 18:33:40,943 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-16 18:33:40,943 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-16 18:33:40,943 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-16 18:33:40,943 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-16 18:33:40,990 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:33:40,990 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:33:40,990 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:33:40,990 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:33:40,990 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-16 18:33:40,990 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-16 18:33:40,990 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-16 18:33:40,990 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-16 18:33:40,990 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-16 18:33:40,990 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-16 18:33:41,053 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:33:41,131 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 18:33:41,131 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 18:33:41,131 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 18:33:41,131 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 18:33:41,131 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 18:33:41,146 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 18:33:41,146 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 18:33:41,146 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 18:33:41,146 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 18:33:41,162 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 18:33:41,256 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-16 18:33:41,459 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-16 18:33:41,475 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-16 18:33:41,506 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=4
2020-04-16 18:33:41,568 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-16 18:33:41,568 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-16 18:33:41,584 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-16 18:33:41,787 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-04-16 18:33:41,787 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-04-16 18:33:41,819 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 18:33:42,084 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 18:33:42,084 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 18:33:42,256 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-04-16 18:33:42,272 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-04-16 18:33:42,272 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-04-16 18:33:42,272 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-04-16 18:33:42,319 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 18:33:42,319 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 18:33:42,334 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 18:33:42,334 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 18:33:42,444 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s532ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-16 18:33:46,883 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-16 18:33:46,883 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-16 18:33:46,883 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-16 18:33:46,883 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-16 18:33:46,883 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-16 18:33:46,930 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:33:46,930 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:33:46,930 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:33:46,930 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:33:46,961 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-16 18:33:46,961 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-16 18:33:47,039 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:33:47,101 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-16 18:33:47,336 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-16 18:33:47,336 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 18:33:47,336 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 18:33:47,336 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 18:33:47,351 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 18:33:47,351 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 18:33:47,351 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 18:33:47,351 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 18:33:47,351 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 18:33:47,351 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 18:33:47,367 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 18:33:47,383 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-16 18:33:47,383 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-16 18:33:47,383 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-16 18:33:47,383 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-16 18:33:47,383 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-16 18:33:47,383 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-16 18:33:47,383 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-16 18:33:47,383 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-16 18:33:47,383 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-16 18:33:47,398 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-16 18:33:47,414 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-16 18:33:47,414 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-16 18:33:47,414 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-16 18:33:47,429 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-16 18:33:47,445 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-16 18:33:47,461 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-16 18:33:47,461 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-16 18:33:47,476 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-16 18:33:47,476 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-16 18:33:47,492 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-16 18:33:47,492 [main] INFO  (Database#info():2846) - }
2020-04-16 18:33:47,492 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-16 18:33:47,492 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-16 18:33:47,508 [main] INFO  (Database#info():2846) - }
2020-04-16 18:33:47,523 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-16 18:33:47,554 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 18:33:47,554 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-16 18:33:47,554 [main] INFO  (Database#info():2846) -     parse('cart');
2020-04-16 18:33:47,757 [main] INFO  (Database#info():2846) -     parse('orders');
2020-04-16 18:33:47,852 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-16 18:33:47,977 [main] INFO  (Database#info():2846) -     parse('stock');
2020-04-16 18:33:48,070 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-16 18:33:48,164 [main] INFO  (Database#info():2846) - }
2020-04-16 18:33:48,164 [main] INFO  (Database#info():2846) -  
2020-04-16 18:33:48,273 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 18:33:48,273 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 18:33:48,289 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 18:33:48,289 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s438ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-16 18:33:50,104 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-16 18:33:50,108 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-16 18:33:50,109 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-16 18:33:50,110 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-16 18:33:50,111 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-16 18:33:50,145 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:33:50,146 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:33:50,147 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:33:50,148 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:33:50,199 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 18:33:50,214 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 18:33:50,761 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 18:33:50,761 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 18:33:50,792 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
 order by p.product_id desc
2020-04-16 18:33:50,822 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-16 18:33:50,822 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 18:33:50,822 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 18:33:50,900 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s821ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o ProductBhv_selectProductRelation.sql

   o: OK (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-16 18:33:52,392 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-16 18:33:52,396 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-16 18:33:52,397 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-16 18:33:52,398 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-16 18:33:52,400 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-16 18:33:52,431 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:33:52,433 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:33:52,433 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:33:52,434 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:33:52,460 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-16 18:33:52,461 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-16 18:33:52,471 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:33:52,744 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 18:33:52,754 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 18:33:53,014 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 18:33:53,015 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 18:33:53,022 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
 order by p.product_id desc
2020-04-16 18:33:53,653 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-04-16 18:33:53,653 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 18:33:53,653 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-04-16 18:33:53,653 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-04-16 18:33:53,684 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-04-16 18:33:53,684 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-04-16 18:33:53,684 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-04-16 18:33:53,700 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-04-16 18:33:54,776 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-04-16 18:33:54,776 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 18:33:54,776 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-04-16 18:33:54,776 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-04-16 18:33:54,839 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-16 18:33:54,839 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-16 18:33:54,855 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-16 18:33:54,855 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-16 18:33:54,855 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-16 18:33:54,870 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-04-16 18:33:54,886 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-16 18:33:54,886 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-16 18:33:54,886 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-16 18:33:54,886 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
ProductRelationPmb (typed to list, entity)
2020-04-16 18:33:54,902 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-16 18:33:55,351 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 18:33:55,455 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 18:33:55,465 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-16 18:33:55,469 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-16 18:33:55,488 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 18:33:55,489 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-16 18:33:55,584 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-04-16 18:33:55,587 [main] INFO  (Database#info():2846) - }
2020-04-16 18:33:55,589 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-04-16 18:33:55,756 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-04-16 18:33:55,913 [main] INFO  (Database#info():2846) - }
2020-04-16 18:33:56,098 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 1

  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-04-16 18:33:56,114 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 18:33:56,116 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 18:33:56,120 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 18:33:56,121 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 18:33:56,232 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s850ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-16 18:55:03,762 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-16 18:55:03,762 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-16 18:55:03,762 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-16 18:55:03,778 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-16 18:55:03,778 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-16 18:55:03,809 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:55:03,809 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:55:03,809 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:55:03,809 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:55:03,887 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-16 18:55:03,887 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-16 18:55:03,887 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-16 18:55:03,903 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:55:03,996 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-16 18:55:04,028 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 18:55:04,747 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 18:55:04,762 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 18:55:04,762 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-16 18:55:04,762 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-16 18:55:04,762 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-16 18:55:04,762 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-16 18:55:04,778 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-16 18:55:04,794 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-16 18:55:04,809 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-16 18:55:04,825 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-16 18:55:04,825 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 18:55:04,825 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-16 18:55:04,825 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-16 18:55:04,872 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-04-16 18:55:04,887 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-16 18:55:04,887 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-04-16 18:55:04,919 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-16 18:55:04,919 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-16 18:55:04,919 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-16 18:55:04,934 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-04-16 18:55:04,934 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-16 18:55:04,934 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-16 18:55:04,934 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-16 18:55:04,950 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-16 18:55:04,950 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-16 18:55:04,950 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-16 18:55:04,965 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-16 18:55:04,981 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:55:05,054 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-04-16 18:55:05,054 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 18:55:05,164 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s417ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-16 18:55:06,794 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-16 18:55:06,794 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-16 18:55:06,794 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-16 18:55:06,794 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-16 18:55:06,794 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-16 18:55:06,841 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:55:06,841 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:55:06,841 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:55:06,841 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:55:06,841 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-16 18:55:06,841 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-16 18:55:06,841 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-16 18:55:06,841 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-16 18:55:06,841 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-16 18:55:06,841 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-16 18:55:06,904 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:55:06,982 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 18:55:06,982 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 18:55:06,997 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 18:55:06,997 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 18:55:06,997 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 18:55:06,997 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 18:55:06,997 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 18:55:06,997 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 18:55:06,997 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 18:55:07,013 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 18:55:07,107 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-16 18:55:07,310 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-16 18:55:07,325 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-16 18:55:07,372 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=4
2020-04-16 18:55:07,419 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-16 18:55:07,419 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-16 18:55:07,466 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-16 18:55:07,592 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-04-16 18:55:07,592 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-04-16 18:55:07,607 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 18:55:07,873 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 18:55:07,873 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 18:55:07,904 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-04-16 18:55:07,920 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-04-16 18:55:07,920 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-04-16 18:55:07,920 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-04-16 18:55:08,248 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 18:55:08,248 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 18:55:08,279 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 18:55:08,279 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 18:55:08,373 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s610ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-16 18:55:12,952 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-16 18:55:12,968 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-16 18:55:12,968 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-16 18:55:12,968 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-16 18:55:12,968 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-16 18:55:12,999 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:55:12,999 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:55:12,999 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:55:12,999 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:55:13,031 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-16 18:55:13,046 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-16 18:55:13,109 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:55:13,171 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-16 18:55:13,405 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-16 18:55:13,405 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 18:55:13,405 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 18:55:13,421 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 18:55:13,421 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 18:55:13,421 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 18:55:13,421 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 18:55:13,421 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 18:55:13,421 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 18:55:13,421 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 18:55:13,452 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 18:55:13,452 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-16 18:55:13,452 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-16 18:55:13,452 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-16 18:55:13,452 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-16 18:55:13,452 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-16 18:55:13,452 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-16 18:55:13,452 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-16 18:55:13,452 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-16 18:55:13,468 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-16 18:55:13,468 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-16 18:55:13,484 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-16 18:55:13,484 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-16 18:55:13,499 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-16 18:55:13,515 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-16 18:55:13,515 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-16 18:55:13,546 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-16 18:55:13,546 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-16 18:55:13,546 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-16 18:55:13,562 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-16 18:55:13,562 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-16 18:55:13,562 [main] INFO  (Database#info():2846) - }
2020-04-16 18:55:13,562 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-16 18:55:13,578 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-16 18:55:13,593 [main] INFO  (Database#info():2846) - }
2020-04-16 18:55:13,593 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-16 18:55:13,640 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 18:55:13,640 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-16 18:55:13,640 [main] INFO  (Database#info():2846) -     parse('cart');
2020-04-16 18:55:13,843 [main] INFO  (Database#info():2846) -     parse('orders');
2020-04-16 18:55:13,953 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-16 18:55:14,062 [main] INFO  (Database#info():2846) -     parse('stock');
2020-04-16 18:55:14,171 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-16 18:55:14,250 [main] INFO  (Database#info():2846) - }
2020-04-16 18:55:14,265 [main] INFO  (Database#info():2846) -  
2020-04-16 18:55:14,537 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 18:55:14,539 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 18:55:14,548 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 18:55:14,560 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s612ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-16 18:55:16,389 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-16 18:55:16,393 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-16 18:55:16,393 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-16 18:55:16,394 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-16 18:55:16,395 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-16 18:55:16,430 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:55:16,431 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:55:16,431 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:55:16,432 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:55:16,497 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 18:55:16,508 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 18:55:16,778 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 18:55:16,779 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 18:55:16,828 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  where
  /*IF pmb.ProductId != null*/
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-04-16 18:55:16,866 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-16 18:55:16,868 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 18:55:16,869 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 18:55:16,978 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s609ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o ProductBhv_selectProductRelation.sql

   o: OK (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-16 18:55:18,439 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-16 18:55:18,454 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-16 18:55:18,454 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-16 18:55:18,454 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-16 18:55:18,454 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-16 18:55:18,485 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 18:55:18,485 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 18:55:18,485 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 18:55:18,485 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 18:55:18,517 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-16 18:55:18,517 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-16 18:55:18,532 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 18:55:18,627 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 18:55:18,627 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 18:55:18,892 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 18:55:18,892 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 18:55:18,892 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  where
  /*IF pmb.ProductId != null*/
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-04-16 18:55:18,986 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-04-16 18:55:18,986 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 18:55:19,002 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-04-16 18:55:19,002 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-04-16 18:55:19,017 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-04-16 18:55:19,033 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-04-16 18:55:19,033 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-04-16 18:55:19,033 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-04-16 18:55:19,080 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-04-16 18:55:19,080 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 18:55:19,080 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-04-16 18:55:19,080 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-04-16 18:55:19,142 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-16 18:55:19,142 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-16 18:55:19,142 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-16 18:55:19,142 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-16 18:55:19,142 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-16 18:55:19,168 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-04-16 18:55:19,178 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-16 18:55:19,179 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-16 18:55:19,180 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-16 18:55:19,187 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
ProductRelationPmb (typed to list, entity)
  Integer ProductId
2020-04-16 18:55:19,201 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-16 18:55:19,436 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 18:55:19,437 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 18:55:19,443 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-16 18:55:19,446 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-16 18:55:19,464 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 18:55:19,466 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-16 18:55:19,562 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-04-16 18:55:19,565 [main] INFO  (Database#info():2846) - }
2020-04-16 18:55:19,566 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-04-16 18:55:19,573 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-04-16 18:55:19,598 [main] INFO  (Database#info():2846) - }
2020-04-16 18:55:19,657 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 1

  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-04-16 18:55:19,674 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 18:55:19,675 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 18:55:19,685 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 18:55:19,686 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 18:55:19,810 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s380ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-16 19:01:56,461 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-16 19:01:56,476 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-16 19:01:56,476 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-16 19:01:56,476 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-16 19:01:56,476 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-16 19:01:56,523 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 19:01:56,523 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 19:01:56,523 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 19:01:56,523 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 19:01:56,601 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-16 19:01:56,601 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-16 19:01:56,601 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-16 19:01:56,617 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 19:01:56,711 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-16 19:01:56,726 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 19:01:57,445 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 19:01:57,445 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 19:01:57,461 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-16 19:01:57,461 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-16 19:01:57,461 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-16 19:01:57,461 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-16 19:01:57,477 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-16 19:01:57,492 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-16 19:01:57,492 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-16 19:01:57,508 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-16 19:01:57,508 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 19:01:57,508 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-16 19:01:57,524 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-16 19:01:57,555 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-04-16 19:01:57,570 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-16 19:01:57,586 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-04-16 19:01:57,602 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-16 19:01:57,617 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-16 19:01:57,617 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-16 19:01:57,617 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-04-16 19:01:57,617 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-16 19:01:57,617 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-16 19:01:57,617 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-16 19:01:57,633 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-16 19:01:57,633 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-16 19:01:57,633 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-16 19:01:57,649 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-16 19:01:57,711 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 19:01:57,774 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-04-16 19:01:57,774 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 19:01:57,883 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s423ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-16 19:01:59,555 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-16 19:01:59,571 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-16 19:01:59,571 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-16 19:01:59,571 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-16 19:01:59,571 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-16 19:01:59,618 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 19:01:59,618 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 19:01:59,618 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 19:01:59,618 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 19:01:59,618 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-16 19:01:59,618 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-16 19:01:59,618 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-16 19:01:59,618 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-16 19:01:59,618 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-16 19:01:59,618 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-16 19:01:59,680 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 19:01:59,759 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 19:01:59,759 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 19:01:59,759 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 19:01:59,759 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 19:01:59,759 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 19:01:59,759 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 19:01:59,774 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 19:01:59,774 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 19:01:59,774 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 19:01:59,790 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 19:01:59,884 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-16 19:02:00,103 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-16 19:02:00,118 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-16 19:02:00,150 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=4
2020-04-16 19:02:00,212 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-16 19:02:00,212 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-16 19:02:00,243 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-16 19:02:00,368 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-04-16 19:02:00,368 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-04-16 19:02:00,384 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 19:02:00,665 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 19:02:00,665 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 19:02:00,696 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-04-16 19:02:00,712 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-04-16 19:02:00,712 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-04-16 19:02:00,712 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-04-16 19:02:00,759 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 19:02:00,759 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 19:02:00,791 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 19:02:00,791 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 19:02:00,884 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s344ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-16 19:02:05,292 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-16 19:02:05,292 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-16 19:02:05,292 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-16 19:02:05,292 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-16 19:02:05,292 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-16 19:02:05,323 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 19:02:05,323 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 19:02:05,323 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 19:02:05,323 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 19:02:05,370 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-16 19:02:05,370 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-16 19:02:05,448 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 19:02:05,495 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-16 19:02:05,745 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-16 19:02:05,745 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 19:02:05,745 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 19:02:05,745 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 19:02:05,745 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 19:02:05,745 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 19:02:05,760 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 19:02:05,760 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 19:02:05,760 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 19:02:05,760 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 19:02:05,776 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 19:02:05,776 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-16 19:02:05,776 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-16 19:02:05,792 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-16 19:02:05,792 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-16 19:02:05,792 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-16 19:02:05,792 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-16 19:02:05,792 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-16 19:02:05,792 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-16 19:02:05,792 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-16 19:02:05,792 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-16 19:02:05,808 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-16 19:02:05,823 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-16 19:02:05,823 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-16 19:02:05,839 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-16 19:02:05,855 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-16 19:02:05,870 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-16 19:02:05,886 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-16 19:02:05,886 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-16 19:02:05,886 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-16 19:02:05,901 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-16 19:02:05,901 [main] INFO  (Database#info():2846) - }
2020-04-16 19:02:05,901 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-16 19:02:05,901 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-16 19:02:05,933 [main] INFO  (Database#info():2846) - }
2020-04-16 19:02:05,933 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-16 19:02:05,964 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 19:02:05,964 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-16 19:02:05,980 [main] INFO  (Database#info():2846) -     parse('cart');
2020-04-16 19:02:06,136 [main] INFO  (Database#info():2846) -     parse('orders');
2020-04-16 19:02:06,245 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-16 19:02:06,370 [main] INFO  (Database#info():2846) -     parse('stock');
2020-04-16 19:02:06,464 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-16 19:02:06,558 [main] INFO  (Database#info():2846) - }
2020-04-16 19:02:06,558 [main] INFO  (Database#info():2846) -  
2020-04-16 19:02:06,714 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 19:02:06,729 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 19:02:06,729 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 19:02:06,748 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s468ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-16 19:02:08,546 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-16 19:02:08,546 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-16 19:02:08,546 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-16 19:02:08,546 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-16 19:02:08,546 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-16 19:02:08,577 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 19:02:08,577 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 19:02:08,577 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 19:02:08,577 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 19:02:08,640 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 19:02:08,656 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 19:02:08,919 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 19:02:08,919 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 19:02:08,966 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-04-16 19:02:08,997 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-16 19:02:09,013 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 19:02:09,013 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 19:02:09,091 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s560ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o ProductBhv_selectProductRelation.sql

   o: OK (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-16 19:02:10,529 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-16 19:02:10,544 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-16 19:02:10,544 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-16 19:02:10,544 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-16 19:02:10,544 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-16 19:02:10,575 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 19:02:10,575 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 19:02:10,575 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 19:02:10,575 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 19:02:10,607 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-16 19:02:10,607 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-16 19:02:10,622 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 19:02:10,700 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 19:02:10,716 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 19:02:10,966 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 19:02:10,966 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 19:02:10,966 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-04-16 19:02:11,060 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-04-16 19:02:11,060 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 19:02:11,076 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-04-16 19:02:11,076 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-04-16 19:02:11,091 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-04-16 19:02:11,107 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-04-16 19:02:11,107 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-04-16 19:02:11,107 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-04-16 19:02:11,138 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-04-16 19:02:11,138 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 19:02:11,154 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-04-16 19:02:11,154 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-04-16 19:02:11,216 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-16 19:02:11,216 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-16 19:02:11,216 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-16 19:02:11,216 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-16 19:02:11,216 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-16 19:02:11,232 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-04-16 19:02:11,248 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-16 19:02:11,248 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-16 19:02:11,248 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-16 19:02:11,248 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
ProductRelationPmb (typed to list, entity)
  Integer ProductId
2020-04-16 19:02:11,263 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-16 19:02:11,482 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 19:02:11,482 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 19:02:11,498 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-16 19:02:11,498 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-16 19:02:11,513 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 19:02:11,513 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-16 19:02:11,607 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-04-16 19:02:11,607 [main] INFO  (Database#info():2846) - }
2020-04-16 19:02:11,607 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-04-16 19:02:11,623 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-04-16 19:02:11,638 [main] INFO  (Database#info():2846) - }
2020-04-16 19:02:11,685 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 1

  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-04-16 19:02:11,701 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 19:02:11,701 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 19:02:11,716 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 19:02:11,716 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 19:02:11,795 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s282ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-16 19:18:53,378 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-16 19:18:53,378 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-16 19:18:53,378 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-16 19:18:53,378 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-16 19:18:53,378 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-16 19:18:53,425 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 19:18:53,425 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 19:18:53,425 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 19:18:53,425 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 19:18:53,503 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-16 19:18:53,503 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-16 19:18:53,503 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-16 19:18:53,519 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 19:18:53,612 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-16 19:18:53,628 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 19:18:54,371 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 19:18:54,373 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 19:18:54,376 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-16 19:18:54,379 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-16 19:18:54,380 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-16 19:18:54,381 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-16 19:18:54,399 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-16 19:18:54,408 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-16 19:18:54,420 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-16 19:18:54,438 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-16 19:18:54,439 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 19:18:54,444 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-16 19:18:54,445 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-16 19:18:54,492 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-04-16 19:18:54,504 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-16 19:18:54,517 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-04-16 19:18:54,529 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-16 19:18:54,541 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-16 19:18:54,542 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-16 19:18:54,543 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-04-16 19:18:54,546 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-16 19:18:54,547 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-16 19:18:54,550 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-16 19:18:54,559 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-16 19:18:54,560 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-16 19:18:54,561 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-16 19:18:54,581 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-16 19:18:54,592 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 19:18:54,661 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1555) -  -> different from previous (schema diff)
2020-04-16 19:18:54,663 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1557) - ...Serializing schema-diff:
2020-04-16 19:18:54,664 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1558) -   filePath = ./schema/project-history-dfclient.diffmap
2020-04-16 19:18:54,675 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 19:18:54,788 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s432ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-16 19:18:56,364 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-16 19:18:56,380 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-16 19:18:56,380 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-16 19:18:56,380 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-16 19:18:56,380 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-16 19:18:56,411 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 19:18:56,411 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 19:18:56,427 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 19:18:56,427 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 19:18:56,427 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-16 19:18:56,427 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-16 19:18:56,427 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-16 19:18:56,427 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-16 19:18:56,427 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-16 19:18:56,427 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-16 19:18:56,489 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 19:18:56,567 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 19:18:56,567 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 19:18:56,567 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 19:18:56,567 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 19:18:56,567 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 19:18:56,567 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 19:18:56,583 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 19:18:56,583 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 19:18:56,583 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 19:18:56,599 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 19:18:56,693 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-16 19:18:56,896 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-16 19:18:56,912 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-16 19:18:56,958 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=5
2020-04-16 19:18:57,021 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-16 19:18:57,021 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-16 19:18:57,052 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-16 19:18:57,179 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-04-16 19:18:57,179 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-04-16 19:18:57,194 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 19:18:57,460 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 19:18:57,460 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 19:18:57,491 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-04-16 19:18:57,491 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-04-16 19:18:57,491 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-04-16 19:18:57,507 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-04-16 19:18:57,553 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 19:18:57,569 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 19:18:57,585 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 19:18:57,585 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 19:18:57,678 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s329ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-16 19:19:02,085 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-16 19:19:02,085 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-16 19:19:02,085 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-16 19:19:02,085 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-16 19:19:02,101 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-16 19:19:02,132 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 19:19:02,132 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 19:19:02,132 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 19:19:02,132 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 19:19:02,163 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-16 19:19:02,163 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-16 19:19:02,241 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 19:19:02,288 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-16 19:19:02,523 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-16 19:19:02,538 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-16 19:19:02,538 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-16 19:19:02,538 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-16 19:19:02,538 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-16 19:19:02,538 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-16 19:19:02,538 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-16 19:19:02,538 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-16 19:19:02,538 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-16 19:19:02,554 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-16 19:19:02,569 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 19:19:02,569 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-16 19:19:02,569 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-16 19:19:02,569 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-16 19:19:02,569 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-16 19:19:02,569 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-16 19:19:02,569 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-16 19:19:02,569 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-16 19:19:02,585 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-16 19:19:02,585 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-16 19:19:02,585 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-16 19:19:02,601 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-16 19:19:02,601 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-16 19:19:02,616 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-16 19:19:02,632 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-16 19:19:02,632 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-16 19:19:02,664 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-16 19:19:02,664 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-16 19:19:02,664 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-16 19:19:02,664 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-16 19:19:02,679 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-16 19:19:02,679 [main] INFO  (Database#info():2846) - }
2020-04-16 19:19:02,679 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-16 19:19:02,679 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-16 19:19:02,711 [main] INFO  (Database#info():2846) - }
2020-04-16 19:19:02,711 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-16 19:19:02,742 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 19:19:02,742 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-16 19:19:02,742 [main] INFO  (Database#info():2846) -     parse('cart');
2020-04-16 19:19:02,960 [main] INFO  (Database#info():2846) -     parse('orders');
2020-04-16 19:19:03,054 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-16 19:19:03,179 [main] INFO  (Database#info():2846) -     parse('stock');
2020-04-16 19:19:03,289 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-16 19:19:03,460 [main] INFO  (Database#info():2846) - }
2020-04-16 19:19:03,460 [main] INFO  (Database#info():2846) -  
2020-04-16 19:19:03,554 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 19:19:03,554 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 19:19:03,570 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 19:19:03,570 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s516ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-16 19:19:07,010 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-16 19:19:07,010 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-16 19:19:07,010 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-16 19:19:07,010 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-16 19:19:07,010 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-16 19:19:07,057 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 19:19:07,057 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 19:19:07,057 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 19:19:07,057 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 19:19:07,135 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 19:19:07,150 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 19:19:07,431 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 19:19:07,431 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 19:19:07,478 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-04-16 19:19:07,510 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-16 19:19:07,525 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 19:19:07,525 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 19:19:07,619 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s625ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o ProductBhv_selectProductRelation.sql

   o: OK (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-16 19:19:09,151 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-16 19:19:09,151 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-16 19:19:09,151 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-16 19:19:09,151 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-16 19:19:09,151 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-16 19:19:09,182 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-16 19:19:09,182 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-16 19:19:09,182 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-16 19:19:09,182 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-16 19:19:09,213 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-16 19:19:09,213 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-16 19:19:09,229 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-16 19:19:09,307 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-16 19:19:09,323 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-16 19:19:09,573 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-16 19:19:09,573 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-16 19:19:09,573 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-04-16 19:19:09,666 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-04-16 19:19:09,666 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-04-16 19:19:09,682 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-04-16 19:19:09,682 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-04-16 19:19:09,698 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-04-16 19:19:09,714 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-04-16 19:19:09,714 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-04-16 19:19:09,714 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-04-16 19:19:09,745 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-04-16 19:19:09,761 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-16 19:19:09,761 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-04-16 19:19:09,761 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-04-16 19:19:09,823 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-16 19:19:09,823 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-16 19:19:09,823 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-16 19:19:09,823 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-16 19:19:09,823 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-16 19:19:09,839 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-04-16 19:19:09,854 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-16 19:19:09,854 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-16 19:19:09,854 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-16 19:19:09,854 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
ProductRelationPmb (typed to list, entity)
  Integer ProductId
2020-04-16 19:19:09,870 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-16 19:19:10,089 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 19:19:10,104 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-16 19:19:10,104 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-16 19:19:10,104 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-16 19:19:10,120 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-16 19:19:10,136 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-16 19:19:10,214 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-04-16 19:19:10,229 [main] INFO  (Database#info():2846) - }
2020-04-16 19:19:10,229 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-04-16 19:19:10,229 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-04-16 19:19:10,245 [main] INFO  (Database#info():2846) - }
2020-04-16 19:19:10,307 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 1

  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-04-16 19:19:10,323 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-16 19:19:10,323 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-16 19:19:10,341 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-16 19:19:10,342 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-16 19:19:10,419 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s299ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-28 22:49:00,900 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-28 22:49:00,906 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-28 22:49:00,920 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-28 22:49:00,921 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-28 22:49:00,922 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-28 22:49:01,079 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 22:49:01,087 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 22:49:01,088 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 22:49:01,090 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 22:49:01,201 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-04-28 22:49:01,255 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-28 22:49:02,325 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-28 22:49:02,327 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-28 22:49:02,475 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select c.cart_num, p.name, p.price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
 order by c.created asc
2020-04-28 22:49:02,539 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-28 22:49:02,542 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-28 22:49:02,570 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-04-28 22:49:02,613 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-28 22:49:02,623 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-04-28 22:49:02,624 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-28 22:49:02,815 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s993ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql

   o: OK (2)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-28 22:49:19,517 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-28 22:49:19,524 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-28 22:49:19,525 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-28 22:49:19,527 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-28 22:49:19,528 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-28 22:49:19,564 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 22:49:19,565 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 22:49:19,566 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 22:49:19,567 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 22:49:19,717 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-28 22:49:19,725 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-28 22:49:19,726 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-28 22:49:19,765 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-28 22:49:19,903 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-28 22:49:19,934 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-28 22:49:20,684 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-28 22:49:20,687 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-28 22:49:20,691 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-28 22:49:20,694 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-28 22:49:20,695 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-28 22:49:20,696 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-28 22:49:20,778 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-28 22:49:20,798 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-28 22:49:20,812 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-28 22:49:20,852 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-28 22:49:20,853 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-28 22:49:20,854 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-28 22:49:20,855 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-28 22:49:20,902 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-04-28 22:49:20,918 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-28 22:49:20,931 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-04-28 22:49:20,942 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-28 22:49:20,955 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-28 22:49:20,955 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-28 22:49:20,958 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-04-28 22:49:20,958 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-28 22:49:20,961 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-28 22:49:20,964 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-28 22:49:20,967 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-28 22:49:20,977 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-28 22:49:20,978 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-28 22:49:20,998 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-28 22:49:21,005 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-28 22:49:21,072 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-04-28 22:49:21,082 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-28 22:49:21,179 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s680ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-28 22:49:22,855 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-28 22:49:22,857 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-28 22:49:22,860 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-28 22:49:22,861 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-28 22:49:22,862 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-28 22:49:22,897 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 22:49:22,897 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 22:49:22,898 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 22:49:22,899 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 22:49:22,901 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-28 22:49:22,904 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-28 22:49:22,905 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-28 22:49:22,905 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-28 22:49:22,906 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-28 22:49:22,907 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-28 22:49:22,978 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-28 22:49:23,051 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-28 22:49:23,057 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-28 22:49:23,060 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-28 22:49:23,062 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-28 22:49:23,063 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-28 22:49:23,065 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-28 22:49:23,068 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-28 22:49:23,070 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-28 22:49:23,094 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-28 22:49:23,146 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-28 22:49:23,342 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-28 22:49:23,693 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-28 22:49:23,728 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-28 22:49:23,814 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=5
2020-04-28 22:49:24,091 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-28 22:49:24,091 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-28 22:49:24,119 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-28 22:49:24,425 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-04-28 22:49:24,426 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-04-28 22:49:24,450 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-28 22:49:24,731 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-28 22:49:24,732 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-28 22:49:24,865 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-04-28 22:49:24,893 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-04-28 22:49:24,905 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-04-28 22:49:24,909 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-04-28 22:49:25,205 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-28 22:49:25,212 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-28 22:49:25,392 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-28 22:49:25,394 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-28 22:49:25,491 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s670ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-28 22:49:30,024 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-28 22:49:30,029 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-28 22:49:30,031 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-28 22:49:30,032 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-28 22:49:30,034 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-28 22:49:30,060 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 22:49:30,070 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 22:49:30,071 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 22:49:30,072 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 22:49:30,099 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-28 22:49:30,105 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-28 22:49:30,179 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-28 22:49:30,229 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-28 22:49:30,545 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-28 22:49:30,563 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-28 22:49:30,568 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-28 22:49:30,570 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-28 22:49:30,573 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-28 22:49:30,574 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-28 22:49:30,577 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-28 22:49:30,579 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-28 22:49:30,580 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-28 22:49:30,583 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-28 22:49:30,591 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-28 22:49:30,624 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-28 22:49:30,631 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-28 22:49:30,633 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-28 22:49:30,634 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-28 22:49:30,635 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-28 22:49:30,636 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-28 22:49:30,637 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-28 22:49:30,638 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-28 22:49:30,639 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-28 22:49:30,642 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-28 22:49:30,690 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-28 22:49:30,695 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-28 22:49:30,727 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-28 22:49:30,794 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-28 22:49:30,826 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-28 22:49:30,861 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-28 22:49:30,892 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-28 22:49:30,908 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-28 22:49:30,941 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-28 22:49:30,957 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-28 22:49:30,991 [main] INFO  (Database#info():2846) - }
2020-04-28 22:49:30,992 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-28 22:49:30,994 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-28 22:49:31,026 [main] INFO  (Database#info():2846) - }
2020-04-28 22:49:31,040 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-28 22:49:31,075 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-28 22:49:31,077 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-28 22:49:31,078 [main] INFO  (Database#info():2846) -     parse('cart');
2020-04-28 22:49:31,535 [main] INFO  (Database#info():2846) -     parse('orders');
2020-04-28 22:49:31,653 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-28 22:49:31,790 [main] INFO  (Database#info():2846) -     parse('stock');
2020-04-28 22:49:31,900 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-28 22:49:32,002 [main] INFO  (Database#info():2846) - }
2020-04-28 22:49:32,003 [main] INFO  (Database#info():2846) -  
2020-04-28 22:49:32,184 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-28 22:49:32,188 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-28 22:49:32,201 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-28 22:49:32,213 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s216ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-28 22:49:34,255 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-28 22:49:34,259 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-28 22:49:34,261 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-28 22:49:34,262 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-28 22:49:34,263 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-28 22:49:34,293 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 22:49:34,298 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 22:49:34,299 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 22:49:34,299 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 22:49:34,357 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-04-28 22:49:34,373 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-28 22:49:34,666 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-28 22:49:34,667 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-28 22:49:34,704 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select c.cart_num, p.name, p.price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
 order by c.created asc
2020-04-28 22:49:34,742 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-28 22:49:34,744 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-28 22:49:34,775 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-04-28 22:49:34,808 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-28 22:49:34,809 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-04-28 22:49:34,812 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-28 22:49:34,941 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s717ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql

   o: OK (2)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-28 22:49:36,456 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-28 22:49:36,459 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-28 22:49:36,463 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-28 22:49:36,464 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-28 22:49:36,464 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-28 22:49:36,491 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 22:49:36,505 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 22:49:36,506 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 22:49:36,510 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 22:49:36,522 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-28 22:49:36,537 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-28 22:49:36,543 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-28 22:49:36,717 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-04-28 22:49:36,739 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-28 22:49:37,008 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-28 22:49:37,010 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-28 22:49:37,015 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select c.cart_num, p.name, p.price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
 order by c.created asc
2020-04-28 22:49:37,197 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-04-28 22:49:37,198 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-28 22:49:37,200 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-04-28 22:49:37,245 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-04-28 22:49:37,246 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-04-28 22:49:37,255 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-04-28 22:49:37,256 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-04-28 22:49:37,274 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-04-28 22:49:37,292 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-04-28 22:49:37,293 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-04-28 22:49:37,293 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-04-28 22:49:37,354 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-04-28 22:49:37,355 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-28 22:49:37,356 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-04-28 22:49:37,357 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-04-28 22:49:37,420 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-28 22:49:37,431 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-28 22:49:37,433 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-28 22:49:37,433 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-28 22:49:37,434 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-28 22:49:37,452 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
CartInProductDitails
  cart_num INT(11) related to cart.cart_num
  name VARCHAR(50) related to product.name
  price DOUBLE(23) related to product.price

ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-04-28 22:49:37,470 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-28 22:49:37,474 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-28 22:49:37,475 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-28 22:49:37,477 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
CartInProductDitailsPmb (typed to list, entity)
  Integer UserId

ProductRelationPmb (typed to list, entity)
  Integer ProductId
2020-04-28 22:49:37,490 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-28 22:49:37,808 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-28 22:49:37,821 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-28 22:49:37,827 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-28 22:49:37,830 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-28 22:49:37,846 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-28 22:49:37,849 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-28 22:49:37,930 [main] INFO  (Database#info():2846) -     parse('CartInProductDitails')
2020-04-28 22:49:37,994 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-04-28 22:49:37,995 [main] INFO  (Database#info():2846) - }
2020-04-28 22:49:37,997 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-04-28 22:49:38,022 [main] INFO  (Database#info():2846) -     parse('CartInProductDitailsPmb');
2020-04-28 22:49:38,098 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-04-28 22:49:38,111 [main] INFO  (Database#info():2846) - }
2020-04-28 22:49:38,213 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 2

  CartBhv_selectCartInProductDitails.sql
  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-04-28 22:49:38,232 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-28 22:49:38,235 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-28 22:49:38,242 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-28 22:49:38,243 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-28 22:49:38,330 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s891ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-28 22:55:11,482 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-28 22:55:11,490 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-28 22:55:11,491 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-28 22:55:11,492 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-28 22:55:11,494 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-28 22:55:11,538 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 22:55:11,539 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 22:55:11,540 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 22:55:11,541 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 22:55:11,604 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-28 22:55:11,615 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-28 22:55:11,616 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-28 22:55:11,629 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-28 22:55:11,720 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-28 22:55:11,750 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-28 22:55:12,554 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-28 22:55:12,557 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-28 22:55:12,560 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-28 22:55:12,563 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-28 22:55:12,564 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-28 22:55:12,565 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-28 22:55:12,572 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-28 22:55:12,591 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-28 22:55:12,603 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-28 22:55:12,610 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-28 22:55:12,618 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-28 22:55:12,621 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-28 22:55:12,624 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-28 22:55:12,671 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-04-28 22:55:12,682 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-28 22:55:12,696 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-04-28 22:55:12,709 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-28 22:55:12,721 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-28 22:55:12,722 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-28 22:55:12,723 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-04-28 22:55:12,724 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-28 22:55:12,725 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-28 22:55:12,727 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-28 22:55:12,736 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-28 22:55:12,737 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-28 22:55:12,738 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-28 22:55:12,759 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-28 22:55:12,772 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-28 22:55:12,847 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-04-28 22:55:12,861 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-28 22:55:12,954 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s502ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-28 22:55:14,637 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-28 22:55:14,651 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-28 22:55:14,653 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-28 22:55:14,653 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-28 22:55:14,658 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-28 22:55:14,703 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 22:55:14,706 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 22:55:14,707 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 22:55:14,708 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 22:55:14,710 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-28 22:55:14,712 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-28 22:55:14,713 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-28 22:55:14,714 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-28 22:55:14,714 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-28 22:55:14,715 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-28 22:55:14,763 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-28 22:55:14,835 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-28 22:55:14,850 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-28 22:55:14,854 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-28 22:55:14,856 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-28 22:55:14,856 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-28 22:55:14,859 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-28 22:55:14,861 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-28 22:55:14,862 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-28 22:55:14,865 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-28 22:55:14,885 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-28 22:55:14,968 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-28 22:55:15,181 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-28 22:55:15,199 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-28 22:55:15,252 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=5
2020-04-28 22:55:15,323 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-28 22:55:15,323 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-28 22:55:15,345 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-28 22:55:15,487 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-04-28 22:55:15,489 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-04-28 22:55:15,502 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-28 22:55:15,791 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-28 22:55:15,798 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-28 22:55:15,829 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-04-28 22:55:15,839 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-04-28 22:55:15,849 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-04-28 22:55:15,851 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-04-28 22:55:15,989 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-28 22:55:15,997 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-28 22:55:16,018 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-28 22:55:16,018 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-28 22:55:16,111 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s500ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-28 22:55:20,783 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-28 22:55:20,791 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-28 22:55:20,792 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-28 22:55:20,794 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-28 22:55:20,794 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-28 22:55:20,819 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 22:55:20,832 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 22:55:20,833 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 22:55:20,834 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 22:55:20,865 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-28 22:55:20,867 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-28 22:55:20,933 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-28 22:55:21,003 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-28 22:55:21,246 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-28 22:55:21,250 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-28 22:55:21,254 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-28 22:55:21,256 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-28 22:55:21,258 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-28 22:55:21,259 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-28 22:55:21,261 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-28 22:55:21,264 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-28 22:55:21,265 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-28 22:55:21,269 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-28 22:55:21,284 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-28 22:55:21,287 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-28 22:55:21,293 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-28 22:55:21,294 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-28 22:55:21,294 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-28 22:55:21,295 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-28 22:55:21,295 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-28 22:55:21,296 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-28 22:55:21,296 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-28 22:55:21,297 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-28 22:55:21,302 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-28 22:55:21,320 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-28 22:55:21,323 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-28 22:55:21,330 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-28 22:55:21,339 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-28 22:55:21,351 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-28 22:55:21,376 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-28 22:55:21,380 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-28 22:55:21,394 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-28 22:55:21,401 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-28 22:55:21,405 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-28 22:55:21,413 [main] INFO  (Database#info():2846) - }
2020-04-28 22:55:21,414 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-28 22:55:21,419 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-28 22:55:21,440 [main] INFO  (Database#info():2846) - }
2020-04-28 22:55:21,452 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-28 22:55:21,488 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-28 22:55:21,492 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-28 22:55:21,493 [main] INFO  (Database#info():2846) -     parse('cart');
2020-04-28 22:55:21,678 [main] INFO  (Database#info():2846) -     parse('orders');
2020-04-28 22:55:21,799 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-28 22:55:21,947 [main] INFO  (Database#info():2846) -     parse('stock');
2020-04-28 22:55:22,084 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-28 22:55:22,240 [main] INFO  (Database#info():2846) - }
2020-04-28 22:55:22,243 [main] INFO  (Database#info():2846) -  
2020-04-28 22:55:22,428 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-28 22:55:22,436 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-28 22:55:22,447 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-28 22:55:22,499 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s730ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-28 22:55:25,064 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-28 22:55:25,082 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-28 22:55:25,084 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-28 22:55:25,085 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-28 22:55:25,085 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-28 22:55:25,117 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 22:55:25,120 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 22:55:25,121 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 22:55:25,122 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 22:55:25,182 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-04-28 22:55:25,196 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-28 22:55:25,466 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-28 22:55:25,467 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-28 22:55:25,500 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select c.cart_num, p.name, p.price, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
 order by c.created asc
2020-04-28 22:55:25,539 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-28 22:55:25,541 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-28 22:55:25,564 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-04-28 22:55:25,605 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-28 22:55:25,606 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-04-28 22:55:25,607 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-28 22:55:25,697 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s634ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql

   o: OK (2)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-28 22:55:27,181 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-28 22:55:27,197 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-28 22:55:27,203 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-28 22:55:27,203 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-28 22:55:27,205 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-28 22:55:27,263 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 22:55:27,266 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 22:55:27,267 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 22:55:27,268 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 22:55:27,299 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-28 22:55:27,301 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-28 22:55:27,313 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-28 22:55:27,420 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-04-28 22:55:27,430 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-28 22:55:27,700 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-28 22:55:27,701 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-28 22:55:27,707 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select c.cart_num, p.name, p.price, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
 order by c.created asc
2020-04-28 22:55:27,788 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-04-28 22:55:27,789 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-28 22:55:27,790 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-04-28 22:55:27,831 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-04-28 22:55:27,832 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-04-28 22:55:27,837 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-04-28 22:55:27,840 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-04-28 22:55:27,862 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-04-28 22:55:27,883 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-04-28 22:55:27,884 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-04-28 22:55:27,886 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-04-28 22:55:27,941 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-04-28 22:55:27,941 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-28 22:55:27,942 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-04-28 22:55:27,944 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-04-28 22:55:28,029 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-28 22:55:28,036 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-28 22:55:28,037 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-28 22:55:28,038 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-28 22:55:28,039 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-28 22:55:28,059 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
CartInProductDitails
  cart_num INT(11) related to cart.cart_num
  name VARCHAR(50) related to product.name
  price DOUBLE(23) related to product.price
  image VARCHAR(50) related to product.image

ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-04-28 22:55:28,083 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-28 22:55:28,084 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-28 22:55:28,085 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-28 22:55:28,087 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
CartInProductDitailsPmb (typed to list, entity)
  Integer UserId

ProductRelationPmb (typed to list, entity)
  Integer ProductId
2020-04-28 22:55:28,098 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-28 22:55:28,330 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-28 22:55:28,342 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-28 22:55:28,349 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-28 22:55:28,352 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-28 22:55:28,374 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-28 22:55:28,374 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-28 22:55:28,460 [main] INFO  (Database#info():2846) -     parse('CartInProductDitails')
2020-04-28 22:55:28,496 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-04-28 22:55:28,497 [main] INFO  (Database#info():2846) - }
2020-04-28 22:55:28,498 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-04-28 22:55:28,501 [main] INFO  (Database#info():2846) -     parse('CartInProductDitailsPmb');
2020-04-28 22:55:28,523 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-04-28 22:55:28,533 [main] INFO  (Database#info():2846) - }
2020-04-28 22:55:28,584 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 2

  CartBhv_selectCartInProductDitails.sql
  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-04-28 22:55:28,602 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-28 22:55:28,605 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-28 22:55:28,613 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-28 22:55:28,614 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-28 22:55:28,699 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s533ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-04-28 23:01:55,549 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-04-28 23:01:55,561 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-04-28 23:01:55,562 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-04-28 23:01:55,564 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-04-28 23:01:55,564 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-04-28 23:01:55,644 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 23:01:55,644 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 23:01:55,651 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 23:01:55,653 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 23:01:55,772 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-04-28 23:01:55,772 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-04-28 23:01:55,789 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-04-28 23:01:55,806 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-28 23:01:56,014 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-04-28 23:01:56,054 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-28 23:01:57,477 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-28 23:01:57,481 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-28 23:01:57,487 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-04-28 23:01:57,491 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-04-28 23:01:57,493 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-04-28 23:01:57,494 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-04-28 23:01:57,531 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-04-28 23:01:57,544 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-04-28 23:01:57,564 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-04-28 23:01:57,590 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-04-28 23:01:57,592 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-28 23:01:57,595 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-04-28 23:01:57,596 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-04-28 23:01:57,666 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-04-28 23:01:57,686 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-04-28 23:01:57,706 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-04-28 23:01:57,725 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-04-28 23:01:57,741 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-04-28 23:01:57,743 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-04-28 23:01:57,744 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-04-28 23:01:57,748 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-04-28 23:01:57,749 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-04-28 23:01:57,755 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-04-28 23:01:57,766 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-04-28 23:01:57,769 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-04-28 23:01:57,773 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-04-28 23:01:57,798 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-04-28 23:01:57,820 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-28 23:01:57,961 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-04-28 23:01:57,965 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-28 23:01:58,119 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s615ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-04-28 23:02:01,332 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-04-28 23:02:01,339 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-04-28 23:02:01,339 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-04-28 23:02:01,346 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-04-28 23:02:01,347 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-04-28 23:02:01,402 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 23:02:01,402 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 23:02:01,416 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 23:02:01,417 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 23:02:01,420 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-04-28 23:02:01,420 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-04-28 23:02:01,426 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-04-28 23:02:01,426 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-04-28 23:02:01,427 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-04-28 23:02:01,428 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-04-28 23:02:01,519 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-28 23:02:01,692 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-28 23:02:01,694 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-28 23:02:01,697 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-28 23:02:01,701 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-28 23:02:01,703 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-28 23:02:01,706 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-28 23:02:01,709 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-28 23:02:01,710 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-28 23:02:01,712 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-28 23:02:01,747 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-28 23:02:01,938 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-04-28 23:02:02,370 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-04-28 23:02:02,392 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-04-28 23:02:02,472 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=5
2020-04-28 23:02:02,602 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-04-28 23:02:02,604 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-04-28 23:02:02,639 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-04-28 23:02:02,886 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-04-28 23:02:02,902 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-04-28 23:02:02,935 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-28 23:02:03,494 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-28 23:02:03,495 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-28 23:02:03,571 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-04-28 23:02:03,584 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-04-28 23:02:03,586 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-04-28 23:02:03,587 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-04-28 23:02:03,668 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-28 23:02:03,677 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-28 23:02:03,694 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-28 23:02:03,702 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-28 23:02:03,859 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s567ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-04-28 23:02:13,266 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-04-28 23:02:13,283 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-04-28 23:02:13,290 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-04-28 23:02:13,291 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-04-28 23:02:13,292 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-04-28 23:02:13,359 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 23:02:13,361 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 23:02:13,362 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 23:02:13,363 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 23:02:13,421 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-04-28 23:02:13,426 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-04-28 23:02:13,573 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-28 23:02:13,699 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-04-28 23:02:14,192 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-04-28 23:02:14,209 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-04-28 23:02:14,212 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-04-28 23:02:14,218 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-04-28 23:02:14,222 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-04-28 23:02:14,223 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-04-28 23:02:14,226 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-04-28 23:02:14,231 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-04-28 23:02:14,233 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-04-28 23:02:14,235 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-04-28 23:02:14,265 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-28 23:02:14,280 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-04-28 23:02:14,282 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-04-28 23:02:14,283 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-04-28 23:02:14,284 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-04-28 23:02:14,286 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-04-28 23:02:14,289 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-04-28 23:02:14,290 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-04-28 23:02:14,293 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-04-28 23:02:14,293 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-04-28 23:02:14,295 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-04-28 23:02:14,330 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-04-28 23:02:14,335 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-04-28 23:02:14,348 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-04-28 23:02:14,369 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-04-28 23:02:14,379 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-04-28 23:02:14,426 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-04-28 23:02:14,432 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-04-28 23:02:14,448 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-04-28 23:02:14,451 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-04-28 23:02:14,464 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-04-28 23:02:14,471 [main] INFO  (Database#info():2846) - }
2020-04-28 23:02:14,471 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-04-28 23:02:14,479 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-04-28 23:02:14,512 [main] INFO  (Database#info():2846) - }
2020-04-28 23:02:14,531 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-04-28 23:02:14,614 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-28 23:02:14,615 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-04-28 23:02:14,619 [main] INFO  (Database#info():2846) -     parse('cart');
2020-04-28 23:02:14,949 [main] INFO  (Database#info():2846) -     parse('orders');
2020-04-28 23:02:15,131 [main] INFO  (Database#info():2846) -     parse('product');
2020-04-28 23:02:15,323 [main] INFO  (Database#info():2846) -     parse('stock');
2020-04-28 23:02:15,536 [main] INFO  (Database#info():2846) -     parse('user');
2020-04-28 23:02:15,702 [main] INFO  (Database#info():2846) - }
2020-04-28 23:02:15,703 [main] INFO  (Database#info():2846) -  
2020-04-28 23:02:15,872 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-28 23:02:15,876 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-28 23:02:15,891 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-28 23:02:15,900 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s664ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-04-28 23:02:19,239 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-04-28 23:02:19,245 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-04-28 23:02:19,245 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-04-28 23:02:19,250 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-04-28 23:02:19,252 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-04-28 23:02:19,310 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 23:02:19,320 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 23:02:19,321 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 23:02:19,321 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 23:02:19,448 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-04-28 23:02:19,466 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-28 23:02:20,014 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-28 23:02:20,016 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-28 23:02:20,077 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
 order by c.created asc
2020-04-28 23:02:20,127 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-28 23:02:20,129 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-28 23:02:20,155 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-04-28 23:02:20,222 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-04-28 23:02:20,225 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-04-28 23:02:20,229 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-28 23:02:20,411 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s208ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql

   o: OK (2)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-04-28 23:02:23,642 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-04-28 23:02:23,658 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-04-28 23:02:23,658 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-04-28 23:02:23,662 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-04-28 23:02:23,664 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-04-28 23:02:23,731 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-04-28 23:02:23,732 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-04-28 23:02:23,733 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-04-28 23:02:23,734 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-04-28 23:02:23,777 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-04-28 23:02:23,777 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-04-28 23:02:23,793 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-04-28 23:02:23,990 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-04-28 23:02:24,003 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-04-28 23:02:24,545 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-04-28 23:02:24,546 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-04-28 23:02:24,554 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
 order by c.created asc
2020-04-28 23:02:24,686 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-04-28 23:02:24,687 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-04-28 23:02:24,688 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-04-28 23:02:24,749 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-04-28 23:02:24,751 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-04-28 23:02:24,765 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-04-28 23:02:24,765 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-04-28 23:02:24,813 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-04-28 23:02:24,827 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-04-28 23:02:24,831 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-04-28 23:02:24,832 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-04-28 23:02:24,906 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-04-28 23:02:24,906 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-04-28 23:02:24,915 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-04-28 23:02:24,916 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-04-28 23:02:25,046 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-04-28 23:02:25,050 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-04-28 23:02:25,052 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-04-28 23:02:25,056 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-04-28 23:02:25,057 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-04-28 23:02:25,089 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
CartInProductDitails
  cart_num INT(11) related to cart.cart_num
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image

ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-04-28 23:02:25,106 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-04-28 23:02:25,107 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-04-28 23:02:25,107 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-04-28 23:02:25,112 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
CartInProductDitailsPmb (typed to list, entity)
  Integer UserId

ProductRelationPmb (typed to list, entity)
  Integer ProductId
2020-04-28 23:02:25,125 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-04-28 23:02:25,631 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-28 23:02:25,637 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-04-28 23:02:25,646 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-04-28 23:02:25,649 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-04-28 23:02:25,684 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-04-28 23:02:25,684 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-04-28 23:02:25,842 [main] INFO  (Database#info():2846) -     parse('CartInProductDitails')
2020-04-28 23:02:25,920 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-04-28 23:02:25,926 [main] INFO  (Database#info():2846) - }
2020-04-28 23:02:25,929 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-04-28 23:02:25,943 [main] INFO  (Database#info():2846) -     parse('CartInProductDitailsPmb');
2020-04-28 23:02:25,986 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-04-28 23:02:26,009 [main] INFO  (Database#info():2846) - }
2020-04-28 23:02:26,102 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 2

  CartBhv_selectCartInProductDitails.sql
  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-04-28 23:02:26,129 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-04-28 23:02:26,134 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-04-28 23:02:26,142 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-04-28 23:02:26,144 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-04-28 23:02:26,291 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s683ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-05-03 16:57:13,230 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-05-03 16:57:13,253 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-05-03 16:57:13,255 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-05-03 16:57:13,256 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-05-03 16:57:13,259 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-05-03 16:57:13,350 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 16:57:13,352 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 16:57:13,353 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 16:57:13,354 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 16:57:13,531 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-05-03 16:57:13,532 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-05-03 16:57:13,533 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-05-03 16:57:13,607 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 16:57:13,873 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-05-03 16:57:13,910 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 16:57:14,967 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 16:57:14,970 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 16:57:14,973 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-05-03 16:57:14,976 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-05-03 16:57:14,977 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-05-03 16:57:14,978 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-05-03 16:57:15,114 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-05-03 16:57:15,149 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-05-03 16:57:15,174 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-05-03 16:57:15,191 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-05-03 16:57:15,192 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-03 16:57:15,193 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-05-03 16:57:15,198 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-05-03 16:57:15,257 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-05-03 16:57:15,274 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-05-03 16:57:15,292 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-05-03 16:57:15,307 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-05-03 16:57:15,325 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-05-03 16:57:15,326 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-05-03 16:57:15,327 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-05-03 16:57:15,328 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-05-03 16:57:15,329 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-05-03 16:57:15,332 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-05-03 16:57:15,343 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-05-03 16:57:15,344 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-05-03 16:57:15,345 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-05-03 16:57:15,378 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-05-03 16:57:15,384 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 16:57:15,473 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-05-03 16:57:15,474 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 16:57:15,657 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s535ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-05-03 16:57:17,712 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-05-03 16:57:17,719 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-05-03 16:57:17,721 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-05-03 16:57:17,722 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-05-03 16:57:17,724 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-05-03 16:57:17,772 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 16:57:17,773 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 16:57:17,774 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 16:57:17,774 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 16:57:17,778 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-05-03 16:57:17,779 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-05-03 16:57:17,780 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-05-03 16:57:17,781 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-05-03 16:57:17,786 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-05-03 16:57:17,788 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-05-03 16:57:17,893 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 16:57:18,010 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-03 16:57:18,011 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-03 16:57:18,014 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-03 16:57:18,017 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-03 16:57:18,018 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-03 16:57:18,021 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-03 16:57:18,031 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-03 16:57:18,032 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-03 16:57:18,059 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-03 16:57:18,107 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 16:57:18,292 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-05-03 16:57:18,681 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-05-03 16:57:18,728 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-05-03 16:57:18,805 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=5
2020-05-03 16:57:19,181 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-05-03 16:57:19,181 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-05-03 16:57:19,219 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-05-03 16:57:19,545 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-05-03 16:57:19,546 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-05-03 16:57:19,580 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 16:57:19,912 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 16:57:19,913 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 16:57:19,987 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-03 16:57:19,999 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-03 16:57:20,001 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-03 16:57:20,002 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-03 16:57:20,232 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-03 16:57:20,236 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-03 16:57:20,299 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-03 16:57:20,300 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 16:57:20,454 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s772ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-05-03 16:57:26,302 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-05-03 16:57:26,306 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-05-03 16:57:26,307 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-05-03 16:57:26,308 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-05-03 16:57:26,309 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-05-03 16:57:26,357 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 16:57:26,359 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 16:57:26,360 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 16:57:26,361 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 16:57:26,403 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-05-03 16:57:26,404 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-05-03 16:57:26,503 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 16:57:26,573 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-05-03 16:57:26,923 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-05-03 16:57:26,934 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-03 16:57:26,935 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-03 16:57:26,937 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-03 16:57:26,940 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-03 16:57:26,941 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-03 16:57:26,944 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-03 16:57:26,947 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-03 16:57:26,950 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-03 16:57:26,954 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-03 16:57:26,972 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 16:57:27,004 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-05-03 16:57:27,005 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-05-03 16:57:27,006 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-05-03 16:57:27,007 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-05-03 16:57:27,007 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-05-03 16:57:27,008 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-05-03 16:57:27,009 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-05-03 16:57:27,009 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-05-03 16:57:27,010 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-05-03 16:57:27,011 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-05-03 16:57:27,068 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-05-03 16:57:27,068 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-05-03 16:57:27,101 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-05-03 16:57:27,156 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-05-03 16:57:27,176 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-05-03 16:57:27,225 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-05-03 16:57:27,255 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-05-03 16:57:27,285 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-05-03 16:57:27,307 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-05-03 16:57:27,340 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-05-03 16:57:27,369 [main] INFO  (Database#info():2846) - }
2020-05-03 16:57:27,370 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-05-03 16:57:27,371 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-05-03 16:57:27,424 [main] INFO  (Database#info():2846) - }
2020-05-03 16:57:27,433 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-05-03 16:57:27,474 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-03 16:57:27,475 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-05-03 16:57:27,476 [main] INFO  (Database#info():2846) -     parse('cart');
2020-05-03 16:57:28,096 [main] INFO  (Database#info():2846) -     parse('orders');
2020-05-03 16:57:28,406 [main] INFO  (Database#info():2846) -     parse('product');
2020-05-03 16:57:28,714 [main] INFO  (Database#info():2846) -     parse('stock');
2020-05-03 16:57:29,142 [main] INFO  (Database#info():2846) -     parse('user');
2020-05-03 16:57:29,475 [main] INFO  (Database#info():2846) - }
2020-05-03 16:57:29,533 [main] INFO  (Database#info():2846) -  
2020-05-03 16:57:30,038 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-03 16:57:30,056 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-03 16:57:30,088 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-03 16:57:30,164 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s822ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-05-03 16:57:33,422 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-03 16:57:33,429 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-03 16:57:33,430 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-03 16:57:33,431 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-03 16:57:33,433 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-03 16:57:33,471 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 16:57:33,472 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 16:57:33,473 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 16:57:33,474 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 16:57:33,550 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-03 16:57:33,561 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 16:57:33,903 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 16:57:33,904 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 16:57:34,010 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
 order by c.created asc
2020-05-03 16:57:34,072 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-03 16:57:34,074 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-03 16:57:34,103 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-03 16:57:34,158 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-03 16:57:34,168 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-05-03 16:57:34,168 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 16:57:34,335 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s935ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql

   o: OK (2)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-03 16:57:36,249 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-05-03 16:57:36,253 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-05-03 16:57:36,254 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-05-03 16:57:36,255 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-05-03 16:57:36,257 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-05-03 16:57:36,302 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 16:57:36,303 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 16:57:36,304 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 16:57:36,304 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 16:57:36,338 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-05-03 16:57:36,339 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-05-03 16:57:36,354 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 16:57:36,478 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-03 16:57:36,488 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 16:57:36,802 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 16:57:36,804 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 16:57:36,811 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
 order by c.created asc
2020-05-03 16:57:36,908 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-03 16:57:36,918 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-03 16:57:36,918 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-03 16:57:36,994 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-03 16:57:36,998 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-05-03 16:57:37,006 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-05-03 16:57:37,009 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-05-03 16:57:37,041 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-03 16:57:37,055 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-03 16:57:37,056 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-03 16:57:37,061 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-03 16:57:37,111 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-05-03 16:57:37,112 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-03 16:57:37,113 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-05-03 16:57:37,114 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-05-03 16:57:37,187 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-05-03 16:57:37,189 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-05-03 16:57:37,190 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-05-03 16:57:37,191 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-05-03 16:57:37,192 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-05-03 16:57:37,215 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
CartInProductDitails
  cart_num INT(11) related to cart.cart_num
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image

ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-05-03 16:57:37,242 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-05-03 16:57:37,243 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-05-03 16:57:37,245 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-05-03 16:57:37,248 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
CartInProductDitailsPmb (typed to list, entity)
  Integer UserId

ProductRelationPmb (typed to list, entity)
  Integer ProductId
2020-05-03 16:57:37,265 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-05-03 16:57:37,643 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 16:57:37,645 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 16:57:37,651 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-05-03 16:57:37,655 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-05-03 16:57:37,683 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-03 16:57:37,684 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-05-03 16:57:37,794 [main] INFO  (Database#info():2846) -     parse('CartInProductDitails')
2020-05-03 16:57:37,845 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-05-03 16:57:37,847 [main] INFO  (Database#info():2846) - }
2020-05-03 16:57:37,849 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-05-03 16:57:37,907 [main] INFO  (Database#info():2846) -     parse('CartInProductDitailsPmb');
2020-05-03 16:57:37,982 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-05-03 16:57:37,998 [main] INFO  (Database#info():2846) - }
2020-05-03 16:57:38,107 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 2

  CartBhv_selectCartInProductDitails.sql
  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-05-03 16:57:38,126 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-03 16:57:38,131 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-03 16:57:38,136 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-03 16:57:38,137 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 16:57:38,276 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s051ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-05-03 17:02:26,825 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-05-03 17:02:26,840 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-05-03 17:02:26,842 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-05-03 17:02:26,850 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-05-03 17:02:26,851 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-05-03 17:02:26,918 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 17:02:26,920 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 17:02:26,921 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 17:02:26,922 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 17:02:27,008 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-05-03 17:02:27,009 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-05-03 17:02:27,010 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-05-03 17:02:27,037 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 17:02:27,163 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-05-03 17:02:27,188 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 17:02:28,071 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 17:02:28,073 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 17:02:28,077 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-05-03 17:02:28,083 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-05-03 17:02:28,084 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-05-03 17:02:28,084 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-05-03 17:02:28,111 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-05-03 17:02:28,121 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-05-03 17:02:28,140 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-05-03 17:02:28,162 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-05-03 17:02:28,164 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-03 17:02:28,165 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-05-03 17:02:28,169 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-05-03 17:02:28,225 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-05-03 17:02:28,242 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-05-03 17:02:28,261 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-05-03 17:02:28,280 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-05-03 17:02:28,299 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-05-03 17:02:28,300 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-05-03 17:02:28,301 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-05-03 17:02:28,301 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-05-03 17:02:28,302 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-05-03 17:02:28,304 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-05-03 17:02:28,316 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-05-03 17:02:28,317 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-05-03 17:02:28,318 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-05-03 17:02:28,344 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-05-03 17:02:28,356 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 17:02:28,462 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1555) -  -> different from previous (schema diff)
2020-05-03 17:02:28,465 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1557) - ...Serializing schema-diff:
2020-05-03 17:02:28,466 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1558) -   filePath = ./schema/project-history-dfclient.diffmap
2020-05-03 17:02:28,532 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 17:02:28,741 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s926ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-05-03 17:02:30,914 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-05-03 17:02:30,918 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-05-03 17:02:30,919 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-05-03 17:02:30,921 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-05-03 17:02:30,922 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-05-03 17:02:30,966 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 17:02:30,968 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 17:02:30,969 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 17:02:30,969 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 17:02:30,974 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-05-03 17:02:30,975 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-05-03 17:02:30,976 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-05-03 17:02:30,979 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-05-03 17:02:30,980 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-05-03 17:02:30,984 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-05-03 17:02:31,121 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 17:02:31,261 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-03 17:02:31,262 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-03 17:02:31,265 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-03 17:02:31,267 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-03 17:02:31,268 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-03 17:02:31,270 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-03 17:02:31,274 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-03 17:02:31,275 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-03 17:02:31,291 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-03 17:02:31,317 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 17:02:31,443 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-05-03 17:02:31,778 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-05-03 17:02:31,797 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-05-03 17:02:31,885 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=6
2020-05-03 17:02:32,118 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-05-03 17:02:32,119 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-05-03 17:02:32,177 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-05-03 17:02:32,737 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-05-03 17:02:32,750 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-05-03 17:02:32,768 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 17:02:33,185 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 17:02:33,186 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 17:02:33,232 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-03 17:02:33,248 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-03 17:02:33,249 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-03 17:02:33,249 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-03 17:02:34,007 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-03 17:02:34,011 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-03 17:02:34,036 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-03 17:02:34,037 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 17:02:34,258 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s285ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-05-03 17:02:40,923 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-05-03 17:02:40,931 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-05-03 17:02:40,931 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-05-03 17:02:40,932 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-05-03 17:02:40,933 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-05-03 17:02:41,125 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 17:02:41,125 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 17:02:41,125 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 17:02:41,125 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 17:02:41,250 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-05-03 17:02:41,251 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-05-03 17:02:41,384 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 17:02:41,464 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-05-03 17:02:41,807 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-05-03 17:02:41,815 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-03 17:02:41,815 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-03 17:02:41,819 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-03 17:02:41,822 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-03 17:02:41,823 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-03 17:02:41,827 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-03 17:02:41,830 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-03 17:02:41,830 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-03 17:02:41,863 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-03 17:02:41,905 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 17:02:41,971 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-05-03 17:02:41,972 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-05-03 17:02:41,973 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-05-03 17:02:41,974 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-05-03 17:02:41,975 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-05-03 17:02:41,976 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-05-03 17:02:41,976 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-05-03 17:02:41,977 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-05-03 17:02:41,978 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-05-03 17:02:41,979 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-05-03 17:02:42,072 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-05-03 17:02:42,075 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-05-03 17:02:42,100 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-05-03 17:02:42,205 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-05-03 17:02:42,233 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-05-03 17:02:42,277 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-05-03 17:02:42,315 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-05-03 17:02:42,336 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-05-03 17:02:42,358 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-05-03 17:02:42,376 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-05-03 17:02:42,389 [main] INFO  (Database#info():2846) - }
2020-05-03 17:02:42,390 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-05-03 17:02:42,392 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-05-03 17:02:42,422 [main] INFO  (Database#info():2846) - }
2020-05-03 17:02:42,431 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-05-03 17:02:42,470 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-03 17:02:42,472 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-05-03 17:02:42,473 [main] INFO  (Database#info():2846) -     parse('cart');
2020-05-03 17:02:42,898 [main] INFO  (Database#info():2846) -     parse('orders');
2020-05-03 17:02:43,040 [main] INFO  (Database#info():2846) -     parse('product');
2020-05-03 17:02:43,182 [main] INFO  (Database#info():2846) -     parse('stock');
2020-05-03 17:02:43,332 [main] INFO  (Database#info():2846) -     parse('user');
2020-05-03 17:02:43,500 [main] INFO  (Database#info():2846) - }
2020-05-03 17:02:43,501 [main] INFO  (Database#info():2846) -  
2020-05-03 17:02:43,663 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-03 17:02:43,665 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-03 17:02:43,672 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-03 17:02:43,704 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s874ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-05-03 17:02:48,489 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-03 17:02:48,496 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-03 17:02:48,497 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-03 17:02:48,497 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-03 17:02:48,499 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-03 17:02:48,559 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 17:02:48,560 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 17:02:48,561 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 17:02:48,562 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 17:02:48,664 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-03 17:02:48,675 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 17:02:49,045 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 17:02:49,046 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 17:02:49,090 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
 order by c.created asc
2020-05-03 17:02:49,123 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-03 17:02:49,125 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-03 17:02:49,151 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-03 17:02:49,195 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-03 17:02:49,198 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-05-03 17:02:49,202 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 17:02:49,316 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s931ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql

   o: OK (2)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-03 17:02:51,311 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-05-03 17:02:51,317 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-05-03 17:02:51,318 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-05-03 17:02:51,319 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-05-03 17:02:51,321 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-05-03 17:02:51,359 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 17:02:51,360 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 17:02:51,361 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 17:02:51,362 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 17:02:51,393 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-05-03 17:02:51,394 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-05-03 17:02:51,408 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 17:02:51,516 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-03 17:02:51,530 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 17:02:51,853 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 17:02:51,854 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 17:02:51,860 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
 order by c.created asc
2020-05-03 17:02:51,947 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-03 17:02:51,947 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-03 17:02:51,947 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-03 17:02:52,003 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-03 17:02:52,004 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-05-03 17:02:52,012 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-05-03 17:02:52,013 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-05-03 17:02:52,045 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-03 17:02:52,055 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-03 17:02:52,055 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-03 17:02:52,055 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-03 17:02:52,113 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-05-03 17:02:52,114 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-03 17:02:52,115 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-05-03 17:02:52,116 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-05-03 17:02:52,190 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-05-03 17:02:52,191 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-05-03 17:02:52,192 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-05-03 17:02:52,193 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-05-03 17:02:52,194 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-05-03 17:02:52,246 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
CartInProductDitails
  cart_num INT(11) related to cart.cart_num
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image

ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-05-03 17:02:52,268 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-05-03 17:02:52,268 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-05-03 17:02:52,271 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-05-03 17:02:52,273 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
CartInProductDitailsPmb (typed to list, entity)
  Integer UserId

ProductRelationPmb (typed to list, entity)
  Integer ProductId
2020-05-03 17:02:52,287 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-05-03 17:02:52,593 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 17:02:52,594 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 17:02:52,602 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-05-03 17:02:52,607 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-05-03 17:02:52,630 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-03 17:02:52,630 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-05-03 17:02:52,758 [main] INFO  (Database#info():2846) -     parse('CartInProductDitails')
2020-05-03 17:02:52,805 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-05-03 17:02:52,805 [main] INFO  (Database#info():2846) - }
2020-05-03 17:02:52,805 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-05-03 17:02:52,826 [main] INFO  (Database#info():2846) -     parse('CartInProductDitailsPmb');
2020-05-03 17:02:52,902 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-05-03 17:02:52,922 [main] INFO  (Database#info():2846) - }
2020-05-03 17:02:53,002 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 2

  CartBhv_selectCartInProductDitails.sql
  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-05-03 17:02:53,020 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-03 17:02:53,021 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-03 17:02:53,028 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-03 17:02:53,029 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 17:02:53,149 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s862ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-05-03 17:16:45,437 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-05-03 17:16:45,446 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-05-03 17:16:45,447 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-05-03 17:16:45,448 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-05-03 17:16:45,450 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-05-03 17:16:45,505 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 17:16:45,507 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 17:16:45,509 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 17:16:45,510 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 17:16:45,600 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-05-03 17:16:45,601 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-05-03 17:16:45,602 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-05-03 17:16:45,618 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 17:16:45,747 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-05-03 17:16:45,779 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 17:16:46,723 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 17:16:46,725 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 17:16:46,729 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-05-03 17:16:46,732 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-05-03 17:16:46,734 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-05-03 17:16:46,735 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-05-03 17:16:46,764 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-05-03 17:16:46,778 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-05-03 17:16:46,796 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-05-03 17:16:46,814 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-05-03 17:16:46,814 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-03 17:16:46,815 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-05-03 17:16:46,820 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-05-03 17:16:46,884 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-05-03 17:16:46,901 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-05-03 17:16:46,919 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-05-03 17:16:46,940 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-05-03 17:16:46,961 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-05-03 17:16:46,962 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-05-03 17:16:46,963 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-05-03 17:16:46,963 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-05-03 17:16:46,964 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-05-03 17:16:46,967 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-05-03 17:16:46,979 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-05-03 17:16:46,980 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-05-03 17:16:46,981 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-05-03 17:16:47,016 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-05-03 17:16:47,022 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 17:16:47,126 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1555) -  -> different from previous (schema diff)
2020-05-03 17:16:47,129 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1557) - ...Serializing schema-diff:
2020-05-03 17:16:47,130 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1558) -   filePath = ./schema/project-history-dfclient.diffmap
2020-05-03 17:16:47,194 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 17:16:47,344 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s931ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-05-03 17:16:49,334 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-05-03 17:16:49,343 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-05-03 17:16:49,343 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-05-03 17:16:49,345 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-05-03 17:16:49,346 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-05-03 17:16:49,398 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 17:16:49,399 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 17:16:49,400 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 17:16:49,402 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 17:16:49,410 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-05-03 17:16:49,411 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-05-03 17:16:49,412 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-05-03 17:16:49,416 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-05-03 17:16:49,416 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-05-03 17:16:49,418 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-05-03 17:16:49,503 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 17:16:49,596 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-03 17:16:49,597 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-03 17:16:49,600 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-03 17:16:49,602 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-03 17:16:49,603 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-03 17:16:49,607 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-03 17:16:49,611 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-03 17:16:49,611 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-03 17:16:49,614 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-03 17:16:49,634 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 17:16:49,811 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-05-03 17:16:50,124 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-05-03 17:16:50,140 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-05-03 17:16:50,218 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=7
2020-05-03 17:16:50,302 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-05-03 17:16:50,303 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-05-03 17:16:50,339 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-05-03 17:16:50,512 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-05-03 17:16:50,514 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-05-03 17:16:50,531 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 17:16:50,866 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 17:16:50,867 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 17:16:50,904 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-03 17:16:50,917 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-03 17:16:50,917 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-03 17:16:50,924 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-03 17:16:51,056 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-03 17:16:51,059 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-03 17:16:51,082 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-03 17:16:51,083 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 17:16:51,218 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s919ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-05-03 17:16:56,827 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-05-03 17:16:56,833 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-05-03 17:16:56,835 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-05-03 17:16:56,835 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-05-03 17:16:56,836 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-05-03 17:16:56,883 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 17:16:56,884 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 17:16:56,886 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 17:16:56,887 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 17:16:56,927 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-05-03 17:16:56,928 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-05-03 17:16:57,020 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 17:16:57,090 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-05-03 17:16:57,393 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-05-03 17:16:57,403 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-03 17:16:57,405 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-03 17:16:57,408 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-03 17:16:57,411 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-03 17:16:57,411 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-03 17:16:57,414 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-03 17:16:57,418 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-03 17:16:57,420 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-03 17:16:57,424 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-03 17:16:57,450 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 17:16:57,462 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-05-03 17:16:57,462 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-05-03 17:16:57,464 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-05-03 17:16:57,472 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-05-03 17:16:57,472 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-05-03 17:16:57,476 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-05-03 17:16:57,477 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-05-03 17:16:57,478 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-05-03 17:16:57,479 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-05-03 17:16:57,481 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-05-03 17:16:57,504 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-05-03 17:16:57,508 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-05-03 17:16:57,517 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-05-03 17:16:57,535 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-05-03 17:16:57,545 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-05-03 17:16:57,581 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-05-03 17:16:57,589 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-05-03 17:16:57,597 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-05-03 17:16:57,603 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-05-03 17:16:57,611 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-05-03 17:16:57,616 [main] INFO  (Database#info():2846) - }
2020-05-03 17:16:57,618 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-05-03 17:16:57,623 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-05-03 17:16:57,648 [main] INFO  (Database#info():2846) - }
2020-05-03 17:16:57,657 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-05-03 17:16:57,696 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-03 17:16:57,696 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-05-03 17:16:57,698 [main] INFO  (Database#info():2846) -     parse('cart');
2020-05-03 17:16:57,950 [main] INFO  (Database#info():2846) -     parse('orders');
2020-05-03 17:16:58,100 [main] INFO  (Database#info():2846) -     parse('product');
2020-05-03 17:16:58,241 [main] INFO  (Database#info():2846) -     parse('stock');
2020-05-03 17:16:58,376 [main] INFO  (Database#info():2846) -     parse('user');
2020-05-03 17:16:58,530 [main] INFO  (Database#info():2846) - }
2020-05-03 17:16:58,531 [main] INFO  (Database#info():2846) -  
2020-05-03 17:16:58,711 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-03 17:16:58,715 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-03 17:16:58,726 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-03 17:16:58,742 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s933ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-05-03 17:17:02,456 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-03 17:17:02,461 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-03 17:17:02,461 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-03 17:17:02,462 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-03 17:17:02,464 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-03 17:17:02,504 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 17:17:02,505 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 17:17:02,506 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 17:17:02,508 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 17:17:02,587 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-03 17:17:02,599 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 17:17:02,919 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 17:17:02,920 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 17:17:02,961 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
 order by c.created asc
2020-05-03 17:17:03,004 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-03 17:17:03,006 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-03 17:17:03,036 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-03 17:17:03,066 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-03 17:17:03,066 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-05-03 17:17:03,076 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 17:17:03,208 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s773ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql

   o: OK (2)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-03 17:17:05,053 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-05-03 17:17:05,058 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-05-03 17:17:05,058 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-05-03 17:17:05,059 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-05-03 17:17:05,061 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-05-03 17:17:05,104 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 17:17:05,105 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 17:17:05,106 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 17:17:05,107 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 17:17:05,140 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-05-03 17:17:05,141 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-05-03 17:17:05,147 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 17:17:05,269 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-03 17:17:05,281 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 17:17:05,606 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 17:17:05,606 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 17:17:05,612 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
 order by c.created asc
2020-05-03 17:17:05,703 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-03 17:17:05,704 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-03 17:17:05,706 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-03 17:17:05,771 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-03 17:17:05,772 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-05-03 17:17:05,780 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-05-03 17:17:05,783 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-05-03 17:17:05,816 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-03 17:17:05,831 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-03 17:17:05,833 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-03 17:17:05,845 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-03 17:17:05,904 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-05-03 17:17:05,905 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-03 17:17:05,906 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-05-03 17:17:05,907 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-05-03 17:17:05,985 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-05-03 17:17:05,985 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-05-03 17:17:05,986 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-05-03 17:17:05,987 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-05-03 17:17:05,988 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-05-03 17:17:06,011 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
CartInProductDitails
  cart_num INT(11) related to cart.cart_num
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image

ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-05-03 17:17:06,041 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-05-03 17:17:06,044 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-05-03 17:17:06,045 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-05-03 17:17:06,054 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
CartInProductDitailsPmb (typed to list, entity)
  Integer UserId

ProductRelationPmb (typed to list, entity)
  Integer ProductId
2020-05-03 17:17:06,071 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-05-03 17:17:06,359 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 17:17:06,361 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 17:17:06,369 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-05-03 17:17:06,373 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-05-03 17:17:06,402 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-03 17:17:06,404 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-05-03 17:17:06,510 [main] INFO  (Database#info():2846) -     parse('CartInProductDitails')
2020-05-03 17:17:06,571 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-05-03 17:17:06,573 [main] INFO  (Database#info():2846) - }
2020-05-03 17:17:06,574 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-05-03 17:17:06,584 [main] INFO  (Database#info():2846) -     parse('CartInProductDitailsPmb');
2020-05-03 17:17:06,626 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-05-03 17:17:06,641 [main] INFO  (Database#info():2846) - }
2020-05-03 17:17:06,715 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 2

  CartBhv_selectCartInProductDitails.sql
  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-05-03 17:17:06,737 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-03 17:17:06,740 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-03 17:17:06,748 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-03 17:17:06,751 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 17:17:06,878 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s844ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-05-03 18:01:22,636 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-03 18:01:22,695 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-03 18:01:22,699 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-03 18:01:22,702 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-03 18:01:22,704 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-03 18:01:22,785 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 18:01:22,786 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 18:01:22,787 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 18:01:22,788 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 18:01:22,891 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-03 18:01:22,931 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 18:01:23,963 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 18:01:23,965 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 18:01:24,060 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
    p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-03 18:01:24,205 [main] WARN  (DfSqlFileRunnerExecute#showContinueWarnLog():110) - *Failure: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
/nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc' at line 22
(SQLState=42000 ErrorCode=1064)
nnnnnnnnnnnnnnnnnnnn/
2020-05-03 18:01:24,226 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=0 failure=1

2020-05-03 18:01:24,238 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-03 18:01:24,252 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-03 18:01:24,304 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-03 18:01:24,308 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=1 (in 2 files)
2020-05-03 18:01:24,339 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'OutsideSqlTest'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.7.29-0ubuntu0.18.04.1

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.DfOutsideSqlTestFailureFoundException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Found the failure SQL by the OutsideSqlTest.

[Advice]
You can see the exception info
after each SQL logging like this:

  ...Firing [SQL-file]
  SQL: [SQL-string]
  *Failure: [SQLException-class]
  /nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn...
  [SQLException-message]
  [SQLState-info]
  nnnnnnnnnn/

* * * * * * * * * */
	at org.dbflute.task.DfOutsideSqlTestTask.throwOutsideSqlTestFailureFoundException(DfOutsideSqlTestTask.java:335)
	at org.dbflute.task.DfOutsideSqlTestTask.handleSqlFileFailure(DfOutsideSqlTestTask.java:314)
	at org.dbflute.task.DfOutsideSqlTestTask.doExecute(DfOutsideSqlTestTask.java:103)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2020-05-03 18:01:24,480 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 18:01:24,617 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s010ms *Abort

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  x CartBhv_selectCartInProductDitails.sql
   -> You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p.product_id = /*pmb.ProductId*/1...
  o ProductBhv_selectProductRelation.sql

   o: OK (1)
   x: Failure exists (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-03 18:19:54,043 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-03 18:19:54,049 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-03 18:19:54,049 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-03 18:19:54,051 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-03 18:19:54,052 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-03 18:19:54,098 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 18:19:54,099 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 18:19:54,100 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 18:19:54,101 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 18:19:54,185 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-03 18:19:54,220 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 18:19:55,126 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 18:19:55,127 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 18:19:55,201 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-03 18:19:55,259 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-03 18:19:55,264 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-03 18:19:55,276 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-03 18:19:55,361 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-03 18:19:55,363 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-05-03 18:19:55,366 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 18:19:55,549 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s531ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql

   o: OK (2)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-03 18:28:52,756 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-05-03 18:28:52,765 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-05-03 18:28:52,766 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-05-03 18:28:52,769 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-05-03 18:28:52,769 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-05-03 18:28:52,837 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 18:28:52,839 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 18:28:52,840 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 18:28:52,841 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 18:28:52,966 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-05-03 18:28:52,967 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-05-03 18:28:52,968 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-05-03 18:28:52,999 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 18:28:53,150 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-05-03 18:28:53,178 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 18:28:54,231 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 18:28:54,233 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 18:28:54,238 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-05-03 18:28:54,245 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-05-03 18:28:54,247 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-05-03 18:28:54,248 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-05-03 18:28:54,397 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-05-03 18:28:54,416 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-05-03 18:28:54,446 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-05-03 18:28:54,465 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-05-03 18:28:54,465 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-03 18:28:54,466 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-05-03 18:28:54,472 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-05-03 18:28:54,545 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-05-03 18:28:54,568 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-05-03 18:28:54,588 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-05-03 18:28:54,615 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-05-03 18:28:54,637 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-05-03 18:28:54,637 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-05-03 18:28:54,640 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-05-03 18:28:54,646 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-05-03 18:28:54,647 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-05-03 18:28:54,650 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-05-03 18:28:54,663 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-05-03 18:28:54,664 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-05-03 18:28:54,665 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-05-03 18:28:54,700 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-05-03 18:28:54,704 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 18:28:54,826 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-05-03 18:28:54,830 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 18:28:55,121 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s394ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-05-03 18:28:57,504 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-05-03 18:28:57,511 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-05-03 18:28:57,512 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-05-03 18:28:57,513 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-05-03 18:28:57,515 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-05-03 18:28:57,574 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 18:28:57,576 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 18:28:57,578 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 18:28:57,579 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 18:28:57,584 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-05-03 18:28:57,586 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-05-03 18:28:57,587 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-05-03 18:28:57,590 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-05-03 18:28:57,592 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-05-03 18:28:57,613 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-05-03 18:28:57,700 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 18:28:57,814 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-03 18:28:57,816 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-03 18:28:57,818 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-03 18:28:57,821 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-03 18:28:57,821 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-03 18:28:57,826 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-03 18:28:57,831 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-03 18:28:57,832 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-03 18:28:57,846 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-03 18:28:57,874 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 18:28:58,020 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-05-03 18:28:58,373 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-05-03 18:28:58,395 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-05-03 18:28:58,472 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=7
2020-05-03 18:28:58,630 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-05-03 18:28:58,631 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-05-03 18:28:58,681 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-05-03 18:28:58,904 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-05-03 18:28:58,906 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-05-03 18:28:58,928 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 18:28:59,325 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 18:28:59,328 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 18:28:59,376 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-03 18:28:59,387 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-03 18:28:59,389 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-03 18:28:59,399 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-03 18:28:59,578 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-03 18:28:59,582 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-03 18:28:59,610 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-03 18:28:59,613 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 18:28:59,783 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s320ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-05-03 18:29:06,345 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-05-03 18:29:06,354 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-05-03 18:29:06,360 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-05-03 18:29:06,361 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-05-03 18:29:06,365 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-05-03 18:29:06,417 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 18:29:06,418 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 18:29:06,419 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 18:29:06,420 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 18:29:06,476 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-05-03 18:29:06,476 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-05-03 18:29:06,588 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 18:29:06,664 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-05-03 18:29:07,016 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-05-03 18:29:07,028 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-03 18:29:07,029 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-03 18:29:07,031 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-03 18:29:07,037 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-03 18:29:07,039 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-03 18:29:07,042 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-03 18:29:07,045 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-03 18:29:07,046 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-03 18:29:07,049 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-03 18:29:07,077 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 18:29:07,090 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-05-03 18:29:07,092 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-05-03 18:29:07,094 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-05-03 18:29:07,098 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-05-03 18:29:07,099 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-05-03 18:29:07,105 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-05-03 18:29:07,107 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-05-03 18:29:07,111 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-05-03 18:29:07,112 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-05-03 18:29:07,115 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-05-03 18:29:07,139 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-05-03 18:29:07,144 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-05-03 18:29:07,221 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-05-03 18:29:07,260 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-05-03 18:29:07,274 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-05-03 18:29:07,316 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-05-03 18:29:07,327 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-05-03 18:29:07,344 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-05-03 18:29:07,353 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-05-03 18:29:07,381 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-05-03 18:29:07,399 [main] INFO  (Database#info():2846) - }
2020-05-03 18:29:07,400 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-05-03 18:29:07,404 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-05-03 18:29:07,458 [main] INFO  (Database#info():2846) - }
2020-05-03 18:29:07,465 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-05-03 18:29:07,523 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-03 18:29:07,524 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-05-03 18:29:07,525 [main] INFO  (Database#info():2846) -     parse('cart');
2020-05-03 18:29:08,000 [main] INFO  (Database#info():2846) -     parse('orders');
2020-05-03 18:29:08,264 [main] INFO  (Database#info():2846) -     parse('product');
2020-05-03 18:29:08,754 [main] INFO  (Database#info():2846) -     parse('stock');
2020-05-03 18:29:09,100 [main] INFO  (Database#info():2846) -     parse('user');
2020-05-03 18:29:09,493 [main] INFO  (Database#info():2846) - }
2020-05-03 18:29:09,497 [main] INFO  (Database#info():2846) -  
2020-05-03 18:29:09,792 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-03 18:29:09,838 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-03 18:29:09,850 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-03 18:29:09,868 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s546ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-05-03 18:29:12,889 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-03 18:29:12,894 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-03 18:29:12,895 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-03 18:29:12,895 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-03 18:29:12,897 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-03 18:29:12,943 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 18:29:12,945 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 18:29:12,946 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 18:29:12,947 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 18:29:13,035 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-03 18:29:13,050 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 18:29:13,430 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 18:29:13,431 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 18:29:13,508 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-03 18:29:13,572 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-03 18:29:13,575 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-03 18:29:13,577 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-03 18:29:13,631 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-03 18:29:13,636 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-05-03 18:29:13,639 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 18:29:13,830 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s981ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql

   o: OK (2)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-03 18:29:16,005 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-05-03 18:29:16,011 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-05-03 18:29:16,011 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-05-03 18:29:16,012 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-05-03 18:29:16,014 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-05-03 18:29:16,067 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-03 18:29:16,068 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-03 18:29:16,069 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-03 18:29:16,070 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-03 18:29:16,107 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-05-03 18:29:16,108 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-05-03 18:29:16,126 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-03 18:29:16,257 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-03 18:29:16,274 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-03 18:29:16,652 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-03 18:29:16,653 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-03 18:29:16,661 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-03 18:29:16,832 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-03 18:29:16,834 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-03 18:29:16,836 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-03 18:29:16,890 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-03 18:29:16,891 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-05-03 18:29:16,902 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-05-03 18:29:16,903 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-05-03 18:29:16,945 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-03 18:29:16,959 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-03 18:29:16,959 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-03 18:29:16,960 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-03 18:29:17,025 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-05-03 18:29:17,026 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-03 18:29:17,027 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-05-03 18:29:17,028 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-05-03 18:29:17,119 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-05-03 18:29:17,120 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-05-03 18:29:17,122 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-05-03 18:29:17,123 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-05-03 18:29:17,124 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-05-03 18:29:17,155 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
CartInProductDitails
  cart_num INT(11) related to cart.cart_num
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image

ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-05-03 18:29:17,185 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-05-03 18:29:17,186 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-05-03 18:29:17,189 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-05-03 18:29:17,194 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
CartInProductDitailsPmb (typed to list, entity)
  Integer UserId
  Integer ProductId

ProductRelationPmb (typed to list, entity)
  Integer ProductId
2020-05-03 18:29:17,219 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-05-03 18:29:17,570 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 18:29:17,573 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-03 18:29:17,582 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-05-03 18:29:17,588 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-05-03 18:29:17,624 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-03 18:29:17,625 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-05-03 18:29:17,745 [main] INFO  (Database#info():2846) -     parse('CartInProductDitails')
2020-05-03 18:29:17,811 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-05-03 18:29:17,814 [main] INFO  (Database#info():2846) - }
2020-05-03 18:29:17,818 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-05-03 18:29:17,826 [main] INFO  (Database#info():2846) -     parse('CartInProductDitailsPmb');
2020-05-03 18:29:17,893 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-05-03 18:29:17,927 [main] INFO  (Database#info():2846) - }
2020-05-03 18:29:18,044 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 2

  CartBhv_selectCartInProductDitails.sql
  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-05-03 18:29:18,070 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-03 18:29:18,073 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-03 18:29:18,081 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-03 18:29:18,082 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-03 18:29:18,270 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s292ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-05-05 15:50:11,158 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-05-05 15:50:11,214 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-05-05 15:50:11,215 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-05-05 15:50:11,216 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-05-05 15:50:11,217 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-05-05 15:50:11,267 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-05 15:50:11,268 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-05 15:50:11,269 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-05 15:50:11,270 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-05 15:50:11,347 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-05-05 15:50:11,348 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-05-05 15:50:11,349 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-05-05 15:50:11,398 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-05 15:50:11,511 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-05-05 15:50:11,533 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-05 15:50:12,292 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-05 15:50:12,295 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-05 15:50:12,298 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-05-05 15:50:12,302 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-05-05 15:50:12,303 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-05-05 15:50:12,303 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-05-05 15:50:12,429 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-05-05 15:50:12,438 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-05-05 15:50:12,451 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-05-05 15:50:12,468 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-05-05 15:50:12,475 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-05 15:50:12,476 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-05-05 15:50:12,477 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-05-05 15:50:12,526 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-05-05 15:50:12,537 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-05-05 15:50:12,551 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-05-05 15:50:12,565 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-05-05 15:50:12,576 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-05-05 15:50:12,577 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-05-05 15:50:12,582 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-05-05 15:50:12,582 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-05-05 15:50:12,583 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-05-05 15:50:12,587 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-05-05 15:50:12,596 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-05-05 15:50:12,597 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-05-05 15:50:12,598 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-05-05 15:50:12,616 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-05-05 15:50:12,621 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-05 15:50:12,694 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-05-05 15:50:12,695 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-05 15:50:12,839 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s699ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-05-05 15:50:14,490 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-05-05 15:50:14,495 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-05-05 15:50:14,495 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-05-05 15:50:14,496 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-05-05 15:50:14,496 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-05-05 15:50:14,533 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-05 15:50:14,534 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-05 15:50:14,535 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-05 15:50:14,536 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-05 15:50:14,540 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-05-05 15:50:14,540 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-05-05 15:50:14,541 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-05-05 15:50:14,542 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-05-05 15:50:14,544 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-05-05 15:50:14,546 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-05-05 15:50:14,610 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-05 15:50:14,692 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-05 15:50:14,693 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-05 15:50:14,695 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-05 15:50:14,697 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-05 15:50:14,698 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-05 15:50:14,700 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-05 15:50:14,703 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-05 15:50:14,703 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-05 15:50:14,713 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-05 15:50:14,736 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-05 15:50:14,943 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-05-05 15:50:15,275 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-05-05 15:50:15,298 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-05-05 15:50:15,405 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=7
2020-05-05 15:50:15,540 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-05-05 15:50:15,541 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-05-05 15:50:15,566 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-05-05 15:50:15,822 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-05-05 15:50:15,823 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-05-05 15:50:15,852 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-05 15:50:16,141 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-05 15:50:16,142 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-05 15:50:16,223 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-05 15:50:16,234 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-05 15:50:16,235 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-05 15:50:16,236 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-05 15:50:16,504 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-05 15:50:16,506 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-05 15:50:16,634 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-05 15:50:16,635 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-05 15:50:16,765 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s299ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-05-05 15:50:21,456 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-05-05 15:50:21,472 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-05-05 15:50:21,472 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-05-05 15:50:21,472 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-05-05 15:50:21,472 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-05-05 15:50:21,511 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-05 15:50:21,511 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-05 15:50:21,511 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-05 15:50:21,511 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-05 15:50:21,542 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-05-05 15:50:21,542 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-05-05 15:50:21,620 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-05 15:50:21,683 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-05-05 15:50:21,979 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-05-05 15:50:21,979 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-05 15:50:21,979 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-05 15:50:21,979 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-05 15:50:21,979 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-05 15:50:21,979 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-05 15:50:21,995 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-05 15:50:21,995 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-05 15:50:21,995 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-05 15:50:21,995 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-05 15:50:22,011 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-05 15:50:22,042 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-05-05 15:50:22,042 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-05-05 15:50:22,042 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-05-05 15:50:22,042 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-05-05 15:50:22,042 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-05-05 15:50:22,042 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-05-05 15:50:22,042 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-05-05 15:50:22,042 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-05-05 15:50:22,042 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-05-05 15:50:22,058 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-05-05 15:50:22,073 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-05-05 15:50:22,089 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-05-05 15:50:22,104 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-05-05 15:50:22,136 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-05-05 15:50:22,151 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-05-05 15:50:22,198 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-05-05 15:50:22,214 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-05-05 15:50:22,245 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-05-05 15:50:22,292 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-05-05 15:50:22,323 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-05-05 15:50:22,339 [main] INFO  (Database#info():2846) - }
2020-05-05 15:50:22,339 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-05-05 15:50:22,339 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-05-05 15:50:22,386 [main] INFO  (Database#info():2846) - }
2020-05-05 15:50:22,386 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-05-05 15:50:22,432 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-05 15:50:22,433 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-05-05 15:50:22,435 [main] INFO  (Database#info():2846) -     parse('cart');
2020-05-05 15:50:22,912 [main] INFO  (Database#info():2846) -     parse('orders');
2020-05-05 15:50:23,035 [main] INFO  (Database#info():2846) -     parse('product');
2020-05-05 15:50:23,235 [main] INFO  (Database#info():2846) -     parse('stock');
2020-05-05 15:50:23,438 [main] INFO  (Database#info():2846) -     parse('user');
2020-05-05 15:50:23,636 [main] INFO  (Database#info():2846) - }
2020-05-05 15:50:23,636 [main] INFO  (Database#info():2846) -  
2020-05-05 15:50:23,961 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-05 15:50:23,964 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-05 15:50:23,976 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-05 15:50:24,002 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s547ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-05-05 15:50:26,289 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-05 15:50:26,289 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-05 15:50:26,289 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-05 15:50:26,289 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-05 15:50:26,289 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-05 15:50:26,320 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-05 15:50:26,320 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-05 15:50:26,320 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-05 15:50:26,320 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-05 15:50:26,383 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-05 15:50:26,406 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-05 15:50:26,686 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-05 15:50:26,686 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-05 15:50:26,733 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-05 15:50:26,780 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-05 15:50:26,780 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-05 15:50:26,780 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-05 15:50:26,811 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-05 15:50:26,826 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-05-05 15:50:26,826 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-05 15:50:26,905 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s647ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql

   o: OK (2)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-05 15:50:28,415 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-05-05 15:50:28,420 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-05-05 15:50:28,421 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-05-05 15:50:28,422 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-05-05 15:50:28,423 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-05-05 15:50:28,458 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-05 15:50:28,458 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-05 15:50:28,458 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-05 15:50:28,458 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-05 15:50:28,473 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-05-05 15:50:28,473 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-05-05 15:50:28,499 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-05 15:50:28,593 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-05 15:50:28,593 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-05 15:50:28,843 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-05 15:50:28,858 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-05 15:50:28,858 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-05 15:50:28,952 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-05 15:50:28,952 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-05 15:50:28,952 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-05 15:50:28,968 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-05 15:50:28,983 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-05-05 15:50:28,999 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-05-05 15:50:28,999 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-05-05 15:50:29,015 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-05 15:50:29,030 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-05 15:50:29,030 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-05 15:50:29,030 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-05 15:50:29,077 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-05-05 15:50:29,077 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-05 15:50:29,077 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-05-05 15:50:29,077 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-05-05 15:50:29,139 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-05-05 15:50:29,139 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-05-05 15:50:29,139 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-05-05 15:50:29,139 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-05-05 15:50:29,139 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-05-05 15:50:29,155 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
CartInProductDitails
  cart_id INT(11) related to cart.cart_id
  cart_num INT(11) related to cart.cart_num
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image

ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-05-05 15:50:29,186 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-05-05 15:50:29,186 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-05-05 15:50:29,186 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-05-05 15:50:29,186 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
CartInProductDitailsPmb (typed to list, entity)
  Integer UserId
  Integer ProductId

ProductRelationPmb (typed to list, entity)
  Integer ProductId
2020-05-05 15:50:29,202 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-05-05 15:50:29,515 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-05 15:50:29,515 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-05 15:50:29,531 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-05-05 15:50:29,531 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-05-05 15:50:29,546 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-05 15:50:29,546 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-05-05 15:50:29,645 [main] INFO  (Database#info():2846) -     parse('CartInProductDitails')
2020-05-05 15:50:29,688 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-05-05 15:50:29,688 [main] INFO  (Database#info():2846) - }
2020-05-05 15:50:29,688 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-05-05 15:50:29,750 [main] INFO  (Database#info():2846) -     parse('CartInProductDitailsPmb');
2020-05-05 15:50:29,797 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-05-05 15:50:29,813 [main] INFO  (Database#info():2846) - }
2020-05-05 15:50:29,891 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 2

  CartBhv_selectCartInProductDitails.sql
  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-05-05 15:50:29,915 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-05 15:50:29,915 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-05 15:50:29,915 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-05 15:50:29,915 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-05 15:50:30,024 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s619ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-05-06 15:28:18,771 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-05-06 15:28:18,771 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-05-06 15:28:18,771 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-05-06 15:28:18,771 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-05-06 15:28:18,771 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-05-06 15:28:18,818 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 15:28:18,818 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 15:28:18,818 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 15:28:18,818 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 15:28:18,943 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-05-06 15:28:18,943 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-05-06 15:28:18,943 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-05-06 15:28:18,990 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-06 15:28:19,115 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-05-06 15:28:19,130 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 15:28:19,927 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 15:28:19,927 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 15:28:19,927 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-05-06 15:28:19,927 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-05-06 15:28:19,943 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-05-06 15:28:19,943 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-05-06 15:28:19,974 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-05-06 15:28:19,974 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-05-06 15:28:19,990 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-05-06 15:28:20,006 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-05-06 15:28:20,006 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-06 15:28:20,006 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-05-06 15:28:20,006 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-05-06 15:28:20,068 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-05-06 15:28:20,068 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-05-06 15:28:20,084 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-05-06 15:28:20,099 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-05-06 15:28:20,115 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-05-06 15:28:20,115 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-05-06 15:28:20,115 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-05-06 15:28:20,131 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-05-06 15:28:20,131 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-05-06 15:28:20,131 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-05-06 15:28:20,146 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-05-06 15:28:20,146 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-05-06 15:28:20,146 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-05-06 15:28:20,193 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-05-06 15:28:20,193 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-06 15:28:20,271 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1555) -  -> different from previous (schema diff)
2020-05-06 15:28:20,271 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1557) - ...Serializing schema-diff:
2020-05-06 15:28:20,271 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1558) -   filePath = ./schema/project-history-dfclient.diffmap
2020-05-06 15:28:20,287 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 15:28:20,397 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s657ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-05-06 15:28:22,037 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-05-06 15:28:22,053 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-05-06 15:28:22,053 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-05-06 15:28:22,053 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-05-06 15:28:22,053 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-05-06 15:28:22,100 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 15:28:22,100 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 15:28:22,100 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 15:28:22,100 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 15:28:22,100 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-05-06 15:28:22,100 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-05-06 15:28:22,100 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-05-06 15:28:22,100 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-05-06 15:28:22,100 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-05-06 15:28:22,100 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-05-06 15:28:22,194 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-06 15:28:22,288 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-06 15:28:22,288 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-06 15:28:22,303 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-06 15:28:22,303 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-06 15:28:22,303 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-06 15:28:22,303 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-06 15:28:22,319 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-06 15:28:22,319 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-06 15:28:22,350 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-06 15:28:22,397 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-06 15:28:22,553 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-05-06 15:28:22,803 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-05-06 15:28:22,835 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-05-06 15:28:22,897 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=8
2020-05-06 15:28:23,006 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-05-06 15:28:23,006 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-05-06 15:28:23,038 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-05-06 15:28:23,210 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-05-06 15:28:23,225 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-05-06 15:28:23,256 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 15:28:23,554 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 15:28:23,554 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 15:28:23,616 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-06 15:28:23,616 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-06 15:28:23,616 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-06 15:28:23,616 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-06 15:28:23,757 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-06 15:28:23,757 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-06 15:28:23,897 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-06 15:28:23,897 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 15:28:23,991 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s954ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-05-06 15:28:28,711 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-05-06 15:28:28,711 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-05-06 15:28:28,711 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-05-06 15:28:28,711 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-05-06 15:28:28,711 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-05-06 15:28:28,758 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 15:28:28,758 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 15:28:28,758 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 15:28:28,758 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 15:28:28,790 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-05-06 15:28:28,790 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-05-06 15:28:28,868 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-06 15:28:28,930 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-05-06 15:28:29,227 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-05-06 15:28:29,243 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-06 15:28:29,243 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-06 15:28:29,243 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-06 15:28:29,243 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-06 15:28:29,243 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-06 15:28:29,258 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-06 15:28:29,258 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-06 15:28:29,258 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-06 15:28:29,258 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-06 15:28:29,274 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-06 15:28:29,290 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-05-06 15:28:29,290 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-05-06 15:28:29,290 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-05-06 15:28:29,290 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-05-06 15:28:29,290 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-05-06 15:28:29,290 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-05-06 15:28:29,290 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-05-06 15:28:29,290 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-05-06 15:28:29,306 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-05-06 15:28:29,306 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-05-06 15:28:29,337 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-05-06 15:28:29,337 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-05-06 15:28:29,368 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-05-06 15:28:29,384 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-05-06 15:28:29,399 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-05-06 15:28:29,431 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-05-06 15:28:29,446 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-05-06 15:28:29,462 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-05-06 15:28:29,493 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-05-06 15:28:29,509 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-05-06 15:28:29,524 [main] INFO  (Database#info():2846) - }
2020-05-06 15:28:29,524 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-05-06 15:28:29,524 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-05-06 15:28:29,556 [main] INFO  (Database#info():2846) - }
2020-05-06 15:28:29,571 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-05-06 15:28:29,602 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-06 15:28:29,602 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-05-06 15:28:29,618 [main] INFO  (Database#info():2846) -     parse('cart');
2020-05-06 15:28:29,946 [main] INFO  (Database#info():2846) -     parse('orders');
2020-05-06 15:28:30,071 [main] INFO  (Database#info():2846) -     parse('product');
2020-05-06 15:28:30,236 [main] INFO  (Database#info():2846) -     parse('stock');
2020-05-06 15:28:30,510 [main] INFO  (Database#info():2846) -     parse('user');
2020-05-06 15:28:30,858 [main] INFO  (Database#info():2846) - }
2020-05-06 15:28:30,861 [main] INFO  (Database#info():2846) -  
2020-05-06 15:28:31,145 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-06 15:28:31,147 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-06 15:28:31,157 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-06 15:28:31,206 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s496ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-05-06 15:28:37,021 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-06 15:28:37,036 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-06 15:28:37,036 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-06 15:28:37,036 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-06 15:28:37,036 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-06 15:28:37,114 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 15:28:37,114 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 15:28:37,114 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 15:28:37,114 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 15:28:37,224 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-06 15:28:37,239 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 15:28:37,599 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 15:28:37,615 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 15:28:37,709 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-06 15:28:37,740 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-06 15:28:37,740 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-06 15:28:37,755 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-06 15:28:37,802 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-06 15:28:37,802 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-05-06 15:28:37,818 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 15:28:37,896 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s906ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql

   o: OK (2)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-06 15:28:39,459 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-05-06 15:28:39,459 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-05-06 15:28:39,459 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-05-06 15:28:39,459 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-05-06 15:28:39,459 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-05-06 15:28:39,491 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 15:28:39,491 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 15:28:39,506 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 15:28:39,506 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 15:28:39,522 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-05-06 15:28:39,522 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-05-06 15:28:39,538 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-06 15:28:39,631 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-06 15:28:39,631 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 15:28:39,897 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 15:28:39,897 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 15:28:39,897 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-06 15:28:39,991 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-06 15:28:39,991 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-06 15:28:39,991 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_num
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-06 15:28:40,022 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-06 15:28:40,022 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-05-06 15:28:40,022 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-05-06 15:28:40,037 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-05-06 15:28:40,053 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-06 15:28:40,069 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-06 15:28:40,069 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-06 15:28:40,069 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-06 15:28:40,115 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-05-06 15:28:40,115 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-06 15:28:40,115 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-05-06 15:28:40,115 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-05-06 15:28:40,178 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-05-06 15:28:40,178 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-05-06 15:28:40,178 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-05-06 15:28:40,178 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-05-06 15:28:40,178 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-05-06 15:28:40,194 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
CartInProductDitails
  cart_id INT(11) related to cart.cart_id
  cart_num INT(11) related to cart.cart_num
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image

ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_num INT(11) related to stock.stock_num
2020-05-06 15:28:40,225 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-05-06 15:28:40,225 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-05-06 15:28:40,225 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-05-06 15:28:40,225 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
CartInProductDitailsPmb (typed to list, entity)
  Integer UserId
  Integer ProductId

ProductRelationPmb (typed to list, entity)
  Integer ProductId
2020-05-06 15:28:40,240 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-05-06 15:28:40,491 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-06 15:28:40,507 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-06 15:28:40,507 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-05-06 15:28:40,507 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-05-06 15:28:40,538 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-06 15:28:40,538 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-05-06 15:28:40,632 [main] INFO  (Database#info():2846) -     parse('CartInProductDitails')
2020-05-06 15:28:40,678 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-05-06 15:28:40,678 [main] INFO  (Database#info():2846) - }
2020-05-06 15:28:40,694 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-05-06 15:28:40,694 [main] INFO  (Database#info():2846) -     parse('CartInProductDitailsPmb');
2020-05-06 15:28:40,741 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-05-06 15:28:40,757 [main] INFO  (Database#info():2846) - }
2020-05-06 15:28:40,819 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 2

  CartBhv_selectCartInProductDitails.sql
  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-05-06 15:28:40,835 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-06 15:28:40,835 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-06 15:28:40,850 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-06 15:28:40,850 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 15:28:40,944 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s500ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-05-06 16:00:19,516 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-05-06 16:00:19,531 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-05-06 16:00:19,531 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-05-06 16:00:19,531 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-05-06 16:00:19,531 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-05-06 16:00:19,563 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 16:00:19,563 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 16:00:19,563 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 16:00:19,563 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 16:00:19,641 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-05-06 16:00:19,641 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-05-06 16:00:19,641 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-05-06 16:00:19,656 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-06 16:00:19,750 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-05-06 16:00:19,781 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 16:00:20,532 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 16:00:20,532 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 16:00:20,532 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-05-06 16:00:20,532 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-05-06 16:00:20,532 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-05-06 16:00:20,532 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-05-06 16:00:20,563 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-05-06 16:00:20,563 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-05-06 16:00:20,579 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-05-06 16:00:20,594 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-05-06 16:00:20,594 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-06 16:00:20,594 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-05-06 16:00:20,594 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-05-06 16:00:20,641 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-05-06 16:00:20,657 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-05-06 16:00:20,672 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-05-06 16:00:20,672 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-05-06 16:00:20,688 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-05-06 16:00:20,688 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-05-06 16:00:20,688 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-05-06 16:00:20,688 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-05-06 16:00:20,688 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-05-06 16:00:20,704 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-05-06 16:00:20,704 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-05-06 16:00:20,704 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-05-06 16:00:20,704 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-05-06 16:00:20,719 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-05-06 16:00:20,735 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-06 16:00:20,797 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-05-06 16:00:20,797 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 16:00:20,891 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s391ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-05-06 16:00:22,517 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-05-06 16:00:22,517 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-05-06 16:00:22,517 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-05-06 16:00:22,517 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-05-06 16:00:22,517 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-05-06 16:00:22,548 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 16:00:22,548 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 16:00:22,548 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 16:00:22,548 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 16:00:22,564 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-05-06 16:00:22,564 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-05-06 16:00:22,564 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-05-06 16:00:22,564 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-05-06 16:00:22,564 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-05-06 16:00:22,564 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-05-06 16:00:22,610 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-06 16:00:22,689 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-06 16:00:22,689 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-06 16:00:22,689 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-06 16:00:22,704 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-06 16:00:22,704 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-06 16:00:22,704 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-06 16:00:22,704 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-06 16:00:22,704 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-06 16:00:22,704 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-06 16:00:22,720 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-06 16:00:22,814 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-05-06 16:00:23,017 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-05-06 16:00:23,032 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-05-06 16:00:23,079 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=8
2020-05-06 16:00:23,126 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-05-06 16:00:23,142 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-05-06 16:00:23,173 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-05-06 16:00:23,313 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-05-06 16:00:23,313 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-05-06 16:00:23,329 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 16:00:23,579 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 16:00:23,579 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 16:00:23,611 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-06 16:00:23,626 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-06 16:00:23,626 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-06 16:00:23,626 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-06 16:00:23,673 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-06 16:00:23,689 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-06 16:00:23,704 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-06 16:00:23,704 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 16:00:23,783 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s298ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-05-06 16:00:28,972 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-05-06 16:00:28,972 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-05-06 16:00:28,972 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-05-06 16:00:28,972 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-05-06 16:00:28,972 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-05-06 16:00:29,004 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 16:00:29,004 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 16:00:29,004 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 16:00:29,004 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 16:00:29,035 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-05-06 16:00:29,035 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-05-06 16:00:29,113 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-06 16:00:29,176 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-05-06 16:00:29,410 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-05-06 16:00:29,425 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-06 16:00:29,425 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-06 16:00:29,425 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-06 16:00:29,425 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-06 16:00:29,425 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-06 16:00:29,425 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-06 16:00:29,425 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-06 16:00:29,425 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-06 16:00:29,441 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-06 16:00:29,457 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-06 16:00:29,457 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-05-06 16:00:29,457 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-05-06 16:00:29,457 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-05-06 16:00:29,469 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-05-06 16:00:29,471 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-05-06 16:00:29,472 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-05-06 16:00:29,475 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-05-06 16:00:29,476 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-05-06 16:00:29,477 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-05-06 16:00:29,478 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-05-06 16:00:29,493 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-05-06 16:00:29,493 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-05-06 16:00:29,493 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-05-06 16:00:29,509 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-05-06 16:00:29,525 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-05-06 16:00:29,540 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-05-06 16:00:29,540 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-05-06 16:00:29,556 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-05-06 16:00:29,556 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-05-06 16:00:29,556 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-05-06 16:00:29,572 [main] INFO  (Database#info():2846) - }
2020-05-06 16:00:29,572 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-05-06 16:00:29,572 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-05-06 16:00:29,603 [main] INFO  (Database#info():2846) - }
2020-05-06 16:00:29,603 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-05-06 16:00:29,634 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-06 16:00:29,634 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-05-06 16:00:29,650 [main] INFO  (Database#info():2846) -     parse('cart');
2020-05-06 16:00:29,837 [main] INFO  (Database#info():2846) -     parse('orders');
2020-05-06 16:00:29,946 [main] INFO  (Database#info():2846) -     parse('product');
2020-05-06 16:00:30,103 [main] INFO  (Database#info():2846) -     parse('stock');
2020-05-06 16:00:30,351 [main] INFO  (Database#info():2846) -     parse('user');
2020-05-06 16:00:30,486 [main] INFO  (Database#info():2846) - }
2020-05-06 16:00:30,487 [main] INFO  (Database#info():2846) -  
2020-05-06 16:00:30,599 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-06 16:00:30,604 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-06 16:00:30,613 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-06 16:00:30,633 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s673ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-05-06 16:00:33,085 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-06 16:00:33,085 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-06 16:00:33,085 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-06 16:00:33,085 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-06 16:00:33,085 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-06 16:00:33,116 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 16:00:33,116 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 16:00:33,132 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 16:00:33,132 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 16:00:33,194 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-06 16:00:33,194 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 16:00:33,460 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 16:00:33,460 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 16:00:33,506 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-06 16:00:33,538 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-06 16:00:33,538 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-06 16:00:33,538 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-06 16:00:33,569 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-06 16:00:33,569 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-05-06 16:00:33,569 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 16:00:33,647 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s577ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql

   o: OK (2)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-06 16:00:35,100 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-05-06 16:00:35,100 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-05-06 16:00:35,100 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-05-06 16:00:35,100 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-05-06 16:00:35,100 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-05-06 16:00:35,132 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 16:00:35,132 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 16:00:35,132 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 16:00:35,132 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 16:00:35,163 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-05-06 16:00:35,163 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-05-06 16:00:35,179 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-06 16:00:35,257 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-06 16:00:35,272 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 16:00:35,523 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 16:00:35,523 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 16:00:35,523 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-06 16:00:35,616 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-06 16:00:35,616 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-06 16:00:35,616 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-06 16:00:35,648 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-06 16:00:35,648 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=0 (in 2 files)
2020-05-06 16:00:35,648 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-05-06 16:00:35,648 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-05-06 16:00:35,679 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-06 16:00:35,679 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-06 16:00:35,694 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-06 16:00:35,694 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-06 16:00:35,726 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-05-06 16:00:35,726 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-06 16:00:35,726 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-05-06 16:00:35,726 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-05-06 16:00:35,804 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-05-06 16:00:35,804 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-05-06 16:00:35,804 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-05-06 16:00:35,804 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-05-06 16:00:35,804 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-05-06 16:00:35,819 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
CartInProductDitails
  cart_id INT(11) related to cart.cart_id
  cart_num INT(11) related to cart.cart_num
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image

ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_id INT(11) related to stock.stock_id
  stock_num INT(11) related to stock.stock_num
  temporary_sales INT(11) related to stock.temporary_sales
2020-05-06 16:00:35,851 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-05-06 16:00:35,851 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-05-06 16:00:35,851 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-05-06 16:00:35,851 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
CartInProductDitailsPmb (typed to list, entity)
  Integer UserId
  Integer ProductId

ProductRelationPmb (typed to list, entity)
  Integer ProductId
2020-05-06 16:00:35,866 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-05-06 16:00:36,101 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-06 16:00:36,116 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-06 16:00:36,116 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-05-06 16:00:36,116 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-05-06 16:00:36,132 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-06 16:00:36,132 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-05-06 16:00:36,226 [main] INFO  (Database#info():2846) -     parse('CartInProductDitails')
2020-05-06 16:00:36,288 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-05-06 16:00:36,288 [main] INFO  (Database#info():2846) - }
2020-05-06 16:00:36,288 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-05-06 16:00:36,288 [main] INFO  (Database#info():2846) -     parse('CartInProductDitailsPmb');
2020-05-06 16:00:36,319 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-05-06 16:00:36,335 [main] INFO  (Database#info():2846) - }
2020-05-06 16:00:36,397 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 2

  CartBhv_selectCartInProductDitails.sql
  ProductBhv_selectProductRelation.sql
- - - - - - - - - -/
2020-05-06 16:00:36,413 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-06 16:00:36,413 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-06 16:00:36,429 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-06 16:00:36,429 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 16:00:36,507 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s438ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-05-06 21:06:42,168 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-06 21:06:42,174 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-06 21:06:42,174 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-06 21:06:42,175 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-06 21:06:42,176 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-06 21:06:42,223 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 21:06:42,223 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 21:06:42,224 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 21:06:42,225 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 21:06:42,296 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-06 21:06:42,328 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 21:06:43,098 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 21:06:43,099 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 21:06:43,163 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image, sum(c.cart_num * p.price)
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-06 21:06:43,249 [main] WARN  (DfSqlFileRunnerExecute#showContinueWarnLog():110) - *Failure: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
/nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column 'web.c.cart_id'; this is incompatible with sql_mode=only_full_group_by
(SQLState=42000 ErrorCode=1140)
nnnnnnnnnnnnnnnnnnnn/
2020-05-06 21:06:43,263 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=0 failure=1

2020-05-06 21:06:43,267 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-06 21:06:43,270 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-06 21:06:43,329 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-06 21:06:43,329 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=1 (in 2 files)
2020-05-06 21:06:43,344 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'OutsideSqlTest'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.7.29-0ubuntu0.18.04.1

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.DfOutsideSqlTestFailureFoundException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Found the failure SQL by the OutsideSqlTest.

[Advice]
You can see the exception info
after each SQL logging like this:

  ...Firing [SQL-file]
  SQL: [SQL-string]
  *Failure: [SQLException-class]
  /nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn...
  [SQLException-message]
  [SQLState-info]
  nnnnnnnnnn/

* * * * * * * * * */
	at org.dbflute.task.DfOutsideSqlTestTask.throwOutsideSqlTestFailureFoundException(DfOutsideSqlTestTask.java:335)
	at org.dbflute.task.DfOutsideSqlTestTask.handleSqlFileFailure(DfOutsideSqlTestTask.java:314)
	at org.dbflute.task.DfOutsideSqlTestTask.doExecute(DfOutsideSqlTestTask.java:103)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2020-05-06 21:06:43,391 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 21:06:43,469 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s321ms *Abort

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  x CartBhv_selectCartInProductDitails.sql
   -> In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column 'web.c.cart_id'; this is incompatible with sql_mode=only_full_group_by
  o ProductBhv_selectProductRelation.sql

   o: OK (1)
   x: Failure exists (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-06 21:08:17,643 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-06 21:08:17,648 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-06 21:08:17,649 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-06 21:08:17,650 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-06 21:08:17,651 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-06 21:08:17,687 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 21:08:17,689 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 21:08:17,689 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 21:08:17,690 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 21:08:17,760 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-06 21:08:17,789 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 21:08:18,495 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 21:08:18,495 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 21:08:18,553 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image, sum(c.cart_num * p.price) as total_price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-06 21:08:18,616 [main] WARN  (DfSqlFileRunnerExecute#showContinueWarnLog():110) - *Failure: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
/nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column 'web.c.cart_id'; this is incompatible with sql_mode=only_full_group_by
(SQLState=42000 ErrorCode=1140)
nnnnnnnnnnnnnnnnnnnn/
2020-05-06 21:08:18,631 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=0 failure=1

2020-05-06 21:08:18,634 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-06 21:08:18,637 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-06 21:08:18,674 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-06 21:08:18,676 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=1 (in 2 files)
2020-05-06 21:08:18,686 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'OutsideSqlTest'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.7.29-0ubuntu0.18.04.1

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.DfOutsideSqlTestFailureFoundException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Found the failure SQL by the OutsideSqlTest.

[Advice]
You can see the exception info
after each SQL logging like this:

  ...Firing [SQL-file]
  SQL: [SQL-string]
  *Failure: [SQLException-class]
  /nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn...
  [SQLException-message]
  [SQLState-info]
  nnnnnnnnnn/

* * * * * * * * * */
	at org.dbflute.task.DfOutsideSqlTestTask.throwOutsideSqlTestFailureFoundException(DfOutsideSqlTestTask.java:335)
	at org.dbflute.task.DfOutsideSqlTestTask.handleSqlFileFailure(DfOutsideSqlTestTask.java:314)
	at org.dbflute.task.DfOutsideSqlTestTask.doExecute(DfOutsideSqlTestTask.java:103)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2020-05-06 21:08:18,768 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 21:08:18,861 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s239ms *Abort

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  x CartBhv_selectCartInProductDitails.sql
   -> In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column 'web.c.cart_id'; this is incompatible with sql_mode=only_full_group_by
  o ProductBhv_selectProductRelation.sql

   o: OK (1)
   x: Failure exists (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-06 21:11:03,156 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-06 21:11:03,161 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-06 21:11:03,162 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-06 21:11:03,163 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-06 21:11:03,163 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-06 21:11:03,199 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 21:11:03,200 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 21:11:03,201 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 21:11:03,202 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 21:11:03,268 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-06 21:11:03,295 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 21:11:03,990 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 21:11:03,991 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 21:11:04,046 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image, sum(c.cart_num * p.price) as total_price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
2020-05-06 21:11:04,112 [main] WARN  (DfSqlFileRunnerExecute#showContinueWarnLog():110) - *Failure: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
/nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column 'web.c.cart_id'; this is incompatible with sql_mode=only_full_group_by
(SQLState=42000 ErrorCode=1140)
nnnnnnnnnnnnnnnnnnnn/
2020-05-06 21:11:04,127 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=0 failure=1

2020-05-06 21:11:04,130 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-06 21:11:04,133 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-06 21:11:04,172 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-06 21:11:04,175 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=1 (in 2 files)
2020-05-06 21:11:04,182 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'OutsideSqlTest'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.7.29-0ubuntu0.18.04.1

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.DfOutsideSqlTestFailureFoundException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Found the failure SQL by the OutsideSqlTest.

[Advice]
You can see the exception info
after each SQL logging like this:

  ...Firing [SQL-file]
  SQL: [SQL-string]
  *Failure: [SQLException-class]
  /nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn...
  [SQLException-message]
  [SQLState-info]
  nnnnnnnnnn/

* * * * * * * * * */
	at org.dbflute.task.DfOutsideSqlTestTask.throwOutsideSqlTestFailureFoundException(DfOutsideSqlTestTask.java:335)
	at org.dbflute.task.DfOutsideSqlTestTask.handleSqlFileFailure(DfOutsideSqlTestTask.java:314)
	at org.dbflute.task.DfOutsideSqlTestTask.doExecute(DfOutsideSqlTestTask.java:103)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2020-05-06 21:11:04,257 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 21:11:04,327 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s185ms *Abort

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  x CartBhv_selectCartInProductDitails.sql
   -> In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column 'web.c.cart_id'; this is incompatible with sql_mode=only_full_group_by
  o ProductBhv_selectProductRelation.sql

   o: OK (1)
   x: Failure exists (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-06 21:34:50,645 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-06 21:34:50,652 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-06 21:34:50,653 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-06 21:34:50,654 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-06 21:34:50,655 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-06 21:34:50,705 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 21:34:50,706 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 21:34:50,707 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 21:34:50,707 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 21:34:50,802 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-06 21:34:50,835 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 21:34:51,585 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 21:34:51,586 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 21:34:51,650 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-06 21:34:51,697 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-06 21:34:51,699 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-06 21:34:51,705 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-06 21:34:51,740 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-06 21:34:51,742 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: StockBhv_selectCartInTotalPrice.sql
2020-05-06 21:34:51,746 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInTotalPrice

 [df:description]
  カートにある全ての商品の合計金額を取得

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select sum(c.cart_num * p.price) as total_price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
2020-05-06 21:34:51,865 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-06 21:34:51,868 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=3, failure=0 (in 3 files)
2020-05-06 21:34:51,868 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 21:34:51,985 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s363ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql
  o StockBhv_selectCartInTotalPrice.sql

   o: OK (3)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-06 21:36:12,271 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-05-06 21:36:12,271 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-05-06 21:36:12,271 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-05-06 21:36:12,271 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-05-06 21:36:12,271 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-05-06 21:36:12,318 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 21:36:12,318 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 21:36:12,318 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 21:36:12,318 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 21:36:12,514 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-05-06 21:36:12,515 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-05-06 21:36:12,516 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-05-06 21:36:12,567 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-06 21:36:12,693 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-05-06 21:36:12,716 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 21:36:13,428 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 21:36:13,428 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 21:36:13,428 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-05-06 21:36:13,428 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-05-06 21:36:13,428 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-05-06 21:36:13,428 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-05-06 21:36:13,544 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-05-06 21:36:13,562 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-05-06 21:36:13,576 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-05-06 21:36:13,589 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-05-06 21:36:13,590 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-06 21:36:13,594 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-05-06 21:36:13,595 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-05-06 21:36:13,669 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-05-06 21:36:13,682 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-05-06 21:36:13,698 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-05-06 21:36:13,709 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-05-06 21:36:13,721 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-05-06 21:36:13,722 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-05-06 21:36:13,726 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-05-06 21:36:13,727 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-05-06 21:36:13,731 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-05-06 21:36:13,733 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-05-06 21:36:13,742 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-05-06 21:36:13,742 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-05-06 21:36:13,743 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-05-06 21:36:13,780 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-05-06 21:36:13,785 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-06 21:36:13,866 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-05-06 21:36:13,867 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 21:36:13,996 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s756ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-05-06 21:36:15,776 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-05-06 21:36:15,780 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-05-06 21:36:15,781 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-05-06 21:36:15,782 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-05-06 21:36:15,783 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-05-06 21:36:15,820 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 21:36:15,821 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 21:36:15,822 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 21:36:15,822 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 21:36:15,827 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-05-06 21:36:15,827 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-05-06 21:36:15,829 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-05-06 21:36:15,831 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-05-06 21:36:15,831 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-05-06 21:36:15,835 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-05-06 21:36:15,912 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-06 21:36:16,004 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-06 21:36:16,005 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-06 21:36:16,008 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-06 21:36:16,011 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-06 21:36:16,011 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-06 21:36:16,014 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-06 21:36:16,023 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-06 21:36:16,024 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-06 21:36:16,055 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-06 21:36:16,094 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-06 21:36:16,228 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-05-06 21:36:16,539 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-05-06 21:36:16,567 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-05-06 21:36:16,646 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=8
2020-05-06 21:36:16,897 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-05-06 21:36:16,899 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-05-06 21:36:16,927 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-05-06 21:36:17,228 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-05-06 21:36:17,228 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-05-06 21:36:17,259 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 21:36:17,564 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 21:36:17,565 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 21:36:17,625 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-06 21:36:17,634 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-06 21:36:17,636 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-06 21:36:17,637 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-06 21:36:17,811 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-06 21:36:17,813 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-06 21:36:17,934 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-06 21:36:17,935 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 21:36:18,042 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s295ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-05-06 21:36:26,910 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-05-06 21:36:26,915 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-05-06 21:36:26,915 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-05-06 21:36:26,917 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-05-06 21:36:26,918 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-05-06 21:36:26,955 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 21:36:26,956 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 21:36:26,958 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 21:36:26,959 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 21:36:26,994 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-05-06 21:36:26,995 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-05-06 21:36:27,080 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-06 21:36:27,147 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-05-06 21:36:27,689 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-05-06 21:36:27,698 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-06 21:36:27,699 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-06 21:36:27,702 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-06 21:36:27,705 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-06 21:36:27,706 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-06 21:36:27,709 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-06 21:36:27,713 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-06 21:36:27,714 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-06 21:36:27,747 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-06 21:36:27,804 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-06 21:36:27,894 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-05-06 21:36:27,895 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-05-06 21:36:27,896 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-05-06 21:36:27,897 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-05-06 21:36:27,898 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-05-06 21:36:27,899 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-05-06 21:36:27,900 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-05-06 21:36:27,901 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-05-06 21:36:27,902 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-05-06 21:36:27,903 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-05-06 21:36:28,091 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-05-06 21:36:28,094 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-05-06 21:36:28,110 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-05-06 21:36:28,146 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-05-06 21:36:28,165 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-05-06 21:36:28,213 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-05-06 21:36:28,236 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-05-06 21:36:28,264 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-05-06 21:36:28,314 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-05-06 21:36:28,338 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-05-06 21:36:28,354 [main] INFO  (Database#info():2846) - }
2020-05-06 21:36:28,354 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-05-06 21:36:28,354 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-05-06 21:36:28,401 [main] INFO  (Database#info():2846) - }
2020-05-06 21:36:28,401 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-05-06 21:36:28,492 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-06 21:36:28,493 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-05-06 21:36:28,494 [main] INFO  (Database#info():2846) -     parse('cart');
2020-05-06 21:36:29,106 [main] INFO  (Database#info():2846) -     parse('orders');
2020-05-06 21:36:29,242 [main] INFO  (Database#info():2846) -     parse('product');
2020-05-06 21:36:29,395 [main] INFO  (Database#info():2846) -     parse('stock');
2020-05-06 21:36:29,586 [main] INFO  (Database#info():2846) -     parse('user');
2020-05-06 21:36:29,901 [main] INFO  (Database#info():2846) - }
2020-05-06 21:36:29,908 [main] INFO  (Database#info():2846) -  
2020-05-06 21:36:30,163 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-06 21:36:30,171 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-06 21:36:30,177 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-06 21:36:30,189 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s300ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-05-06 21:36:33,424 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-06 21:36:33,428 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-06 21:36:33,428 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-06 21:36:33,429 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-06 21:36:33,430 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-06 21:36:33,448 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 21:36:33,464 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 21:36:33,464 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 21:36:33,464 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 21:36:33,527 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-06 21:36:33,541 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 21:36:33,844 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 21:36:33,845 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 21:36:33,945 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-06 21:36:33,985 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-06 21:36:33,987 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-06 21:36:33,989 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-06 21:36:34,046 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-06 21:36:34,049 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: StockBhv_selectCartInTotalPrice.sql
2020-05-06 21:36:34,052 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInTotalPrice

 [df:description]
  カートにある全ての商品の合計金額を取得

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select sum(c.cart_num * p.price) as total_price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
2020-05-06 21:36:34,075 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-06 21:36:34,077 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=3, failure=0 (in 3 files)
2020-05-06 21:36:34,080 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 21:36:34,250 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s845ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql
  o StockBhv_selectCartInTotalPrice.sql

   o: OK (3)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-06 21:36:36,122 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-05-06 21:36:36,126 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-05-06 21:36:36,126 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-05-06 21:36:36,127 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-05-06 21:36:36,128 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-05-06 21:36:36,161 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-06 21:36:36,162 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-06 21:36:36,163 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-06 21:36:36,164 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-06 21:36:36,191 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-05-06 21:36:36,192 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-05-06 21:36:36,256 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-06 21:36:36,362 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-06 21:36:36,375 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-06 21:36:36,669 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-06 21:36:36,669 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-06 21:36:36,675 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-06 21:36:36,820 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-06 21:36:36,821 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-06 21:36:36,823 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-06 21:36:36,865 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-06 21:36:36,866 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: StockBhv_selectCartInTotalPrice.sql
2020-05-06 21:36:36,868 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInTotalPrice

 [df:description]
  カートにある全ての商品の合計金額を取得

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select sum(c.cart_num * p.price) as total_price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
2020-05-06 21:36:36,895 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-06 21:36:36,896 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=3, failure=0 (in 3 files)
2020-05-06 21:36:36,903 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-05-06 21:36:36,903 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-05-06 21:36:36,929 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-06 21:36:36,937 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-06 21:36:36,938 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-06 21:36:36,939 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-06 21:36:37,004 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-05-06 21:36:37,005 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-06 21:36:37,006 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-05-06 21:36:37,007 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-05-06 21:36:37,081 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-05-06 21:36:37,082 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-05-06 21:36:37,082 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-05-06 21:36:37,083 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-05-06 21:36:37,084 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-05-06 21:36:37,128 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
CartInProductDitails
  cart_id INT(11) related to cart.cart_id
  cart_num INT(11) related to cart.cart_num
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image

ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_id INT(11) related to stock.stock_id
  stock_num INT(11) related to stock.stock_num
  temporary_sales INT(11) related to stock.temporary_sales

CartInTotalPrice
  total_price DOUBLE(18)
2020-05-06 21:36:37,157 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-05-06 21:36:37,159 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-05-06 21:36:37,160 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-05-06 21:36:37,165 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
CartInProductDitailsPmb (typed to list, entity)
  Integer UserId
  Integer ProductId

ProductRelationPmb (typed to list, entity)
  Integer ProductId

CartInTotalPricePmb (typed to list, entity)
  Integer UserId
2020-05-06 21:36:37,186 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-05-06 21:36:37,490 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-06 21:36:37,492 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-06 21:36:37,522 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-05-06 21:36:37,527 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-05-06 21:36:37,551 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-06 21:36:37,552 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-05-06 21:36:37,713 [main] INFO  (Database#info():2846) -     parse('CartInProductDitails')
2020-05-06 21:36:37,774 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-05-06 21:36:37,807 [main] INFO  (Database#info():2846) -     parse('CartInTotalPrice')
2020-05-06 21:36:37,830 [main] INFO  (Database#info():2846) - }
2020-05-06 21:36:37,833 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-05-06 21:36:37,856 [main] INFO  (Database#info():2846) -     parse('CartInProductDitailsPmb');
2020-05-06 21:36:37,898 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-05-06 21:36:37,915 [main] INFO  (Database#info():2846) -     parse('CartInTotalPricePmb');
2020-05-06 21:36:37,957 [main] INFO  (Database#info():2846) - }
2020-05-06 21:36:38,083 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 3

  CartBhv_selectCartInProductDitails.sql
  ProductBhv_selectProductRelation.sql
  StockBhv_selectCartInTotalPrice.sql
- - - - - - - - - -/
2020-05-06 21:36:38,100 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-06 21:36:38,102 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-06 21:36:38,110 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-06 21:36:38,111 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-06 21:36:38,227 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s120ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-05-07 22:51:48,692 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-05-07 22:51:48,710 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-05-07 22:51:48,711 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-05-07 22:51:48,716 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-05-07 22:51:48,717 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-05-07 22:51:48,827 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 22:51:48,829 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-07 22:51:48,829 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-07 22:51:48,831 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-07 22:51:48,952 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-05-07 22:51:48,953 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-05-07 22:51:48,954 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-05-07 22:51:49,069 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-07 22:51:49,378 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-05-07 22:51:49,476 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-07 22:51:51,102 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-07 22:51:51,105 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-07 22:51:51,108 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-05-07 22:51:51,114 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-05-07 22:51:51,115 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-05-07 22:51:51,116 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-05-07 22:51:51,164 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-05-07 22:51:51,200 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-05-07 22:51:51,228 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-05-07 22:51:51,253 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-05-07 22:51:51,254 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-07 22:51:51,255 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-05-07 22:51:51,257 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-05-07 22:51:51,347 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-05-07 22:51:51,370 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-05-07 22:51:51,404 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-05-07 22:51:51,430 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-05-07 22:51:51,450 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-05-07 22:51:51,451 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-05-07 22:51:51,452 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-05-07 22:51:51,452 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-05-07 22:51:51,453 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-05-07 22:51:51,456 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-05-07 22:51:51,469 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-05-07 22:51:51,469 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-05-07 22:51:51,472 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-05-07 22:51:51,500 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-05-07 22:51:51,509 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-07 22:51:51,628 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1555) -  -> different from previous (schema diff)
2020-05-07 22:51:51,640 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1557) - ...Serializing schema-diff:
2020-05-07 22:51:51,641 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1558) -   filePath = ./schema/project-history-dfclient.diffmap
2020-05-07 22:51:51,679 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-07 22:51:51,961 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s287ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-05-07 22:51:54,734 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-05-07 22:51:54,742 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-05-07 22:51:54,743 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-05-07 22:51:54,747 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-05-07 22:51:54,748 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-05-07 22:51:54,813 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 22:51:54,815 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-07 22:51:54,816 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-07 22:51:54,816 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-07 22:51:54,824 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-05-07 22:51:54,826 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-05-07 22:51:54,827 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-05-07 22:51:54,832 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-05-07 22:51:54,866 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-05-07 22:51:54,885 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-05-07 22:51:55,057 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-07 22:51:55,196 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-07 22:51:55,198 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-07 22:51:55,200 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-07 22:51:55,202 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-07 22:51:55,203 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-07 22:51:55,208 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-07 22:51:55,216 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-07 22:51:55,217 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-07 22:51:55,259 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-07 22:51:55,318 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-07 22:51:55,566 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-05-07 22:51:55,921 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-05-07 22:51:55,950 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-05-07 22:51:56,047 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=9
2020-05-07 22:51:56,569 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-05-07 22:51:56,570 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-05-07 22:51:56,602 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-05-07 22:51:56,924 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-05-07 22:51:56,926 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-05-07 22:51:56,956 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-07 22:51:57,326 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-07 22:51:57,328 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-07 22:51:57,452 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-07 22:51:57,468 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-07 22:51:57,469 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-07 22:51:57,470 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-07 22:51:57,763 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-07 22:51:57,766 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-07 22:51:58,130 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-07 22:51:58,131 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-07 22:51:58,303 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s606ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-05-07 22:52:05,847 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-05-07 22:52:05,855 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-05-07 22:52:05,856 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-05-07 22:52:05,858 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-05-07 22:52:05,860 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-05-07 22:52:05,916 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 22:52:05,918 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-07 22:52:05,921 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-07 22:52:05,924 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-07 22:52:05,980 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-05-07 22:52:05,981 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-05-07 22:52:06,112 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-07 22:52:06,217 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-05-07 22:52:06,729 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-05-07 22:52:06,741 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-07 22:52:06,742 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-07 22:52:06,746 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-07 22:52:06,749 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-07 22:52:06,750 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-07 22:52:06,755 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-07 22:52:06,759 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-07 22:52:06,760 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-07 22:52:06,764 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-07 22:52:06,791 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-07 22:52:06,881 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-05-07 22:52:06,882 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-05-07 22:52:06,883 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-05-07 22:52:06,884 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-05-07 22:52:06,885 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-05-07 22:52:06,886 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-05-07 22:52:06,887 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-05-07 22:52:06,888 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-05-07 22:52:06,890 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-05-07 22:52:06,893 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-05-07 22:52:06,948 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-05-07 22:52:06,953 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-05-07 22:52:06,982 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-05-07 22:52:07,023 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-05-07 22:52:07,045 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-05-07 22:52:07,109 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-05-07 22:52:07,135 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-05-07 22:52:07,169 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-05-07 22:52:07,197 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-05-07 22:52:07,227 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-05-07 22:52:07,275 [main] INFO  (Database#info():2846) - }
2020-05-07 22:52:07,275 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-05-07 22:52:07,277 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-05-07 22:52:07,322 [main] INFO  (Database#info():2846) - }
2020-05-07 22:52:07,330 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-05-07 22:52:07,373 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-07 22:52:07,374 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-05-07 22:52:07,376 [main] INFO  (Database#info():2846) -     parse('cart');
2020-05-07 22:52:08,052 [main] INFO  (Database#info():2846) -     parse('orders');
2020-05-07 22:52:08,565 [main] INFO  (Database#info():2846) -     parse('product');
2020-05-07 22:52:09,164 [main] INFO  (Database#info():2846) -     parse('stock');
2020-05-07 22:52:09,663 [main] INFO  (Database#info():2846) -     parse('user');
2020-05-07 22:52:10,097 [main] INFO  (Database#info():2846) - }
2020-05-07 22:52:10,127 [main] INFO  (Database#info():2846) -  
2020-05-07 22:52:10,654 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-07 22:52:10,658 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-07 22:52:10,680 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-07 22:52:10,698 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s876ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-05-07 22:52:18,178 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-07 22:52:18,186 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-07 22:52:18,188 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-07 22:52:18,189 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-07 22:52:18,193 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-07 22:52:18,260 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 22:52:18,261 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-07 22:52:18,262 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-07 22:52:18,270 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-07 22:52:18,383 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-07 22:52:18,406 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-07 22:52:19,015 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-07 22:52:19,018 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-07 22:52:19,159 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-07 22:52:19,235 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-07 22:52:19,238 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-07 22:52:19,240 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-07 22:52:19,288 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-07 22:52:19,289 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: StockBhv_selectCartInTotalPrice.sql
2020-05-07 22:52:19,295 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInTotalPrice

 [df:description]
  カートにある全ての商品の合計金額を取得

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select sum(c.cart_num * p.price) as total_price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
2020-05-07 22:52:19,333 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-07 22:52:19,336 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=3, failure=0 (in 3 files)
2020-05-07 22:52:19,338 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-07 22:52:19,527 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s391ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql
  o StockBhv_selectCartInTotalPrice.sql

   o: OK (3)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-07 22:52:21,527 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-05-07 22:52:21,533 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-05-07 22:52:21,534 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-05-07 22:52:21,535 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-05-07 22:52:21,536 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-05-07 22:52:21,576 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 22:52:21,577 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-07 22:52:21,578 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-07 22:52:21,579 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-07 22:52:21,611 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-05-07 22:52:21,612 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-05-07 22:52:21,624 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-07 22:52:21,800 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-07 22:52:21,811 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-07 22:52:22,141 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-07 22:52:22,142 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-07 22:52:22,151 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-07 22:52:22,294 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-07 22:52:22,296 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-07 22:52:22,300 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null*/
   where
   p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by p.product_id desc
2020-05-07 22:52:22,347 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-07 22:52:22,348 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: StockBhv_selectCartInTotalPrice.sql
2020-05-07 22:52:22,350 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInTotalPrice

 [df:description]
  カートにある全ての商品の合計金額を取得

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select sum(c.cart_num * p.price) as total_price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
2020-05-07 22:52:22,387 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-07 22:52:22,387 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=3, failure=0 (in 3 files)
2020-05-07 22:52:22,396 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-05-07 22:52:22,397 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-05-07 22:52:22,427 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-07 22:52:22,438 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-07 22:52:22,439 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-07 22:52:22,440 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-07 22:52:22,516 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-05-07 22:52:22,517 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-07 22:52:22,518 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-05-07 22:52:22,520 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-05-07 22:52:22,595 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-05-07 22:52:22,596 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-05-07 22:52:22,597 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-05-07 22:52:22,599 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-05-07 22:52:22,600 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-05-07 22:52:22,623 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
CartInProductDitails
  cart_id INT(11) related to cart.cart_id
  cart_num INT(11) related to cart.cart_num
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image

ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_id INT(11) related to stock.stock_id
  stock_num INT(11) related to stock.stock_num
  temporary_sales INT(11) related to stock.temporary_sales

CartInTotalPrice
  total_price DOUBLE(18)
2020-05-07 22:52:22,656 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-05-07 22:52:22,659 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-05-07 22:52:22,659 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-05-07 22:52:22,662 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
CartInProductDitailsPmb (typed to list, entity)
  Integer UserId
  Integer ProductId

ProductRelationPmb (typed to list, entity)
  Integer ProductId

CartInTotalPricePmb (typed to list, entity)
  Integer UserId
2020-05-07 22:52:22,690 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-05-07 22:52:23,134 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-07 22:52:23,136 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-07 22:52:23,152 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-05-07 22:52:23,156 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-05-07 22:52:23,198 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-07 22:52:23,200 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-05-07 22:52:23,345 [main] INFO  (Database#info():2846) -     parse('CartInProductDitails')
2020-05-07 22:52:23,528 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-05-07 22:52:23,597 [main] INFO  (Database#info():2846) -     parse('CartInTotalPrice')
2020-05-07 22:52:23,613 [main] INFO  (Database#info():2846) - }
2020-05-07 22:52:23,617 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-05-07 22:52:23,643 [main] INFO  (Database#info():2846) -     parse('CartInProductDitailsPmb');
2020-05-07 22:52:23,746 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-05-07 22:52:23,788 [main] INFO  (Database#info():2846) -     parse('CartInTotalPricePmb');
2020-05-07 22:52:23,824 [main] INFO  (Database#info():2846) - }
2020-05-07 22:52:24,035 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 3

  CartBhv_selectCartInProductDitails.sql
  ProductBhv_selectProductRelation.sql
  StockBhv_selectCartInTotalPrice.sql
- - - - - - - - - -/
2020-05-07 22:52:24,086 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-07 22:52:24,090 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-07 22:52:24,104 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-07 22:52:24,105 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-07 22:52:24,303 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s793ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-05-13 16:18:47,427 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-13 16:18:47,433 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-13 16:18:47,433 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-13 16:18:47,434 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-13 16:18:47,435 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-13 16:18:47,471 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-13 16:18:47,472 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-13 16:18:47,473 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-13 16:18:47,473 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-13 16:18:47,552 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-13 16:18:47,581 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-13 16:18:48,581 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-13 16:18:48,581 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-13 16:18:48,659 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-13 16:18:48,753 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:18:48,753 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-13 16:18:48,769 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!
-- !!String ProductName!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
   where
  /*IF pmb.ProductId != null*/
   p.product_id = /*pmb.ProductId*/1
  /*END*/
  /*IF pmb.ProductName != null*/
   p.name = /*pmb.ProductName*/%foo%
  /*END*/
 order by p.product_id desc
2020-05-13 16:18:48,847 [main] WARN  (DfSqlFileRunnerExecute#showContinueWarnLog():110) - *Failure: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
/nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p.name = /*pmb.ProductName*/%foo%
  /*END*/
 order by p.product_id desc' at line 25
(SQLState=42000 ErrorCode=1064)
nnnnnnnnnnnnnnnnnnnn/
2020-05-13 16:18:48,863 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=0 failure=1

2020-05-13 16:18:48,863 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: StockBhv_selectCartInTotalPrice.sql
2020-05-13 16:18:48,878 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInTotalPrice

 [df:description]
  カートにある全ての商品の合計金額を取得

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select sum(c.cart_num * p.price) as total_price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
2020-05-13 16:18:48,909 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:18:48,909 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=1 (in 3 files)
2020-05-13 16:18:48,925 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'OutsideSqlTest'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.7.29-0ubuntu0.18.04.1

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.DfOutsideSqlTestFailureFoundException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Found the failure SQL by the OutsideSqlTest.

[Advice]
You can see the exception info
after each SQL logging like this:

  ...Firing [SQL-file]
  SQL: [SQL-string]
  *Failure: [SQLException-class]
  /nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn...
  [SQLException-message]
  [SQLState-info]
  nnnnnnnnnn/

* * * * * * * * * */
	at org.dbflute.task.DfOutsideSqlTestTask.throwOutsideSqlTestFailureFoundException(DfOutsideSqlTestTask.java:335)
	at org.dbflute.task.DfOutsideSqlTestTask.handleSqlFileFailure(DfOutsideSqlTestTask.java:314)
	at org.dbflute.task.DfOutsideSqlTestTask.doExecute(DfOutsideSqlTestTask.java:103)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2020-05-13 16:18:48,972 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-13 16:18:49,050 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s651ms *Abort

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  x ProductBhv_selectProductRelation.sql
   -> You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p.name = /*pmb.ProductName*/%foo%...
  o StockBhv_selectCartInTotalPrice.sql

   o: OK (2)
   x: Failure exists (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-13 16:20:13,128 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-13 16:20:13,128 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-13 16:20:13,128 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-13 16:20:13,128 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-13 16:20:13,128 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-13 16:20:13,180 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-13 16:20:13,181 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-13 16:20:13,182 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-13 16:20:13,183 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-13 16:20:13,258 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-13 16:20:13,286 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-13 16:20:14,035 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-13 16:20:14,035 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-13 16:20:14,098 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-13 16:20:14,129 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:20:14,129 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-13 16:20:14,129 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!
-- !!String ProductName!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
   where
  /*IF pmb.ProductId != null*/
   p.product_id = /*pmb.ProductId*/1
  /*END*/
  /*IF pmb.ProductName != null*/
   p.name like /*pmb.ProductName*/%foo%
  /*END*/
 order by p.product_id desc
2020-05-13 16:20:14,188 [main] WARN  (DfSqlFileRunnerExecute#showContinueWarnLog():110) - *Failure: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
/nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p.name like /*pmb.ProductName*/%foo%
  /*END*/
 order by p.product_id desc' at line 25
(SQLState=42000 ErrorCode=1064)
nnnnnnnnnnnnnnnnnnnn/
2020-05-13 16:20:14,206 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=0 failure=1

2020-05-13 16:20:14,209 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: StockBhv_selectCartInTotalPrice.sql
2020-05-13 16:20:14,214 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInTotalPrice

 [df:description]
  カートにある全ての商品の合計金額を取得

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select sum(c.cart_num * p.price) as total_price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
2020-05-13 16:20:14,252 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:20:14,254 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=1 (in 3 files)
2020-05-13 16:20:14,266 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'OutsideSqlTest'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.7.29-0ubuntu0.18.04.1

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.DfOutsideSqlTestFailureFoundException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Found the failure SQL by the OutsideSqlTest.

[Advice]
You can see the exception info
after each SQL logging like this:

  ...Firing [SQL-file]
  SQL: [SQL-string]
  *Failure: [SQLException-class]
  /nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn...
  [SQLException-message]
  [SQLState-info]
  nnnnnnnnnn/

* * * * * * * * * */
	at org.dbflute.task.DfOutsideSqlTestTask.throwOutsideSqlTestFailureFoundException(DfOutsideSqlTestTask.java:335)
	at org.dbflute.task.DfOutsideSqlTestTask.handleSqlFileFailure(DfOutsideSqlTestTask.java:314)
	at org.dbflute.task.DfOutsideSqlTestTask.doExecute(DfOutsideSqlTestTask.java:103)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2020-05-13 16:20:14,352 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-13 16:20:14,438 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s334ms *Abort

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  x ProductBhv_selectProductRelation.sql
   -> You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p.name like /*pmb.ProductName*/%foo%...
  o StockBhv_selectCartInTotalPrice.sql

   o: OK (2)
   x: Failure exists (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-13 16:21:53,931 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-13 16:21:53,931 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-13 16:21:53,931 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-13 16:21:53,931 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-13 16:21:53,946 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-13 16:21:53,977 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-13 16:21:53,977 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-13 16:21:53,977 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-13 16:21:53,977 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-13 16:21:54,040 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-13 16:21:54,071 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-13 16:21:54,759 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-13 16:21:54,759 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-13 16:21:54,822 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-13 16:21:54,853 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:21:54,853 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-13 16:21:54,853 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!
-- !!String ProductName!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
   where
  /*IF pmb.ProductId != null*/
   p.product_id = /*pmb.ProductId*/1
  /*END*/
  /*IF pmb.ProductName != null*/
   p.name like /*pmb.ProductName*/'%foo%'
  /*END*/
 order by p.product_id desc
2020-05-13 16:21:54,900 [main] WARN  (DfSqlFileRunnerExecute#showContinueWarnLog():110) - *Failure: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
/nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p.name like /*pmb.ProductName*/'%foo%'
  /*END*/
 order by p.product_id desc' at line 25
(SQLState=42000 ErrorCode=1064)
nnnnnnnnnnnnnnnnnnnn/
2020-05-13 16:21:54,916 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=0 failure=1

2020-05-13 16:21:54,931 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: StockBhv_selectCartInTotalPrice.sql
2020-05-13 16:21:54,931 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInTotalPrice

 [df:description]
  カートにある全ての商品の合計金額を取得

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select sum(c.cart_num * p.price) as total_price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
2020-05-13 16:21:54,962 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:21:54,962 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=1 (in 3 files)
2020-05-13 16:21:54,962 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'OutsideSqlTest'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.7.29-0ubuntu0.18.04.1

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.DfOutsideSqlTestFailureFoundException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Found the failure SQL by the OutsideSqlTest.

[Advice]
You can see the exception info
after each SQL logging like this:

  ...Firing [SQL-file]
  SQL: [SQL-string]
  *Failure: [SQLException-class]
  /nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn...
  [SQLException-message]
  [SQLState-info]
  nnnnnnnnnn/

* * * * * * * * * */
	at org.dbflute.task.DfOutsideSqlTestTask.throwOutsideSqlTestFailureFoundException(DfOutsideSqlTestTask.java:335)
	at org.dbflute.task.DfOutsideSqlTestTask.handleSqlFileFailure(DfOutsideSqlTestTask.java:314)
	at org.dbflute.task.DfOutsideSqlTestTask.doExecute(DfOutsideSqlTestTask.java:103)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2020-05-13 16:21:55,025 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-13 16:21:55,087 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s188ms *Abort

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  x ProductBhv_selectProductRelation.sql
   -> You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p.name like /*pmb.ProductName*/'%foo%'...
  o StockBhv_selectCartInTotalPrice.sql

   o: OK (2)
   x: Failure exists (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-13 16:25:28,187 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-13 16:25:28,192 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-13 16:25:28,193 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-13 16:25:28,194 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-13 16:25:28,194 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-13 16:25:28,232 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-13 16:25:28,233 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-13 16:25:28,234 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-13 16:25:28,235 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-13 16:25:28,305 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-13 16:25:28,333 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-13 16:25:29,025 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-13 16:25:29,025 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-13 16:25:29,071 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-13 16:25:29,103 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:25:29,103 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-13 16:25:29,103 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!
-- !!String ProductName:likeContain!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
   where
  /*IF pmb.ProductId != null*/
   p.product_id = /*pmb.ProductId*/1
  /*END*/
  /*IF pmb.ProductName != null*/
   p.name like /*pmb.ProductName*/'%商品%'
  /*END*/
 order by p.product_id desc
2020-05-13 16:25:29,165 [main] WARN  (DfSqlFileRunnerExecute#showContinueWarnLog():110) - *Failure: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
/nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p.name like /*pmb.ProductName*/'%商品%'
  /*END*/
 order by p.product_id desc' at line 25
(SQLState=42000 ErrorCode=1064)
nnnnnnnnnnnnnnnnnnnn/
2020-05-13 16:25:29,187 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=0 failure=1

2020-05-13 16:25:29,189 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: StockBhv_selectCartInTotalPrice.sql
2020-05-13 16:25:29,193 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInTotalPrice

 [df:description]
  カートにある全ての商品の合計金額を取得

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select sum(c.cart_num * p.price) as total_price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
2020-05-13 16:25:29,232 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:25:29,237 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=1 (in 3 files)
2020-05-13 16:25:29,244 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'OutsideSqlTest'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.7.29-0ubuntu0.18.04.1

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.DfOutsideSqlTestFailureFoundException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Found the failure SQL by the OutsideSqlTest.

[Advice]
You can see the exception info
after each SQL logging like this:

  ...Firing [SQL-file]
  SQL: [SQL-string]
  *Failure: [SQLException-class]
  /nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn...
  [SQLException-message]
  [SQLState-info]
  nnnnnnnnnn/

* * * * * * * * * */
	at org.dbflute.task.DfOutsideSqlTestTask.throwOutsideSqlTestFailureFoundException(DfOutsideSqlTestTask.java:335)
	at org.dbflute.task.DfOutsideSqlTestTask.handleSqlFileFailure(DfOutsideSqlTestTask.java:314)
	at org.dbflute.task.DfOutsideSqlTestTask.doExecute(DfOutsideSqlTestTask.java:103)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2020-05-13 16:25:29,322 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-13 16:25:29,413 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s248ms *Abort

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  x ProductBhv_selectProductRelation.sql
   -> You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p.name like /*pmb.ProductName*/'%商品%'...
  o StockBhv_selectCartInTotalPrice.sql

   o: OK (2)
   x: Failure exists (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-13 16:27:22,802 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-13 16:27:22,807 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-13 16:27:22,808 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-13 16:27:22,809 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-13 16:27:22,810 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-13 16:27:22,849 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-13 16:27:22,850 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-13 16:27:22,851 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-13 16:27:22,851 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-13 16:27:22,912 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-13 16:27:22,943 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-13 16:27:23,648 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-13 16:27:23,649 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-13 16:27:23,704 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-13 16:27:23,738 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:27:23,740 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-13 16:27:23,748 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!
-- !!String ProductName:likeContain!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null　|| pmb.ProductName != null */
   where
   /*END*/
  /*IF pmb.ProductId != null*/
   p.product_id = /*pmb.ProductId*/1
  /*END*/
  /*IF pmb.ProductName != null*/
   p.name like /*pmb.ProductName*/'%商品%'
  /*END*/
 order by p.product_id desc
2020-05-13 16:27:23,798 [main] WARN  (DfSqlFileRunnerExecute#showContinueWarnLog():110) - *Failure: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
/nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p.name like /*pmb.ProductName*/'%商品%'
  /*END*/
 order by p.product_id desc' at line 27
(SQLState=42000 ErrorCode=1064)
nnnnnnnnnnnnnnnnnnnn/
2020-05-13 16:27:23,818 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=0 failure=1

2020-05-13 16:27:23,820 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: StockBhv_selectCartInTotalPrice.sql
2020-05-13 16:27:23,822 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInTotalPrice

 [df:description]
  カートにある全ての商品の合計金額を取得

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select sum(c.cart_num * p.price) as total_price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
2020-05-13 16:27:23,862 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:27:23,863 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=2, failure=1 (in 3 files)
2020-05-13 16:27:23,874 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'OutsideSqlTest'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.7.29-0ubuntu0.18.04.1

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.DfOutsideSqlTestFailureFoundException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Found the failure SQL by the OutsideSqlTest.

[Advice]
You can see the exception info
after each SQL logging like this:

  ...Firing [SQL-file]
  SQL: [SQL-string]
  *Failure: [SQLException-class]
  /nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn...
  [SQLException-message]
  [SQLState-info]
  nnnnnnnnnn/

* * * * * * * * * */
	at org.dbflute.task.DfOutsideSqlTestTask.throwOutsideSqlTestFailureFoundException(DfOutsideSqlTestTask.java:335)
	at org.dbflute.task.DfOutsideSqlTestTask.handleSqlFileFailure(DfOutsideSqlTestTask.java:314)
	at org.dbflute.task.DfOutsideSqlTestTask.doExecute(DfOutsideSqlTestTask.java:103)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2020-05-13 16:27:23,928 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-13 16:27:23,991 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s202ms *Abort

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  x ProductBhv_selectProductRelation.sql
   -> You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p.name like /*pmb.ProductName*/'%商品%'...
  o StockBhv_selectCartInTotalPrice.sql

   o: OK (2)
   x: Failure exists (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-13 16:33:06,954 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-13 16:33:06,954 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-13 16:33:06,970 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-13 16:33:06,970 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-13 16:33:06,970 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-13 16:33:07,001 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-13 16:33:07,001 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-13 16:33:07,001 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-13 16:33:07,001 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-13 16:33:07,064 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-13 16:33:07,095 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-13 16:33:07,803 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-13 16:33:07,804 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-13 16:33:07,861 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-13 16:33:07,893 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:33:07,893 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-13 16:33:07,893 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!
-- !!String ProductName:likeContain!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null　|| pmb.ProductName != null */
   where
   /*END*/
  /*IF pmb.ProductId != null*/
   p.product_id = /*pmb.ProductId*/1
  /*END*/
  /*IF pmb.ProductName != null*/
    /*IF pmb.ProductId != null*/
    AND
    /*END*/
   p.name like /*pmb.ProductName*/'%商品%'
  /*END*/
 order by p.product_id desc
2020-05-13 16:33:08,049 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:33:08,049 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: StockBhv_selectCartInTotalPrice.sql
2020-05-13 16:33:08,065 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInTotalPrice

 [df:description]
  カートにある全ての商品の合計金額を取得

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select sum(c.cart_num * p.price) as total_price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
2020-05-13 16:33:08,098 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:33:08,098 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=3, failure=0 (in 3 files)
2020-05-13 16:33:08,098 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-13 16:33:08,200 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s268ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql
  o StockBhv_selectCartInTotalPrice.sql

   o: OK (3)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-13 16:33:20,274 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-05-13 16:33:20,280 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-05-13 16:33:20,281 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-05-13 16:33:20,282 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-05-13 16:33:20,283 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-05-13 16:33:20,325 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-13 16:33:20,326 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-13 16:33:20,327 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-13 16:33:20,328 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-13 16:33:20,493 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-05-13 16:33:20,495 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-05-13 16:33:20,496 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-05-13 16:33:20,532 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-13 16:33:20,665 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-05-13 16:33:20,688 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-13 16:33:21,402 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-13 16:33:21,404 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-13 16:33:21,408 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-05-13 16:33:21,411 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-05-13 16:33:21,412 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {web.$$NoNameSchema$$ as main}
2020-05-13 16:33:21,413 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-05-13 16:33:21,508 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'web' order by table_name asc
2020-05-13 16:33:21,533 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'web' order by table_name asc, column_name asc
2020-05-13 16:33:21,549 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'web' and DATA_TYPE = 'datetime'
2020-05-13 16:33:21,575 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-05-13 16:33:21,576 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-13 16:33:21,577 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-05-13 16:33:21,579 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.cart(TABLE)
2020-05-13 16:33:21,626 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.orders(TABLE)
2020-05-13 16:33:21,639 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.product(TABLE)
2020-05-13 16:33:21,651 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.stock(TABLE)
2020-05-13 16:33:21,666 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ web.user(TABLE)
2020-05-13 16:33:21,679 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-05-13 16:33:21,679 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-05-13 16:33:21,680 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 5
2020-05-13 16:33:21,691 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-05-13 16:33:21,692 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-05-13 16:33:21,695 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-05-13 16:33:21,702 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-05-13 16:33:21,703 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-dfclient.xml
2020-05-13 16:33:21,708 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-05-13 16:33:21,725 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-05-13 16:33:21,729 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-13 16:33:21,833 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-05-13 16:33:21,834 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-13 16:33:21,959 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s703ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-05-13 16:33:23,660 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-05-13 16:33:23,664 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-05-13 16:33:23,665 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-05-13 16:33:23,666 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-05-13 16:33:23,667 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-05-13 16:33:23,702 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-13 16:33:23,704 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-13 16:33:23,705 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-13 16:33:23,706 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-13 16:33:23,710 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-05-13 16:33:23,710 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-05-13 16:33:23,711 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-05-13 16:33:23,713 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-05-13 16:33:23,714 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-05-13 16:33:23,717 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-05-13 16:33:23,773 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-13 16:33:23,846 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-13 16:33:23,846 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-13 16:33:23,849 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-13 16:33:23,851 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-13 16:33:23,852 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-13 16:33:23,855 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-13 16:33:23,858 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-13 16:33:23,859 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-13 16:33:23,878 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-13 16:33:23,911 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-13 16:33:24,010 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-05-13 16:33:24,250 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-05-13 16:33:24,261 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-05-13 16:33:24,338 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=9
2020-05-13 16:33:24,478 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-05-13 16:33:24,479 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-05-13 16:33:24,501 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-05-13 16:33:24,696 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():57) -  
2020-05-13 16:33:24,696 [main] INFO  (DfSchemaHtmlDataProcedure#getAvailableProcedureList():58) - ...Setting up procedures for documents
2020-05-13 16:33:24,710 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-13 16:33:24,993 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-13 16:33:24,993 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-13 16:33:25,071 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-13 16:33:25,242 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-13 16:33:25,242 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-13 16:33:25,242 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-13 16:33:25,383 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-13 16:33:25,398 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-13 16:33:25,633 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-13 16:33:25,633 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-13 16:33:25,726 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s080ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-05-13 16:33:30,366 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-05-13 16:33:30,371 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-05-13 16:33:30,372 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-05-13 16:33:30,372 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-05-13 16:33:30,373 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-05-13 16:33:30,410 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-13 16:33:30,411 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-13 16:33:30,412 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-13 16:33:30,413 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-13 16:33:30,446 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-05-13 16:33:30,447 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-05-13 16:33:30,520 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-13 16:33:30,579 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-05-13 16:33:30,884 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-05-13 16:33:30,886 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-13 16:33:30,886 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-13 16:33:30,886 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-13 16:33:30,886 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-13 16:33:30,886 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-13 16:33:30,886 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-13 16:33:30,901 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-13 16:33:30,901 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-13 16:33:30,901 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-13 16:33:30,917 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-13 16:33:30,932 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-05-13 16:33:30,932 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-05-13 16:33:30,932 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-05-13 16:33:30,932 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-05-13 16:33:30,932 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-05-13 16:33:30,932 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-05-13 16:33:30,932 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-05-13 16:33:30,932 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-05-13 16:33:30,948 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-05-13 16:33:30,948 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-05-13 16:33:30,979 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-05-13 16:33:30,979 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-05-13 16:33:30,995 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-05-13 16:33:30,995 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-05-13 16:33:31,011 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-05-13 16:33:31,026 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-05-13 16:33:31,042 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-05-13 16:33:31,042 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-05-13 16:33:31,042 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-05-13 16:33:31,057 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-05-13 16:33:31,057 [main] INFO  (Database#info():2846) - }
2020-05-13 16:33:31,057 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-05-13 16:33:31,057 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-05-13 16:33:31,073 [main] INFO  (Database#info():2846) - }
2020-05-13 16:33:31,089 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-05-13 16:33:31,120 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-13 16:33:31,120 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-05-13 16:33:31,135 [main] INFO  (Database#info():2846) -     parse('cart');
2020-05-13 16:33:31,345 [main] INFO  (Database#info():2846) -     parse('orders');
2020-05-13 16:33:31,460 [main] INFO  (Database#info():2846) -     parse('product');
2020-05-13 16:33:31,585 [main] INFO  (Database#info():2846) -     parse('stock');
2020-05-13 16:33:31,731 [main] INFO  (Database#info():2846) -     parse('user');
2020-05-13 16:33:31,867 [main] INFO  (Database#info():2846) - }
2020-05-13 16:33:31,869 [main] INFO  (Database#info():2846) -  
2020-05-13 16:33:32,048 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-13 16:33:32,051 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-13 16:33:32,064 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-13 16:33:32,088 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s740ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-05-13 16:33:34,618 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-13 16:33:34,622 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-13 16:33:34,623 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-13 16:33:34,624 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-13 16:33:34,625 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-13 16:33:34,659 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-13 16:33:34,660 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-13 16:33:34,661 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-13 16:33:34,662 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-13 16:33:34,729 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-13 16:33:34,740 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-13 16:33:35,009 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-13 16:33:35,009 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-13 16:33:35,056 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-13 16:33:35,088 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:33:35,088 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-13 16:33:35,088 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!
-- !!String ProductName:likeContain!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null　|| pmb.ProductName != null */
   where
   /*END*/
  /*IF pmb.ProductId != null*/
   p.product_id = /*pmb.ProductId*/1
  /*END*/
  /*IF pmb.ProductName != null*/
    /*IF pmb.ProductId != null*/
    AND
    /*END*/
   p.name like /*pmb.ProductName*/'%商品%'
  /*END*/
 order by p.product_id desc
2020-05-13 16:33:35,119 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:33:35,134 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: StockBhv_selectCartInTotalPrice.sql
2020-05-13 16:33:35,134 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  selectCartInTotalPrice

 [df:description]
  カートにある全ての商品の合計金額を取得

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select sum(c.cart_num * p.price) as total_price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
2020-05-13 16:33:35,163 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-13 16:33:35,167 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=3, failure=0 (in 3 files)
2020-05-13 16:33:35,168 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-13 16:33:35,271 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s674ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o CartBhv_selectCartInProductDitails.sql
  o ProductBhv_selectProductRelation.sql
  o StockBhv_selectCartInTotalPrice.sql

   o: OK (3)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-13 16:33:37,121 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-05-13 16:33:37,121 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-05-13 16:33:37,121 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-05-13 16:33:37,121 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-05-13 16:33:37,121 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-05-13 16:33:37,199 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-13 16:33:37,200 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2020-05-13 16:33:37,201 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/web
2020-05-13 16:33:37,202 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2020-05-13 16:33:37,236 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-05-13 16:33:37,237 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-05-13 16:33:37,283 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-13 16:33:37,426 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: CartBhv_selectCartInProductDitails.sql
2020-05-13 16:33:37,437 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-13 16:33:37,902 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.29-0ubuntu0.18.04.1
2020-05-13 16:33:37,902 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2020-05-13 16:33:37,902 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInProductDitails

 [df:description]
  カート一覧ページに必要な情報を取得
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!
-- !!Integer ProductId!!

select c.cart_id, c.cart_num, p.product_id, p.name, p.description, p.price, p.unit, p.image
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
  /*IF pmb.ProductId != null*/
  AND p.product_id = /*pmb.ProductId*/1
  /*END*/
 order by c.created asc
2020-05-13 16:33:38,074 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-13 16:33:38,074 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: ProductBhv_selectProductRelation.sql
2020-05-13 16:33:38,074 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectProductRelation

 [df:description]
  商品に関する全てのテーブルを検索

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer ProductId!!
-- !!String ProductName:likeContain!!

select p.product_id, p.name, p.description, p.price, p.unit, p.image, p.created, s.stock_id, s.stock_num, s.temporary_sales 
  from product p
  join stock s on p.product_id = s.product_id
  /*IF pmb.ProductId != null　|| pmb.ProductName != null */
   where
   /*END*/
  /*IF pmb.ProductId != null*/
   p.product_id = /*pmb.ProductId*/1
  /*END*/
  /*IF pmb.ProductName != null*/
    /*IF pmb.ProductId != null*/
    AND
    /*END*/
   p.name like /*pmb.ProductName*/'%商品%'
  /*END*/
 order by p.product_id desc
2020-05-13 16:33:38,106 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-13 16:33:38,106 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: StockBhv_selectCartInTotalPrice.sql
2020-05-13 16:33:38,106 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  selectCartInTotalPrice

 [df:description]
  カートにある全ての商品の合計金額を取得

*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!
-- !!Integer UserId!!

select sum(c.cart_num * p.price) as total_price
  from cart c
  join product p on c.product_id = p.product_id
  where
  c.user_id = /*pmb.UserId*/1
2020-05-13 16:33:38,137 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-13 16:33:38,137 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=3, failure=0 (in 3 files)
2020-05-13 16:33:38,137 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2020-05-13 16:33:38,137 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2020-05-13 16:33:38,178 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'web' order by ROUTINE_NAME
2020-05-13 16:33:38,187 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=web
2020-05-13 16:33:38,188 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=0
2020-05-13 16:33:38,189 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=0
2020-05-13 16:33:38,232 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2020-05-13 16:33:38,232 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-13 16:33:38,232 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2020-05-13 16:33:38,232 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2020-05-13 16:33:38,295 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-05-13 16:33:38,295 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-05-13 16:33:38,295 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-05-13 16:33:38,295 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-05-13 16:33:38,295 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-05-13 16:33:38,341 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
CartInProductDitails
  cart_id INT(11) related to cart.cart_id
  cart_num INT(11) related to cart.cart_num
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image

ProductRelation
  product_id INT(11) related to product.product_id
  name VARCHAR(50) related to product.name
  description VARCHAR(5592405) related to product.description
  price DOUBLE(23) related to product.price
  unit VARCHAR(50) related to product.unit
  image VARCHAR(50) related to product.image
  created TIMESTAMP(19) related to product.created
  stock_id INT(11) related to stock.stock_id
  stock_num INT(11) related to stock.stock_num
  temporary_sales INT(11) related to stock.temporary_sales

CartInTotalPrice
  total_price DOUBLE(18)
2020-05-13 16:33:38,373 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-05-13 16:33:38,373 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-05-13 16:33:38,373 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-05-13 16:33:38,373 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
CartInProductDitailsPmb (typed to list, entity)
  Integer UserId
  Integer ProductId

ProductRelationPmb (typed to list, entity)
  Integer ProductId
  String ProductName:likeContain

CartInTotalPricePmb (typed to list, entity)
  Integer UserId
2020-05-13 16:33:38,388 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-05-13 16:33:38,685 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-13 16:33:38,685 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=dfclient
2020-05-13 16:33:38,701 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-05-13 16:33:38,701 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-05-13 16:33:38,732 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-13 16:33:38,732 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-05-13 16:33:38,860 [main] INFO  (Database#info():2846) -     parse('CartInProductDitails')
2020-05-13 16:33:38,922 [main] INFO  (Database#info():2846) -     parse('ProductRelation')
2020-05-13 16:33:38,954 [main] INFO  (Database#info():2846) -     parse('CartInTotalPrice')
2020-05-13 16:33:38,954 [main] INFO  (Database#info():2846) - }
2020-05-13 16:33:38,954 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-05-13 16:33:38,969 [main] INFO  (Database#info():2846) -     parse('CartInProductDitailsPmb');
2020-05-13 16:33:39,005 [main] INFO  (Database#info():2846) -     parse('ProductRelationPmb');
2020-05-13 16:33:39,036 [main] INFO  (Database#info():2846) -     parse('CartInTotalPricePmb');
2020-05-13 16:33:39,068 [main] INFO  (Database#info():2846) - }
2020-05-13 16:33:39,130 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 3

  CartBhv_selectCartInProductDitails.sql
  ProductBhv_selectProductRelation.sql
  StockBhv_selectCartInTotalPrice.sql
- - - - - - - - - -/
2020-05-13 16:33:39,178 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-13 16:33:39,181 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [EC] by http://localhost:8386/
2020-05-13 16:33:39,188 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-13 16:33:39,188 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-13 16:33:39,310 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s245ms

  DBFLUTE_CLIENT: {dfclient}
    database  = mysql (MySQL 5.7.29-0ubuntu0.18.04.1)
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/web
    schema = {web.$$NoNameSchema$$ as main}
    user   = root
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
